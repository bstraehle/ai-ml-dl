{
	"info": {
		"_postman_id": "f8854f16-5d74-4e89-a3db-839d17337efb",
		"name": "üìå Amazon Bedrock API",
		"description": "### Prerequisites\n\n- Postman\n- AWS Account: [https://aws.amazon.com/console/](https://aws.amazon.com/console/)\n    \n\n### Usage\n\n1. Create a fork\n2. Update collection variables\n3. Send requests\n    \n\n### Documentation\n\n- API: [https://docs.aws.amazon.com/bedrock/latest/APIReference/welcome.html](https://docs.aws.amazon.com/bedrock/latest/APIReference/welcome.html)\n- Models: [https://aws.amazon.com/bedrock](https://aws.amazon.com/bedrock/)\n\n### Models\n\nModels include Titan (by Amazon), Claude (by Anthropic), Command (by Cohere), Jurrasic (by AI21 Labs), Llama (by Meta AI, open-weight), Mixtral (by Mistral AI, open-weight), and more.\n\n### About Amazon Bedrock\n\nThe easiest way to build and scale generative AI applications with foundation models.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7643177",
		"_collection_link": "https://www.postman.com/bstraehle/workspace/generative-ai-llm-rest-apis/collection/7643177-f8854f16-5d74-4e89-a3db-839d17337efb?action=share&source=collection_link&creator=7643177"
	},
	"item": [
		{
			"name": "üöÄ Get Started",
			"item": [
				{
					"name": "ai21.j2-ultra-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "ai21.j2-ultra-v1",
									"uuid": "81af2fd5-8302-4537-8487-906ec5acc4dd"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "ai21.j2-ultra-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:46:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "3232"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "55e78777-74a4-46bc-8f8c-d16c03429ffe"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "657"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "16"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "2"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1234,\n    \"prompt\": {\n        \"text\": \"What is the purpose of life\",\n        \"tokens\": [\n            {\n                \"generatedToken\": {\n                    \"token\": \"‚ñÅWhat‚ñÅis‚ñÅthe‚ñÅpurpose\",\n                    \"logprob\": -11.836393356323242,\n                    \"raw_logprob\": -11.836393356323242\n                },\n                \"topTokens\": null,\n                \"textRange\": {\n                    \"start\": 0,\n                    \"end\": 19\n                }\n            },\n            {\n                \"generatedToken\": {\n                    \"token\": \"‚ñÅof‚ñÅlife\",\n                    \"logprob\": -4.381799697875977,\n                    \"raw_logprob\": -4.381799697875977\n                },\n                \"topTokens\": null,\n                \"textRange\": {\n                    \"start\": 19,\n                    \"end\": 27\n                }\n            }\n        ]\n    },\n    \"completions\": [\n        {\n            \"data\": {\n                \"text\": \"\\nI believe the purpose of life is to live a life that gives meaning to our lives. To do this, it is important to understand ourselves and others and to have\",\n                \"tokens\": [\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"<|newline|>\",\n                            \"logprob\": -0.017205970361828804,\n                            \"raw_logprob\": -0.017205970361828804\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 0,\n                            \"end\": 1\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅI‚ñÅbelieve\",\n                            \"logprob\": -4.413031578063965,\n                            \"raw_logprob\": -4.413031578063965\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 1,\n                            \"end\": 10\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅthe‚ñÅpurpose‚ñÅof\",\n                            \"logprob\": -0.39409080147743225,\n                            \"raw_logprob\": -0.39409080147743225\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 10,\n                            \"end\": 25\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅlife‚ñÅis\",\n                            \"logprob\": -0.07450079917907715,\n                            \"raw_logprob\": -0.07450079917907715\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 25,\n                            \"end\": 33\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅto\",\n                            \"logprob\": -2.2860212326049805,\n                            \"raw_logprob\": -2.2860212326049805\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 33,\n                            \"end\": 36\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅlive‚ñÅa‚ñÅlife\",\n                            \"logprob\": -2.0996742248535156,\n                            \"raw_logprob\": -2.0996742248535156\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 36,\n                            \"end\": 48\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅthat‚ñÅgives\",\n                            \"logprob\": -7.02462100982666,\n                            \"raw_logprob\": -7.02462100982666\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 48,\n                            \"end\": 59\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅmeaning‚ñÅto\",\n                            \"logprob\": -1.7205486297607422,\n                            \"raw_logprob\": -1.7205486297607422\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 59,\n                            \"end\": 70\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅour‚ñÅlives\",\n                            \"logprob\": -2.3018875122070312,\n                            \"raw_logprob\": -2.3018875122070312\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 70,\n                            \"end\": 80\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \".\",\n                            \"logprob\": -0.5720572471618652,\n                            \"raw_logprob\": -0.5720572471618652\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 80,\n                            \"end\": 81\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅTo‚ñÅdo‚ñÅthis\",\n                            \"logprob\": -4.980351448059082,\n                            \"raw_logprob\": -4.980351448059082\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 81,\n                            \"end\": 92\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \",\",\n                            \"logprob\": -0.2417134791612625,\n                            \"raw_logprob\": -0.2417134791612625\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 92,\n                            \"end\": 93\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅit‚ñÅis‚ñÅimportant‚ñÅto‚ñÅunderstand\",\n                            \"logprob\": -6.204972743988037,\n                            \"raw_logprob\": -6.204972743988037\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 93,\n                            \"end\": 123\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅourselves‚ñÅand‚ñÅothers\",\n                            \"logprob\": -8.690786361694336,\n                            \"raw_logprob\": -8.690786361694336\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 123,\n                            \"end\": 144\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅand\",\n                            \"logprob\": -2.754805088043213,\n                            \"raw_logprob\": -2.754805088043213\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 144,\n                            \"end\": 148\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅto‚ñÅhave\",\n                            \"logprob\": -3.4914064407348633,\n                            \"raw_logprob\": -3.4914064407348633\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 148,\n                            \"end\": 156\n                        }\n                    }\n                ]\n            },\n            \"finishReason\": {\n                \"reason\": \"length\",\n                \"length\": 16\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "amazon.titan-tg1-large",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "amazon.titan-tg1-large",
									"uuid": "de9a543b-2e39-4214-85f7-6e800e8e5aef"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-tg1-large"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:51:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "771"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "8e6594ed-c3bd-4cac-8e8f-28211a268698"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "3331"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "128"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"inputTextTokenCount\": 6,\n    \"results\": [\n        {\n            \"tokenCount\": 128,\n            \"outputText\": \"\\nLife's purpose is to give it meaning and value. Different people may find different purposes and meanings in their lives, depending on their beliefs, values, and experiences. Some common purposes that people may find include:\\n\\n1. Personal growth and development: Life is a journey of learning and self-improvement. People may seek to learn new skills, knowledge, and experiences, and to grow as individuals and as members of society.\\n2. Relationships: Life is about building and maintaining meaningful relationships with others. This can include family, friends, romantic partners, and community members. Relationships provide support, love, and a sense of belonging\",\n            \"completionReason\": \"LENGTH\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "anthropic.claude-v2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"\\n\\nHuman:What is the purpose of life\\n\\nAssistant:\",\r\n    \"max_tokens_to_sample\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "anthropic.claude-v2",
									"uuid": "02094aaa-e7f9-4556-9d4f-15e8d3265af7"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "modelId",
										"value": "anthropic.claude-v2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"\\n\\nHuman:What is the purpose of life\\n\\nAssistant:\",\r\n    \"max_tokens_to_sample\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "anthropic.claude-v2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:52:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "306"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "65c5fff5-a380-4d97-8371-8bd9d8c137e1"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "1822"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "53"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"completion\": \" I'm an AI assistant created by Anthropic to be helpful, harmless, and honest. I don't have my own purpose or opinions on philosophical questions like the meaning of life. Those are complex topics that humans continue to ponder and debate.\",\n    \"stop_reason\": \"stop_sequence\",\n    \"stop\": \"\\n\\nHuman:\"\n}"
						}
					]
				},
				{
					"name": "cohere.command-text-v14",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\",\r\n    \"temperature\": 0,\r\n    \"p\": 0.9,\r\n    \"max_tokens\": 4096\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "cohere.command-text-v14",
									"uuid": "d6a71347-600f-47d8-b017-295f42ba0fc8"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\",\r\n    \"temperature\": 0,\r\n    \"p\": 0.9,\r\n    \"max_tokens\": 4096\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "cohere.command-text-v14"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:53:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1200"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "d6acba16-99c0-4423-9127-3008bc41032b"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "6281"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "203"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"generations\": [\n        {\n            \"finish_reason\": \"COMPLETE\",\n            \"id\": \"d6dea12a-495a-420b-b922-41beadeada8e\",\n            \"text\": \" The purpose of life is a complex and deeply personal question that has been pondered by philosophers, theologians, and individuals throughout history. There is no single answer to this question, as the purpose of life can vary greatly depending on an individual's beliefs, values, and experiences. \\n\\nSome people may believe that the purpose of life is to seek happiness, others may believe that it is to fulfill a specific destiny or purpose that they were born with, and others may believe that the purpose of life is to contribute to society or to help others. \\n\\nUltimately, the purpose of life is a deeply personal and subjective concept that can be shaped by an individual's beliefs, values, and experiences. It is important to reflect on your own beliefs and values to determine what the purpose of life means to you. \\n\\nIt is also important to note that the purpose of life can change over time as individuals grow and develop. It is a question that can be explored and re-evaluated throughout one's life.\"\n        }\n    ],\n    \"id\": \"d6acba16-99c0-4423-9127-3008bc41032b\",\n    \"prompt\": \"What is the purpose of life\"\n}"
						}
					]
				},
				{
					"name": "meta.llama3-8b-instruct-v1:0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "meta.llama3-8b-instruct-v1:0",
									"uuid": "085850a7-b6b1-4d64-9f78-f0d6817f987e"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "meta.llama3-8b-instruct-v1:0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Apr 2024 12:53:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2744"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "1bee894a-ad44-4089-bf65-4594f82cbe0e"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "4694"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "512"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"generation\": \"?\\nThe purpose of life is a question that has puzzled philosophers, scientists, and theologians for centuries. There is no one definitive answer, as the purpose of life can vary greatly from person to person and culture to culture. However, here are some possible answers to this question:\\n\\n1. To find happiness and fulfillment: Many people believe that the purpose of life is to find happiness and fulfillment. This can be achieved through personal relationships, career success, or pursuing one's passions.\\n2. To learn and grow: Another perspective is that the purpose of life is to learn and grow as a person. This can involve developing new skills, building relationships, and overcoming challenges.\\n3. To make a positive impact: Some people believe that the purpose of life is to make a positive impact on the world. This can be achieved through volunteering, donating to charity, or working to make a difference in one's community.\\n4. To find meaning and purpose: The purpose of life can also be seen as finding meaning and purpose. This can involve discovering one's values and passions, and using them to guide one's decisions and actions.\\n5. To achieve spiritual enlightenment: For some people, the purpose of life is to achieve spiritual enlightenment or to connect with a higher power. This can involve practicing meditation, prayer, or other spiritual disciplines.\\n6. To experience the beauty of life: Finally, some people believe that the purpose of life is simply to experience the beauty of life. This can involve appreciating the natural world, enjoying relationships, and experiencing the joys of life.\\n\\nUltimately, the purpose of life is a personal and subjective question that can have different answers for different people. What is important is that we each find our own purpose and meaning in life, and that we live in a way that is authentic and fulfilling to us. Read more\\nWhat is the meaning of life?\\nThe meaning of life is a question that has puzzled philosophers, scientists, and theologians for centuries. There is no one definitive answer, as the meaning of life can vary greatly from person to person and culture to culture. However, here are some possible answers to this question:\\n\\n1. To find happiness and fulfillment: Many people believe that the meaning of life is to find happiness and fulfillment. This can be achieved through personal relationships, career success, or pursuing one's passions.\\n2. To learn and grow: Another perspective is that the meaning of life is to learn and grow as a person. This can involve developing new skills, building relationships, and overcoming challenges.\\n3. To make\",\n    \"prompt_token_count\": 6,\n    \"generation_token_count\": 512,\n    \"stop_reason\": \"length\"\n}"
						}
					]
				},
				{
					"name": "meta.llama3-70b-instruct-v1:0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "meta.llama3-8b-instruct-v1:0",
									"uuid": "886fc2cc-553e-40f5-ad8b-407c8dd95421"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "meta.llama3-70b-instruct-v1:0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Apr 2024 12:53:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2884"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "81503922-e9e7-410a-89a2-41b3b6aa2dc3"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "11987"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "512"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"generation\": \"?\\nWhat is the nature of reality?\\nWhat is the relationship between mind and body?\\nWhat is the nature of knowledge?\\nWhat is the nature of morality?\\nWhat is the nature of beauty?\\nWhat is the nature of truth?\\nWhat is the nature of justice?\\nWhat is the nature of freedom?\\nWhat is the nature of happiness?\\n\\nThese are just a few examples of the many philosophical questions that have been debated throughout history. Philosophers have approached these questions in various ways,, using different methods and perspectives to explore the nature of reality, knowledge, and human experience.\\n\\nSome of the key approaches to philosophy include:\\n\\n1. **Rationalism**: This approach emphasizes the use of reason and logic to understand the world. Rationalists believe that certain knowledge can be acquired through the use of reason, independent of sense experience.\\n2. **Empiricism**: This approach emphasizes the role of sense experience in understanding the world. Empiricists believe that knowledge comes from experience and observation.\\n3. **Idealism**: This approach emphasizes the role of mind and consciousness in shaping our understanding of the world. Idealists believe that reality is fundamentally mental or spiritual in nature.\\n4. **Materialism**: This approach emphasizes the role of matter and physical processes in understanding the world. Materialists believe that reality is fundamentally physical in nature.\\n5. **Pragmatism**: This approach emphasizes the practical applications of philosophical ideas. Pragmatists believe that the truth of an idea is determined by its usefulness and effectiveness in solving problems.\\n6. **Existentialism**: This approach emphasizes individual freedom and choice in understanding the world. Existentialists believe that humans must take responsibility for creating their own meaning and purpose in life.\\n7. **Phenomenology**: This approach emphasizes the study of conscious experience or perception. Phenomenologists believe that we must carefully examine our own experiences and perceptions in order to understand the world.\\n\\nThese are just a few examples of the many approaches to philosophy that have been developed over time. Philosophers often draw on multiple approaches and perspectives in their work, and many philosophical debates involve disagreements over the best approach to understanding a particular issue.\\n\\n### Branches of Philosophy\\n\\nPhilosophy is often divided into several branches, each of which focuses on a specific area of inquiry. Some of the main branches of philosophy include:\\n\\n1. **Metaphysics**: This branch of philosophy deals with the nature of reality, including the relationship between mind and body, substance and attribute, and potentiality and actuality.\\n2. **Epistemology**: This branch\",\n    \"prompt_token_count\": 6,\n    \"generation_token_count\": 512,\n    \"stop_reason\": \"length\"\n}"
						}
					]
				},
				{
					"name": "mistral.mistral-7b-instruct-v0:2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "mistral.mistral-7b-instruct-v0:2",
									"uuid": "8f3a1de2-e342-44fd-97d9-d7933a360a8c"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "mistral.mistral-7b-instruct-v0:2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:50:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1653"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "d3adbbb0-5d59-4600-81bc-0a0448e88e1b"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "3051"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "346"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "{\n    \"outputs\": [\n        {\n            \"text\": \"?\\n\\nThis question has puzzled philosophers, theologians, and thinkers for centuries. Some say the purpose of life is to seek happiness, others say it is to serve God or the greater good, and still others say it is to learn and grow as individuals.\\n\\nUltimately, the answer to this question is a matter of personal belief and faith. However, there are some common themes that many people find meaningful and fulfilling in their lives.\\n\\nOne common theme is the pursuit of happiness. Many people believe that the purpose of life is to be happy and to find joy and fulfillment in life. This can come from many sources, such as relationships, work, hobbies, and personal growth.\\n\\nAnother common theme is the desire to serve others and make a positive impact on the world. Many people find meaning and purpose in their lives by helping others, whether it be through volunteering, caring for loved ones, or making a difference in their community.\\n\\nReligion and spirituality also play a significant role in many people's lives and can provide a sense of purpose and meaning. For some, the purpose of life is to serve God or the greater good, and to live in accordance with religious teachings and values.\\n\\nUltimately, the purpose of life is a deeply personal and subjective question, and each person must find their own answer based on their beliefs, experiences, and values. Some may find meaning and purpose in multiple areas of their lives, while others may focus on one particular aspect. Regardless of the answer, the journey of discovering one's purpose can be a rewarding and fulfilling experience.\",\n            \"stop_reason\": \"stop\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "stability.stable-diffusion-xl-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text_prompts\": [\r\n        {\r\n            \"text\": \"The purpose of life\"\r\n        }\r\n    ],\r\n    \"cfg_scale\": 10,\r\n    \"seed\": 20,\r\n    \"steps\": 50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "stability.stable-diffusion-xl-v1",
									"uuid": "9dbb7038-1630-4100-a9c4-9d598dc7ea43"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AI21 Labs",
			"item": [
				{
					"name": "ai21.j2-ultra-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "ai21.j2-ultra-v1",
									"uuid": "5f79952e-e5a5-43fc-afb8-bc9082018676"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "ai21.j2-ultra-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:46:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "3232"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "55e78777-74a4-46bc-8f8c-d16c03429ffe"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "657"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "16"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "2"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1234,\n    \"prompt\": {\n        \"text\": \"What is the purpose of life\",\n        \"tokens\": [\n            {\n                \"generatedToken\": {\n                    \"token\": \"‚ñÅWhat‚ñÅis‚ñÅthe‚ñÅpurpose\",\n                    \"logprob\": -11.836393356323242,\n                    \"raw_logprob\": -11.836393356323242\n                },\n                \"topTokens\": null,\n                \"textRange\": {\n                    \"start\": 0,\n                    \"end\": 19\n                }\n            },\n            {\n                \"generatedToken\": {\n                    \"token\": \"‚ñÅof‚ñÅlife\",\n                    \"logprob\": -4.381799697875977,\n                    \"raw_logprob\": -4.381799697875977\n                },\n                \"topTokens\": null,\n                \"textRange\": {\n                    \"start\": 19,\n                    \"end\": 27\n                }\n            }\n        ]\n    },\n    \"completions\": [\n        {\n            \"data\": {\n                \"text\": \"\\nI believe the purpose of life is to live a life that gives meaning to our lives. To do this, it is important to understand ourselves and others and to have\",\n                \"tokens\": [\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"<|newline|>\",\n                            \"logprob\": -0.017205970361828804,\n                            \"raw_logprob\": -0.017205970361828804\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 0,\n                            \"end\": 1\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅI‚ñÅbelieve\",\n                            \"logprob\": -4.413031578063965,\n                            \"raw_logprob\": -4.413031578063965\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 1,\n                            \"end\": 10\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅthe‚ñÅpurpose‚ñÅof\",\n                            \"logprob\": -0.39409080147743225,\n                            \"raw_logprob\": -0.39409080147743225\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 10,\n                            \"end\": 25\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅlife‚ñÅis\",\n                            \"logprob\": -0.07450079917907715,\n                            \"raw_logprob\": -0.07450079917907715\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 25,\n                            \"end\": 33\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅto\",\n                            \"logprob\": -2.2860212326049805,\n                            \"raw_logprob\": -2.2860212326049805\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 33,\n                            \"end\": 36\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅlive‚ñÅa‚ñÅlife\",\n                            \"logprob\": -2.0996742248535156,\n                            \"raw_logprob\": -2.0996742248535156\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 36,\n                            \"end\": 48\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅthat‚ñÅgives\",\n                            \"logprob\": -7.02462100982666,\n                            \"raw_logprob\": -7.02462100982666\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 48,\n                            \"end\": 59\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅmeaning‚ñÅto\",\n                            \"logprob\": -1.7205486297607422,\n                            \"raw_logprob\": -1.7205486297607422\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 59,\n                            \"end\": 70\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅour‚ñÅlives\",\n                            \"logprob\": -2.3018875122070312,\n                            \"raw_logprob\": -2.3018875122070312\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 70,\n                            \"end\": 80\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \".\",\n                            \"logprob\": -0.5720572471618652,\n                            \"raw_logprob\": -0.5720572471618652\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 80,\n                            \"end\": 81\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅTo‚ñÅdo‚ñÅthis\",\n                            \"logprob\": -4.980351448059082,\n                            \"raw_logprob\": -4.980351448059082\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 81,\n                            \"end\": 92\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \",\",\n                            \"logprob\": -0.2417134791612625,\n                            \"raw_logprob\": -0.2417134791612625\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 92,\n                            \"end\": 93\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅit‚ñÅis‚ñÅimportant‚ñÅto‚ñÅunderstand\",\n                            \"logprob\": -6.204972743988037,\n                            \"raw_logprob\": -6.204972743988037\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 93,\n                            \"end\": 123\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅourselves‚ñÅand‚ñÅothers\",\n                            \"logprob\": -8.690786361694336,\n                            \"raw_logprob\": -8.690786361694336\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 123,\n                            \"end\": 144\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅand\",\n                            \"logprob\": -2.754805088043213,\n                            \"raw_logprob\": -2.754805088043213\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 144,\n                            \"end\": 148\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅto‚ñÅhave\",\n                            \"logprob\": -3.4914064407348633,\n                            \"raw_logprob\": -3.4914064407348633\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 148,\n                            \"end\": 156\n                        }\n                    }\n                ]\n            },\n            \"finishReason\": {\n                \"reason\": \"length\",\n                \"length\": 16\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "ai21.j2-mid-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "ai21.j2-mid-v1",
									"uuid": "4fc085ad-3b2f-4160-b27a-60f7ab703781"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "ai21.j2-mid-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:19:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "3180"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "6db91e6a-3cd8-45df-9c31-0d610f3e978e"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "559"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "16"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "2"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1234,\n    \"prompt\": {\n        \"text\": \"What is the purpose of life\",\n        \"tokens\": [\n            {\n                \"generatedToken\": {\n                    \"token\": \"‚ñÅWhat‚ñÅis‚ñÅthe‚ñÅpurpose\",\n                    \"logprob\": -15.865528106689453,\n                    \"raw_logprob\": -15.865528106689453\n                },\n                \"topTokens\": null,\n                \"textRange\": {\n                    \"start\": 0,\n                    \"end\": 19\n                }\n            },\n            {\n                \"generatedToken\": {\n                    \"token\": \"‚ñÅof‚ñÅlife\",\n                    \"logprob\": -6.456857681274414,\n                    \"raw_logprob\": -6.456857681274414\n                },\n                \"topTokens\": null,\n                \"textRange\": {\n                    \"start\": 19,\n                    \"end\": 27\n                }\n            }\n        ]\n    },\n    \"completions\": [\n        {\n            \"data\": {\n                \"text\": \"\\nThe answer to this question is subjective to the person that is answering the question. Most commonly it is said that life is about h\",\n                \"tokens\": [\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"<|newline|>\",\n                            \"logprob\": -0.003564434824511409,\n                            \"raw_logprob\": -0.003564434824511409\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 0,\n                            \"end\": 1\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅThe\",\n                            \"logprob\": -2.4587864875793457,\n                            \"raw_logprob\": -2.4587864875793457\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 1,\n                            \"end\": 4\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅanswer‚ñÅto‚ñÅthis‚ñÅquestion\",\n                            \"logprob\": -1.2911708354949951,\n                            \"raw_logprob\": -1.2911708354949951\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 4,\n                            \"end\": 28\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅis\",\n                            \"logprob\": -0.6434789896011353,\n                            \"raw_logprob\": -0.6434789896011353\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 28,\n                            \"end\": 31\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅsubjective\",\n                            \"logprob\": -0.15391673147678375,\n                            \"raw_logprob\": -0.15391673147678375\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 31,\n                            \"end\": 42\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅto‚ñÅthe‚ñÅperson\",\n                            \"logprob\": -7.374618053436279,\n                            \"raw_logprob\": -7.374618053436279\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 42,\n                            \"end\": 56\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅthat‚ñÅis\",\n                            \"logprob\": -3.45620059967041,\n                            \"raw_logprob\": -3.45620059967041\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 56,\n                            \"end\": 64\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅanswering‚ñÅthe‚ñÅquestion\",\n                            \"logprob\": -2.2191061973571777,\n                            \"raw_logprob\": -2.2191061973571777\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 64,\n                            \"end\": 87\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \".\",\n                            \"logprob\": -0.18383540213108063,\n                            \"raw_logprob\": -0.18383540213108063\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 87,\n                            \"end\": 88\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅMost\",\n                            \"logprob\": -4.773397445678711,\n                            \"raw_logprob\": -4.773397445678711\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 88,\n                            \"end\": 93\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅcommonly\",\n                            \"logprob\": -3.6184446811676025,\n                            \"raw_logprob\": -3.6184446811676025\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 93,\n                            \"end\": 102\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅit‚ñÅis\",\n                            \"logprob\": -2.0300064086914062,\n                            \"raw_logprob\": -2.0300064086914062\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 102,\n                            \"end\": 108\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅsaid‚ñÅthat\",\n                            \"logprob\": -1.072605848312378,\n                            \"raw_logprob\": -1.072605848312378\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 108,\n                            \"end\": 118\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅlife\",\n                            \"logprob\": -1.9454864263534546,\n                            \"raw_logprob\": -1.9454864263534546\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 118,\n                            \"end\": 123\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅis‚ñÅabout\",\n                            \"logprob\": -0.7828889489173889,\n                            \"raw_logprob\": -0.7828889489173889\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 123,\n                            \"end\": 132\n                        }\n                    },\n                    {\n                        \"generatedToken\": {\n                            \"token\": \"‚ñÅh\",\n                            \"logprob\": -8.609670639038086,\n                            \"raw_logprob\": -8.609670639038086\n                        },\n                        \"topTokens\": null,\n                        \"textRange\": {\n                            \"start\": 132,\n                            \"end\": 134\n                        }\n                    }\n                ]\n            },\n            \"finishReason\": {\n                \"reason\": \"length\",\n                \"length\": 16\n            }\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Amazon",
			"item": [
				{
					"name": "amazon.titan-tg1-large",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "amazon.titan-tg1-large",
									"uuid": "999b4d6a-f7b9-42c9-acc4-536f2729c8a0"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-tg1-large"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:51:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "771"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "8e6594ed-c3bd-4cac-8e8f-28211a268698"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "3331"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "128"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"inputTextTokenCount\": 6,\n    \"results\": [\n        {\n            \"tokenCount\": 128,\n            \"outputText\": \"\\nLife's purpose is to give it meaning and value. Different people may find different purposes and meanings in their lives, depending on their beliefs, values, and experiences. Some common purposes that people may find include:\\n\\n1. Personal growth and development: Life is a journey of learning and self-improvement. People may seek to learn new skills, knowledge, and experiences, and to grow as individuals and as members of society.\\n2. Relationships: Life is about building and maintaining meaningful relationships with others. This can include family, friends, romantic partners, and community members. Relationships provide support, love, and a sense of belonging\",\n            \"completionReason\": \"LENGTH\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "amazon.titan-text-lite-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "amazon.titan-text-lite-v1",
									"uuid": "01bd866c-fe54-426b-b4ae-3e8bd3eda1c9"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-text-lite-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:21:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "170"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "48d53db1-a2b9-4d1d-82f0-916545659ad7"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "1280"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "17"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"inputTextTokenCount\": 6,\n    \"results\": [\n        {\n            \"tokenCount\": 17,\n            \"outputText\": \"?\\nThe purpose of life is to live it to the fullest and find happiness.\",\n            \"completionReason\": \"FINISH\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "amazon.titan-text-express-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "amazon.titan-text-express-v1",
									"uuid": "2b47b766-111a-44bb-bc19-6da568c0bdae"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-text-express-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:22:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "785"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "ba7eda23-f20d-4903-8a7a-bc11cb135dc8"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "3291"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "128"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"inputTextTokenCount\": 6,\n    \"results\": [\n        {\n            \"tokenCount\": 128,\n            \"outputText\": \"\\nLife's purpose can be different for different people, but some common themes include:\\n\\nPersonal growth and self-improvement: Many people find purpose in pursuing personal growth, learning new skills, and improving themselves physically, mentally, and emotionally.\\n\\nMaking a positive impact on others: Many people find purpose in helping others, whether through volunteering, donating to charity, or pursuing a career in a field that promotes social justice or well-being.\\n\\nFinding meaning and fulfillment: Some people seek purpose in their relationships, spirituality, or hobbies, finding joy and satisfaction in their daily lives.\\n\\nCreating something meaningful: Many people\",\n            \"completionReason\": \"LENGTH\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "amazon.titan-embed-text-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "amazon.titan-embed-text-v1",
									"uuid": "951f91be-4b5b-4d84-81c2-44c517722865"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-embed-text-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:37:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "16983"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "93038b86-7b5f-48ad-8de5-f5b9fdaf1470"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "334"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"embedding\": [\n        1.234375,\n        -1.1015625,\n        -0.119140625,\n        -0.33984375,\n        0.58203125,\n        -0.16699219,\n        0.08300781,\n        -0.0012664795,\n        -0.2578125,\n        0.14550781,\n        -0.36328125,\n        -0.51953125,\n        0.03466797,\n        -0.23730469,\n        0.14257812,\n        0.4140625,\n        -0.19140625,\n        -0.72265625,\n        -0.26953125,\n        0.77734375,\n        -0.0024414062,\n        0.38085938,\n        -0.24511719,\n        0.578125,\n        -1.0703125,\n        -0.037109375,\n        0.87890625,\n        -0.76953125,\n        -0.014404297,\n        -0.1484375,\n        -0.71484375,\n        1.421875,\n        0.39453125,\n        -0.90234375,\n        -0.34375,\n        -0.38085938,\n        0.5234375,\n        -0.18359375,\n        -0.15234375,\n        -0.036865234,\n        -0.107910156,\n        0.18945312,\n        0.55078125,\n        0.70703125,\n        -0.48046875,\n        1.03125,\n        0.2890625,\n        -0.83984375,\n        0.13574219,\n        0.40234375,\n        0.0115356445,\n        -0.10449219,\n        2.0625,\n        -0.018554688,\n        0.66015625,\n        -0.23828125,\n        0.36523438,\n        -0.053710938,\n        0.48046875,\n        0.28125,\n        0.5,\n        0.3203125,\n        -0.11035156,\n        -0.47851562,\n        0.26953125,\n        0.0138549805,\n        -0.27929688,\n        0.34375,\n        0.26367188,\n        0.1796875,\n        0.16015625,\n        0.19726562,\n        -0.2734375,\n        -0.94921875,\n        0.24316406,\n        0.57421875,\n        -0.055664062,\n        0.8125,\n        0.65625,\n        0.51953125,\n        0.74609375,\n        0.10058594,\n        0.22558594,\n        0.060302734,\n        -0.29492188,\n        -0.088378906,\n        0.23828125,\n        -0.26757812,\n        0.00011634827,\n        0.796875,\n        -0.10888672,\n        -0.038085938,\n        0.59765625,\n        -0.40234375,\n        -0.796875,\n        0.18945312,\n        -0.83203125,\n        -0.859375,\n        0.30078125,\n        0.52734375,\n        -0.43359375,\n        0.20117188,\n        0.38085938,\n        -0.042236328,\n        0.03955078,\n        0.65625,\n        -0.46484375,\n        0.73828125,\n        0.057861328,\n        -0.62109375,\n        0.36914062,\n        0.056396484,\n        -1.1328125,\n        -0.7109375,\n        -1.265625,\n        -0.48046875,\n        -0.031982422,\n        0.16503906,\n        -0.98828125,\n        -0.4921875,\n        -0.41992188,\n        -0.22558594,\n        0.7578125,\n        0.70703125,\n        0.10498047,\n        0.34765625,\n        0.14648438,\n        -0.013793945,\n        0.40039062,\n        -0.8046875,\n        -0.18652344,\n        1.03125,\n        0.52734375,\n        -0.016601562,\n        -0.32226562,\n        0.51953125,\n        0.5859375,\n        0.14453125,\n        0.25585938,\n        0.20898438,\n        0.65234375,\n        -0.47460938,\n        0.64453125,\n        0.15722656,\n        -0.296875,\n        0.62109375,\n        -0.48632812,\n        -0.62890625,\n        -0.46289062,\n        0.36914062,\n        0.63671875,\n        -0.48242188,\n        0.9375,\n        -0.42773438,\n        -0.54296875,\n        0.026367188,\n        0.7421875,\n        0.30664062,\n        0.114746094,\n        0.9453125,\n        -0.5859375,\n        -0.15527344,\n        -1.25,\n        0.43359375,\n        -0.37890625,\n        -0.114746094,\n        -0.24023438,\n        0.34375,\n        -0.36523438,\n        -0.48828125,\n        -0.28125,\n        -0.22558594,\n        1.328125,\n        0.78515625,\n        0.119140625,\n        -0.23828125,\n        -1.125,\n        -0.38867188,\n        0.47265625,\n        0.27539062,\n        -0.25390625,\n        -0.15136719,\n        -0.07324219,\n        0.28320312,\n        0.072753906,\n        -0.29492188,\n        -0.23828125,\n        -0.34570312,\n        -0.34765625,\n        -0.060058594,\n        -0.32421875,\n        0.47265625,\n        -0.17773438,\n        -0.84375,\n        -0.11230469,\n        -1.0546875,\n        -0.15136719,\n        -0.40625,\n        -1.84375,\n        0.6328125,\n        -0.20800781,\n        -0.44921875,\n        0.83203125,\n        1.0859375,\n        0.008239746,\n        0.075683594,\n        0.27148438,\n        0.66015625,\n        0.37304688,\n        0.40039062,\n        -0.14355469,\n        -0.25585938,\n        -0.024169922,\n        -0.40429688,\n        0.11621094,\n        0.23730469,\n        0.7578125,\n        0.051757812,\n        0.44726562,\n        0.25,\n        -0.020263672,\n        -0.4375,\n        0.0005912781,\n        0.119140625,\n        -0.05419922,\n        -0.53515625,\n        -0.67578125,\n        0.26757812,\n        -0.27148438,\n        -0.3984375,\n        0.114746094,\n        0.5625,\n        0.3984375,\n        -0.609375,\n        0.072265625,\n        0.029785156,\n        0.060791016,\n        -0.036865234,\n        -0.041503906,\n        -0.36132812,\n        0.072753906,\n        0.119140625,\n        -0.8125,\n        0.13183594,\n        0.25976562,\n        -0.3125,\n        0.65625,\n        -0.43164062,\n        -0.041015625,\n        0.45507812,\n        -0.36328125,\n        -0.05102539,\n        -0.9453125,\n        -0.37109375,\n        -0.76171875,\n        -0.3828125,\n        -0.70703125,\n        -0.05029297,\n        1.25,\n        -0.19433594,\n        0.24707031,\n        -0.37695312,\n        0.095214844,\n        0.30273438,\n        -0.16796875,\n        -0.8671875,\n        0.421875,\n        0.10644531,\n        0.109375,\n        0.9375,\n        0.00011396408,\n        -0.40820312,\n        0.765625,\n        0.10595703,\n        -0.38867188,\n        0.33203125,\n        -0.8125,\n        0.71875,\n        -0.6015625,\n        -0.045898438,\n        0.25,\n        -0.39453125,\n        0.38476562,\n        -0.94140625,\n        -0.23242188,\n        -1.2890625,\n        -0.24023438,\n        -0.091796875,\n        0.056640625,\n        -0.10058594,\n        0.203125,\n        -0.25195312,\n        0.1328125,\n        0.578125,\n        0.107421875,\n        -0.5546875,\n        -0.114746094,\n        -0.35351562,\n        -0.59375,\n        0.3515625,\n        -0.83203125,\n        0.64453125,\n        0.34960938,\n        -0.2890625,\n        -0.15234375,\n        -1.0546875,\n        0.21777344,\n        -0.29101562,\n        0.37890625,\n        -0.035888672,\n        -0.375,\n        -0.45507812,\n        -0.0036621094,\n        -0.16503906,\n        0.609375,\n        0.27148438,\n        -0.18457031,\n        0.14648438,\n        -0.36328125,\n        -0.026855469,\n        -0.28125,\n        -0.31445312,\n        0.07421875,\n        0.044921875,\n        -0.06591797,\n        0.71875,\n        -1.0078125,\n        0.30273438,\n        0.5234375,\n        -0.5234375,\n        -1.265625,\n        -1.0625,\n        -0.09814453,\n        1.234375,\n        0.44921875,\n        0.14355469,\n        0.7265625,\n        -0.21289062,\n        0.68359375,\n        -0.14355469,\n        0.05883789,\n        0.06738281,\n        0.42578125,\n        -0.07324219,\n        -0.6953125,\n        0.39257812,\n        0.1328125,\n        -0.29101562,\n        0.41015625,\n        -0.22753906,\n        0.37695312,\n        0.28515625,\n        -0.58203125,\n        -0.2890625,\n        -0.48242188,\n        -0.27148438,\n        0.31640625,\n        -0.10888672,\n        -0.041015625,\n        0.73828125,\n        -0.006713867,\n        0.16210938,\n        -0.021362305,\n        -0.064453125,\n        0.37695312,\n        -0.11669922,\n        0.42773438,\n        -0.25195312,\n        0.36914062,\n        1.921875,\n        -0.1328125,\n        1.671875,\n        0.39453125,\n        0.7109375,\n        -0.52734375,\n        0.2734375,\n        -0.40429688,\n        1.03125,\n        -0.25195312,\n        -0.26953125,\n        1.2421875,\n        0.07421875,\n        0.84375,\n        -0.0064086914,\n        0.703125,\n        0.25390625,\n        -0.38671875,\n        -1.5859375,\n        -0.578125,\n        -0.875,\n        0.19140625,\n        -0.034423828,\n        0.17871094,\n        -0.32421875,\n        0.22949219,\n        0.6875,\n        -0.022583008,\n        -1.0703125,\n        0.41992188,\n        -0.21289062,\n        -0.122558594,\n        -0.14550781,\n        -0.7265625,\n        0.003829956,\n        0.59765625,\n        -0.87109375,\n        0.890625,\n        0.5546875,\n        0.08984375,\n        -0.37890625,\n        -0.6640625,\n        -0.12890625,\n        0.36328125,\n        1.3671875,\n        -0.35742188,\n        -0.71484375,\n        0.08544922,\n        -0.21386719,\n        -0.421875,\n        0.734375,\n        -0.30078125,\n        -0.45703125,\n        0.15917969,\n        -0.009765625,\n        -0.48828125,\n        -0.484375,\n        -0.98046875,\n        -0.1875,\n        -0.62890625,\n        -0.060791016,\n        0.048095703,\n        -0.14550781,\n        0.20019531,\n        -0.37109375,\n        0.87109375,\n        0.48046875,\n        0.009887695,\n        0.27148438,\n        0.38085938,\n        1.3046875,\n        1.2421875,\n        0.29101562,\n        0.42773438,\n        0.66796875,\n        -0.35351562,\n        0.51171875,\n        -0.0047302246,\n        -0.58203125,\n        -0.74609375,\n        -0.46875,\n        0.32226562,\n        0.95703125,\n        0.79296875,\n        1.2734375,\n        -0.46484375,\n        0.38867188,\n        -0.17675781,\n        0.14648438,\n        0.5078125,\n        -0.044433594,\n        0.087402344,\n        0.23925781,\n        0.1484375,\n        -0.2734375,\n        -0.62109375,\n        0.115722656,\n        1.0625,\n        1.578125,\n        -0.30664062,\n        -0.14160156,\n        -0.51953125,\n        0.39257812,\n        -0.15039062,\n        0.13574219,\n        -0.17382812,\n        -0.375,\n        0.22460938,\n        0.40234375,\n        -0.671875,\n        0.40625,\n        -0.20117188,\n        -0.045654297,\n        -0.546875,\n        0.20996094,\n        0.016479492,\n        -0.34570312,\n        -0.15722656,\n        0.107910156,\n        -0.049560547,\n        -0.69140625,\n        -0.51953125,\n        -0.23046875,\n        -0.52734375,\n        -0.33398438,\n        -0.3515625,\n        0.22363281,\n        0.0002822876,\n        -0.5859375,\n        0.765625,\n        -0.58203125,\n        0.21972656,\n        0.38867188,\n        -0.49414062,\n        -0.09863281,\n        0.29101562,\n        0.32226562,\n        -0.05102539,\n        -0.33984375,\n        0.16503906,\n        0.9140625,\n        -0.32226562,\n        -0.18457031,\n        0.1328125,\n        -0.36914062,\n        0.55078125,\n        -0.02319336,\n        -0.375,\n        0.35351562,\n        -0.58203125,\n        0.5234375,\n        -0.203125,\n        0.7421875,\n        -0.38867188,\n        0.24804688,\n        0.46484375,\n        1.03125,\n        0.59765625,\n        0.28710938,\n        -0.1796875,\n        -0.18164062,\n        -0.15332031,\n        -0.17871094,\n        0.66015625,\n        -0.4140625,\n        0.3515625,\n        0.58203125,\n        -0.37304688,\n        0.16992188,\n        0.55078125,\n        0.98046875,\n        -0.43945312,\n        0.14648438,\n        0.08886719,\n        -0.17480469,\n        -0.38476562,\n        -0.22949219,\n        -0.40234375,\n        -0.38671875,\n        0.71875,\n        0.9609375,\n        0.39453125,\n        0.096191406,\n        -0.20996094,\n        -0.37109375,\n        -0.10888672,\n        -0.89453125,\n        0.020385742,\n        0.10449219,\n        0.65234375,\n        0.5390625,\n        0.14941406,\n        -0.5078125,\n        -0.01965332,\n        0.8671875,\n        -0.17675781,\n        0.36328125,\n        0.16992188,\n        -0.055908203,\n        -0.9140625,\n        0.32421875,\n        0.20507812,\n        -0.3203125,\n        0.07519531,\n        0.43359375,\n        0.111328125,\n        -0.43554688,\n        -0.77734375,\n        0.4296875,\n        -0.3671875,\n        0.109375,\n        0.265625,\n        0.18945312,\n        -0.13476562,\n        -0.32617188,\n        -1.0390625,\n        0.28515625,\n        -0.44921875,\n        -0.9453125,\n        -0.0017089844,\n        0.734375,\n        -0.61328125,\n        -0.296875,\n        -0.08154297,\n        0.11035156,\n        -0.359375,\n        -0.41601562,\n        -0.34960938,\n        -0.028076172,\n        0.87109375,\n        -0.2734375,\n        0.33398438,\n        0.12695312,\n        0.19726562,\n        -1.34375,\n        -0.15625,\n        -0.30664062,\n        -0.18652344,\n        -0.14257812,\n        -0.2265625,\n        -0.43945312,\n        -0.6328125,\n        -0.59765625,\n        -0.0234375,\n        -0.65625,\n        -0.79296875,\n        -0.1953125,\n        -0.45117188,\n        -0.3203125,\n        1.734375,\n        -0.025268555,\n        -0.49023438,\n        -1.1875,\n        -1.015625,\n        -0.022094727,\n        0.02331543,\n        -0.47070312,\n        0.031982422,\n        -1.2109375,\n        0.39257812,\n        0.53125,\n        0.079589844,\n        -0.38476562,\n        0.4296875,\n        0.5390625,\n        0.52734375,\n        -0.025268555,\n        0.30273438,\n        -1.46875,\n        0.026123047,\n        0.3671875,\n        -0.72265625,\n        0.56640625,\n        -0.38085938,\n        -0.27148438,\n        2.171875,\n        -0.34960938,\n        -0.43945312,\n        -0.60546875,\n        0.609375,\n        -0.5625,\n        0.13183594,\n        0.453125,\n        0.75390625,\n        -0.23046875,\n        0.16699219,\n        -0.22753906,\n        1.0078125,\n        0.52734375,\n        -0.35546875,\n        -0.20410156,\n        -0.23046875,\n        -0.12890625,\n        0.115234375,\n        -0.5625,\n        0.3046875,\n        0.16113281,\n        0.17578125,\n        0.3203125,\n        0.390625,\n        -0.36132812,\n        0.65625,\n        -1.46875,\n        0.578125,\n        -0.20410156,\n        0.24804688,\n        -0.60546875,\n        0.03881836,\n        0.9375,\n        -0.796875,\n        0.59375,\n        0.9375,\n        0.34765625,\n        -0.21484375,\n        0.546875,\n        0.0045166016,\n        0.29492188,\n        0.90625,\n        -0.671875,\n        0.56640625,\n        -0.13183594,\n        -0.25195312,\n        0.25390625,\n        -0.3046875,\n        -0.23632812,\n        -0.25,\n        0.37890625,\n        0.14160156,\n        0.578125,\n        0.30664062,\n        -0.609375,\n        -0.14453125,\n        0.35351562,\n        0.059326172,\n        -0.09667969,\n        -0.421875,\n        1.0625,\n        0.421875,\n        -0.053710938,\n        -0.056640625,\n        0.63671875,\n        0.6171875,\n        0.03881836,\n        0.609375,\n        0.0047912598,\n        0.02355957,\n        -0.33398438,\n        0.072265625,\n        -0.2890625,\n        -0.1171875,\n        -0.21289062,\n        -0.07470703,\n        -0.09716797,\n        0.18164062,\n        -0.22460938,\n        -0.18652344,\n        -0.6015625,\n        -0.6953125,\n        0.29296875,\n        0.5546875,\n        -0.19628906,\n        -0.0007324219,\n        1.0390625,\n        0.09716797,\n        -0.34765625,\n        0.859375,\n        0.27734375,\n        -0.7265625,\n        0.42578125,\n        0.51171875,\n        -0.34960938,\n        -0.27929688,\n        0.2578125,\n        0.1484375,\n        -0.43359375,\n        -0.17480469,\n        -0.08642578,\n        -0.10644531,\n        0.53515625,\n        0.1953125,\n        0.7734375,\n        0.46679688,\n        -1.359375,\n        0.6875,\n        0.24121094,\n        0.08203125,\n        -0.41992188,\n        0.10986328,\n        -0.01928711,\n        0.048828125,\n        0.07714844,\n        -1.140625,\n        0.095214844,\n        -0.08642578,\n        -0.5234375,\n        0.10449219,\n        -0.5859375,\n        0.53515625,\n        -0.110839844,\n        0.30078125,\n        0.014038086,\n        0.044677734,\n        0.37304688,\n        -1.25,\n        0.58984375,\n        0.578125,\n        0.091308594,\n        1.1875,\n        -0.20214844,\n        -0.27148438,\n        0.42773438,\n        0.37109375,\n        0.19824219,\n        -0.091308594,\n        -0.08105469,\n        -0.640625,\n        -0.06640625,\n        -0.93359375,\n        -0.56640625,\n        -0.60546875,\n        0.796875,\n        -0.578125,\n        -0.26171875,\n        -0.25195312,\n        0.85546875,\n        0.25195312,\n        0.58203125,\n        0.51171875,\n        0.23828125,\n        -0.52734375,\n        -0.19921875,\n        -0.08935547,\n        -0.07714844,\n        -0.34179688,\n        0.47070312,\n        0.625,\n        0.061279297,\n        -1.09375,\n        -0.51171875,\n        -0.087402344,\n        0.25195312,\n        -0.21875,\n        0.33984375,\n        -0.27734375,\n        -0.07470703,\n        -0.60546875,\n        -0.14746094,\n        -0.58203125,\n        -0.22753906,\n        0.37695312,\n        0.17578125,\n        0.02709961,\n        1,\n        -0.49023438,\n        0.18164062,\n        -0.42578125,\n        0.0016860962,\n        -0.9765625,\n        0.0054626465,\n        -0.58984375,\n        -1.09375,\n        0.5078125,\n        0.859375,\n        0.734375,\n        -0.59375,\n        0.20019531,\n        0.06982422,\n        -0.54296875,\n        0.7109375,\n        1.2734375,\n        0.6328125,\n        0.18164062,\n        0.13183594,\n        0.24414062,\n        -0.31054688,\n        -0.12988281,\n        0.54296875,\n        0.083984375,\n        -0.05126953,\n        -0.375,\n        0.076660156,\n        -0.7109375,\n        -0.95703125,\n        0.32617188,\n        -0.16699219,\n        0.32617188,\n        -0.3125,\n        0.24414062,\n        0.20996094,\n        0.6328125,\n        0.61328125,\n        1.234375,\n        0.8359375,\n        -0.93359375,\n        -0.072753906,\n        0.73046875,\n        -0.030761719,\n        -0.07128906,\n        -0.3984375,\n        -0.23535156,\n        0.10888672,\n        -0.08300781,\n        -0.22167969,\n        0.5703125,\n        -0.2578125,\n        0.57421875,\n        -0.19726562,\n        0.734375,\n        0.828125,\n        -0.31445312,\n        0.6875,\n        -0.107421875,\n        -0.8515625,\n        0.69140625,\n        -0.42578125,\n        0.115234375,\n        0.18652344,\n        -0.07324219,\n        -0.73046875,\n        0.5078125,\n        0.609375,\n        1.390625,\n        -0.2890625,\n        0.17675781,\n        0.76953125,\n        -0.23730469,\n        0.125,\n        0.31640625,\n        -0.625,\n        -1.03125,\n        -0.32421875,\n        -0.072265625,\n        -0.375,\n        -0.5625,\n        -0.53515625,\n        -0.32421875,\n        -0.81640625,\n        0.23046875,\n        0.890625,\n        -1.015625,\n        -0.023803711,\n        -0.5625,\n        0.19628906,\n        0.20507812,\n        0.6640625,\n        0.55859375,\n        0.9140625,\n        -0.63671875,\n        -0.8203125,\n        -1.359375,\n        -0.6484375,\n        -0.13476562,\n        -0.37890625,\n        0.1328125,\n        -0.96875,\n        -0.16210938,\n        -0.5,\n        -0.11376953,\n        0.71875,\n        -0.35546875,\n        -0.46484375,\n        -0.7421875,\n        -0.023803711,\n        0.546875,\n        -0.66796875,\n        0.18457031,\n        0.12402344,\n        0.31640625,\n        0.045166016,\n        0.43945312,\n        0.12158203,\n        -0.083984375,\n        -0.000052690506,\n        0.05908203,\n        0.34765625,\n        -0.24316406,\n        0.84765625,\n        0.17285156,\n        0.33203125,\n        0.111328125,\n        0.15527344,\n        -0.100097656,\n        -0.49804688,\n        0.12792969,\n        0.0005302429,\n        -0.04248047,\n        -0.9140625,\n        0.31445312,\n        0.12792969,\n        0.64453125,\n        -0.118652344,\n        0.62109375,\n        0.13378906,\n        0.078125,\n        0.44921875,\n        0.22851562,\n        -0.828125,\n        0.45898438,\n        -0.7578125,\n        -1.5,\n        -0.044433594,\n        -0.37890625,\n        -1,\n        -0.19726562,\n        0.4296875,\n        0.17675781,\n        0.10986328,\n        0.68359375,\n        0.012390137,\n        0.55078125,\n        -0.39453125,\n        0.33203125,\n        -0.084472656,\n        -0.14648438,\n        -0.46875,\n        0.33203125,\n        -0.3125,\n        0.029907227,\n        0.859375,\n        0.25976562,\n        -0.984375,\n        0.51953125,\n        -0.22265625,\n        -0.68359375,\n        -0.21484375,\n        -1.0234375,\n        -0.25976562,\n        -0.18359375,\n        0.10986328,\n        0.78515625,\n        -0.014404297,\n        0.03881836,\n        0.8515625,\n        -0.33203125,\n        0.13964844,\n        0.034179688,\n        -0.59375,\n        -0.51953125,\n        -0.23046875,\n        -0.171875,\n        0.453125,\n        -0.19726562,\n        1.2890625,\n        -0.10644531,\n        0.41015625,\n        0.3515625,\n        -0.375,\n        -0.14453125,\n        0.034423828,\n        -0.34570312,\n        0.33984375,\n        0.55078125,\n        -0.73046875,\n        -0.48828125,\n        -0.46679688,\n        0.88671875,\n        -0.18554688,\n        0.2734375,\n        -0.77734375,\n        0.6328125,\n        -0.484375,\n        -0.328125,\n        -0.27929688,\n        -1.1328125,\n        -0.025512695,\n        0.17773438,\n        -0.45507812,\n        -0.14453125,\n        0.39648438,\n        0.546875,\n        0.29101562,\n        -0.85546875,\n        0.15234375,\n        0.77734375,\n        -0.29882812,\n        0.010375977,\n        -0.27539062,\n        0.6953125,\n        -0.16796875,\n        -0.00047683716,\n        0.59375,\n        -0.048095703,\n        0.41210938,\n        -0.328125,\n        0.28515625,\n        0.29296875,\n        0.0018692017,\n        0.18652344,\n        0.48242188,\n        0.091308594,\n        0.02368164,\n        0.23925781,\n        0.140625,\n        -0.06982422,\n        0.3203125,\n        0.421875,\n        0.06542969,\n        0.064941406,\n        0.25195312,\n        1.21875,\n        0.47460938,\n        0.51953125,\n        -0.040283203,\n        -0.18945312,\n        -0.114746094,\n        -0.17675781,\n        -0.14941406,\n        0.33984375,\n        0.36914062,\n        -0.33203125,\n        0.67578125,\n        0.36523438,\n        0.53515625,\n        -0.390625,\n        0.24023438,\n        -0.4296875,\n        -0.0017700195,\n        -0.22558594,\n        0.859375,\n        0.515625,\n        -0.640625,\n        -0.31054688,\n        -0.08251953,\n        0.32421875,\n        -0.28125,\n        1.171875,\n        0.6328125,\n        -0.66796875,\n        -0.39257812,\n        -1.015625,\n        -0.46484375,\n        0.16015625,\n        -0.0063171387,\n        -0.34570312,\n        -0.38867188,\n        0.13867188,\n        -0.28320312,\n        -0.111816406,\n        -0.390625,\n        -0.4140625,\n        1.9609375,\n        0.29101562,\n        0.55078125,\n        -0.3671875,\n        0.1171875,\n        1.7890625,\n        0.08935547,\n        0.48828125,\n        -0.66015625,\n        -1.3359375,\n        0.109375,\n        -0.0034179688,\n        0.064453125,\n        -0.5078125,\n        -0.65234375,\n        0.31054688,\n        0.31835938,\n        -0.453125,\n        0.057128906,\n        0.81640625,\n        0.43359375,\n        -0.86328125,\n        1.3125,\n        -0.65625,\n        1.359375,\n        -0.53515625,\n        -1.25,\n        0.625,\n        0.020629883,\n        -0.23144531,\n        -1.390625,\n        0.26367188,\n        0.69921875,\n        -1.171875,\n        0.44140625,\n        0.29296875,\n        0.515625,\n        -0.41992188,\n        -0.28125,\n        -0.4453125,\n        -0.079589844,\n        0.12988281,\n        0.10449219,\n        0.1953125,\n        0.24121094,\n        -0.578125,\n        -0.63671875,\n        -0.0079956055,\n        0.8125,\n        0.09277344,\n        -0.17578125,\n        -0.13183594,\n        -0.89453125,\n        -0.421875,\n        -0.8046875,\n        -0.4609375,\n        0.25195312,\n        -0.24707031,\n        1.0859375,\n        0.19335938,\n        -0.16992188,\n        -0.59375,\n        -0.984375,\n        -0.53515625,\n        -1.1015625,\n        -0.85546875,\n        -0.34960938,\n        -0.6015625,\n        0.8515625,\n        -0.16015625,\n        0.033203125,\n        -0.19824219,\n        0.44726562,\n        0.5546875,\n        -0.8515625,\n        -0.37109375,\n        0.17089844,\n        0.38085938,\n        -0.08300781,\n        -0.15625,\n        -0.03100586,\n        0.05493164,\n        0.22460938,\n        0.16015625,\n        1.3046875,\n        0.41015625,\n        -0.0045166016,\n        0.453125,\n        -0.640625,\n        -1.53125,\n        -0.3046875,\n        1.15625,\n        -0.13378906,\n        -0.17285156,\n        -0.19921875,\n        -0.10644531,\n        0.19824219,\n        0.17382812,\n        0.640625,\n        0.66796875,\n        0.23632812,\n        -0.13183594,\n        0.69140625,\n        -0.2265625,\n        1.234375,\n        0.40039062,\n        0.32421875,\n        0.34765625,\n        -0.31445312,\n        -0.41992188,\n        0.022583008,\n        0.30859375,\n        -0.22558594,\n        0.3125,\n        0.18847656,\n        0.7578125,\n        0.203125,\n        0.23828125,\n        -1.0078125,\n        -0.025634766,\n        -0.25585938,\n        0.5859375,\n        0.31835938,\n        1.15625,\n        0.99609375,\n        0.4453125,\n        0.375,\n        0.37109375,\n        -0.40820312,\n        0.047607422,\n        -0.04736328,\n        -0.27148438,\n        -0.13476562,\n        -0.11767578,\n        -0.04736328,\n        0.12597656,\n        0.26171875,\n        -1.3984375,\n        -0.48046875,\n        0.19335938,\n        0.37304688,\n        -0.3515625,\n        0.2421875,\n        0.16699219,\n        0.44921875,\n        -1.25,\n        -0.03515625,\n        0.09326172,\n        -0.31054688,\n        -0.671875,\n        -0.47460938,\n        0.84375,\n        1.1796875,\n        -0.24316406,\n        0.095214844,\n        -0.41015625,\n        -0.57421875,\n        -0.09326172,\n        -0.48046875,\n        0.32617188,\n        0.11279297,\n        0.13867188,\n        -0.23828125,\n        -0.38476562,\n        0.484375,\n        -0.4765625,\n        -0.1640625,\n        -0.4765625,\n        0.45117188,\n        0.14941406,\n        1.140625,\n        0.07910156,\n        0.20800781,\n        -0.5625,\n        0.39453125,\n        -1.3203125,\n        -0.43164062,\n        0.057861328,\n        0.77734375,\n        -0.28125,\n        0.32617188,\n        -0.15136719,\n        -1.0546875,\n        -0.09765625,\n        0.36523438,\n        0.087890625,\n        0.703125,\n        0.3515625,\n        0.31445312,\n        -0.8046875,\n        -0.63671875,\n        1.015625,\n        0.40039062,\n        0.14746094,\n        0.203125,\n        -0.51171875,\n        0.71484375,\n        -0.0069885254,\n        -1.1484375,\n        1.203125,\n        -0.69921875,\n        0.025390625,\n        0.10644531,\n        0.13378906,\n        -0.18652344,\n        0.33203125,\n        0.22167969,\n        -0.24511719,\n        0.14648438,\n        -0.359375,\n        -0.057373047,\n        -0.033203125,\n        1.125,\n        0.14257812,\n        -0.5390625,\n        -0.08886719,\n        -0.3125,\n        -0.05053711,\n        0.048828125,\n        -1.328125,\n        -0.11816406,\n        0.23828125,\n        -0.18945312,\n        0.34375,\n        -0.95703125,\n        -0.45507812,\n        -0.33007812,\n        0.08691406,\n        -0.2578125,\n        -0.8125,\n        -0.41015625,\n        0.052734375,\n        -0.34375,\n        0.7109375,\n        -0.31835938,\n        -0.4453125,\n        -0.6640625,\n        0.11816406,\n        0.40039062,\n        0.62109375,\n        0.46679688,\n        0.29101562,\n        -0.25,\n        0.10205078,\n        0.16992188,\n        -0.45507812,\n        0.84765625,\n        0.59375,\n        0.53515625,\n        -0.47460938,\n        -0.24902344,\n        0.016235352,\n        0.20605469,\n        -0.28710938,\n        1.2734375,\n        0.8828125,\n        -0.43359375,\n        -0.06591797,\n        0.34960938,\n        -1.1015625,\n        -0.23535156,\n        -0.8203125,\n        -0.6875,\n        0.03466797,\n        -0.44921875,\n        0.092285156,\n        0.014404297,\n        -0.84375,\n        -0.02331543,\n        0.28125,\n        0.2109375,\n        -0.60546875,\n        0.7578125,\n        -0.053466797,\n        0.07373047,\n        0.06738281,\n        -0.47070312,\n        -0.008544922,\n        0.22949219,\n        -0.27929688,\n        0.13574219,\n        -0.29882812,\n        -0.1796875,\n        0.22265625,\n        0.13378906,\n        0.421875,\n        -0.0126953125,\n        -0.10449219,\n        0.18066406,\n        0.10839844,\n        0.11816406,\n        -0.041503906,\n        -0.17675781,\n        -0.86328125,\n        0.7578125,\n        0.27539062,\n        0.050048828,\n        -0.16796875,\n        0.02319336,\n        0.36914062,\n        -0.34960938,\n        -0.65625,\n        0.90234375,\n        -0.5859375,\n        -0.203125,\n        0.05126953,\n        0.984375,\n        0.20996094,\n        -0.007751465,\n        0.81640625,\n        -0.96484375,\n        0.55859375,\n        -0.41992188,\n        0.10253906,\n        -0.36523438,\n        -0.8828125,\n        0.07128906,\n        -0.42773438,\n        -0.123535156,\n        -0.31835938,\n        -0.515625,\n        0.18164062,\n        -0.29101562,\n        -0.609375,\n        0.071777344,\n        -0.16796875,\n        0.22753906,\n        -1.3125,\n        0.10595703,\n        0.13769531,\n        -0.045654297,\n        0.83203125,\n        0.3046875,\n        -0.2109375,\n        -0.59765625,\n        0.92578125,\n        -0.033691406,\n        -0.91015625,\n        -0.63671875,\n        0.54296875,\n        -0.078125,\n        -0.9375,\n        0.28515625,\n        1.328125,\n        -0.13574219,\n        0.60546875,\n        -0.47070312,\n        -0.46679688,\n        0.67578125,\n        -0.1796875,\n        0.29492188,\n        -0.088378906,\n        0.140625,\n        0.36328125,\n        -0.22167969,\n        -0.24804688,\n        -0.115234375,\n        -0.35351562,\n        0.60546875,\n        -0.31835938,\n        0.07324219,\n        0.38476562,\n        -0.6171875,\n        -0.38867188,\n        0.32226562,\n        0.12890625,\n        -0.67578125,\n        0.47460938,\n        0.22460938,\n        -0.26367188,\n        0.39648438,\n        0.46875,\n        -0.07080078,\n        -0.3984375,\n        0.23339844,\n        -0.1796875,\n        0.025146484,\n        -0.7734375,\n        -0.12695312,\n        -0.6953125,\n        1.0078125,\n        -0.58984375,\n        -0.4375,\n        0.47070312,\n        -0.31835938,\n        0.052734375,\n        0.62890625,\n        1.453125,\n        0.21972656,\n        -0.3828125,\n        -0.4453125,\n        0.30664062,\n        -0.69140625,\n        -0.46875,\n        0.23242188,\n        0.5078125,\n        0.42382812,\n        -0.096191406,\n        0.25195312,\n        -0.38867188,\n        -0.28320312,\n        0.22753906,\n        -0.171875,\n        -0.75390625,\n        -0.71875,\n        0.19824219,\n        0.028320312,\n        -0.02355957,\n        0.007080078,\n        -0.20898438,\n        -0.080566406,\n        -0.70703125,\n        1.203125,\n        0.33984375,\n        -0.40234375,\n        0.09375,\n        -0.26757812,\n        -0.024658203,\n        0.79296875,\n        0.40820312,\n        -0.08251953,\n        -0.7109375,\n        0.14941406,\n        -0.42382812,\n        -0.71484375,\n        0.265625,\n        0.17675781\n    ],\n    \"inputTextTokenCount\": 6\n}"
						}
					]
				},
				{
					"name": "amazon.titan-embed-image-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "amazon.titan-embed-image-v1",
									"uuid": "bc8566d4-335d-4fd2-9672-f8f76a7d453f"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"inputText\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-embed-image-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:37:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "12829"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "51baa284-b548-4787-8543-e27ea4aeb937"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "369"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "8"
								}
							],
							"cookie": [],
							"body": "{\n    \"embedding\": [\n        0.009338379,\n        0.0234375,\n        -0.026000977,\n        0.028564453,\n        0.0032653809,\n        0.022094727,\n        0.06982422,\n        -0.0066223145,\n        0.021972656,\n        0.04663086,\n        0.0095825195,\n        -0.018066406,\n        0.028564453,\n        -0.006652832,\n        0.022460938,\n        0.030883789,\n        -0.016235352,\n        0.028808594,\n        -0.00491333,\n        0.006225586,\n        -0.014099121,\n        0.009216309,\n        -0.037597656,\n        0.029785156,\n        0.030395508,\n        -0.011291504,\n        0.036865234,\n        -0.0146484375,\n        0.033447266,\n        0.0007019043,\n        0.022827148,\n        0.007659912,\n        0.037109375,\n        0.025756836,\n        0.002166748,\n        0.018310547,\n        -0.034179688,\n        0.018066406,\n        0.029052734,\n        0.044189453,\n        0.0095825195,\n        -0.007751465,\n        -0.05419922,\n        0.005065918,\n        -0.055908203,\n        0.0036010742,\n        0.0048217773,\n        -0.019897461,\n        -0.0035247803,\n        0.036376953,\n        -0.0021972656,\n        -0.013061523,\n        0.018920898,\n        -0.022705078,\n        -0.027832031,\n        0.0119018555,\n        -0.014099121,\n        -0.020141602,\n        0.026733398,\n        0.00008201599,\n        -0.008361816,\n        -0.024291992,\n        0.057861328,\n        -0.008178711,\n        0.025146484,\n        0.01940918,\n        -0.06591797,\n        0.0703125,\n        -0.01965332,\n        -0.033203125,\n        -0.030395508,\n        0.008117676,\n        -0.045410156,\n        -0.017700195,\n        -0.02746582,\n        0.0390625,\n        -0.021728516,\n        -0.0053100586,\n        -0.006225586,\n        0.010253906,\n        0.0115356445,\n        0.000831604,\n        0.060302734,\n        0.025024414,\n        -0.024536133,\n        -0.03466797,\n        -0.026123047,\n        -0.020141602,\n        -0.017944336,\n        0.0017547607,\n        -0.002243042,\n        -0.016723633,\n        -0.015319824,\n        -0.018798828,\n        -0.010375977,\n        -0.038085938,\n        -0.0390625,\n        0.020141602,\n        -0.018920898,\n        0.030151367,\n        -0.025390625,\n        -0.08496094,\n        -0.05444336,\n        -0.010070801,\n        -0.0024108887,\n        -0.021728516,\n        0.026489258,\n        0.03491211,\n        -0.00088882446,\n        -0.060791016,\n        -0.048095703,\n        -0.05883789,\n        -0.018554688,\n        0.0072631836,\n        0.0074768066,\n        0.055664062,\n        -0.044433594,\n        0.0126953125,\n        -0.063964844,\n        -0.037109375,\n        0.00970459,\n        -0.011291504,\n        0.001625061,\n        0.018188477,\n        -0.014099121,\n        0.028930664,\n        -0.009521484,\n        0.05517578,\n        -0.036621094,\n        0.0024414062,\n        -0.008239746,\n        -0.037841797,\n        -0.024169922,\n        0.036865234,\n        0.060058594,\n        -0.012573242,\n        -0.04321289,\n        0.026855469,\n        0.0022583008,\n        0.002746582,\n        0.0078125,\n        -0.0146484375,\n        0.042236328,\n        0.032226562,\n        0.021362305,\n        0.05834961,\n        0.05419922,\n        -0.048339844,\n        0.0115356445,\n        -0.007751465,\n        -0.025146484,\n        0.036865234,\n        0.044433594,\n        0.015014648,\n        -0.024047852,\n        0.05493164,\n        -0.008666992,\n        0.03930664,\n        -0.018432617,\n        0.006500244,\n        0.0061950684,\n        0.023803711,\n        0.022949219,\n        -0.021240234,\n        -0.021606445,\n        -0.00793457,\n        -0.022583008,\n        -0.0027160645,\n        -0.033935547,\n        -0.019042969,\n        -0.003189087,\n        -0.037597656,\n        0.0625,\n        -0.018920898,\n        -0.044189453,\n        0.024658203,\n        0.0068359375,\n        -0.00030517578,\n        -0.028076172,\n        -0.045166016,\n        -0.026000977,\n        -0.028320312,\n        0.030761719,\n        -0.032958984,\n        -0.0018005371,\n        -0.028808594,\n        0.029907227,\n        0.045410156,\n        -0.00093460083,\n        -0.0014419556,\n        -0.0036773682,\n        -0.029418945,\n        -0.01586914,\n        -0.0049438477,\n        0.03466797,\n        -0.0066223145,\n        -0.030395508,\n        -0.014221191,\n        -0.011474609,\n        -0.03491211,\n        -0.03930664,\n        0.019165039,\n        -0.047851562,\n        0.03857422,\n        -0.00793457,\n        -0.038085938,\n        -0.050048828,\n        -0.021606445,\n        0.022583008,\n        -0.026977539,\n        -0.033935547,\n        -0.020751953,\n        0.045654297,\n        -0.006591797,\n        -0.0625,\n        -0.036376953,\n        0.033691406,\n        -0.013793945,\n        0.0020751953,\n        -0.0004386902,\n        -0.008422852,\n        -0.036376953,\n        -0.02709961,\n        -0.040039062,\n        0.0028381348,\n        0.018310547,\n        0.09472656,\n        0.033935547,\n        0.048828125,\n        -0.018554688,\n        -0.020507812,\n        -0.044921875,\n        0.029296875,\n        0.011474609,\n        0.038330078,\n        0.05053711,\n        -0.00793457,\n        -0.0050354004,\n        0.053222656,\n        0.0058288574,\n        0.002319336,\n        -0.01940918,\n        -0.01574707,\n        -0.041748047,\n        0.03955078,\n        -0.014953613,\n        0.037841797,\n        -0.05444336,\n        0.07324219,\n        -0.044677734,\n        -0.05517578,\n        0.024780273,\n        -0.02331543,\n        0.033935547,\n        0.032958984,\n        -0.014465332,\n        -0.016357422,\n        0.0028533936,\n        0.018066406,\n        -0.0625,\n        -0.0046691895,\n        0.022216797,\n        -0.022216797,\n        -0.017944336,\n        -0.03112793,\n        0.048583984,\n        0.0023956299,\n        -0.037353516,\n        0.045166016,\n        -0.072265625,\n        0.022338867,\n        0.023925781,\n        0.068847656,\n        0.033203125,\n        0.022583008,\n        0.008239746,\n        -0.020996094,\n        -0.039794922,\n        -0.03515625,\n        0.00051116943,\n        -0.036376953,\n        -0.022583008,\n        -0.0079956055,\n        -0.025390625,\n        0.024291992,\n        0.007507324,\n        -0.020629883,\n        0.032226562,\n        0.048583984,\n        0.021606445,\n        -0.034179688,\n        -0.08544922,\n        -0.0070495605,\n        -0.030517578,\n        0.0036773682,\n        -0.007171631,\n        -0.05053711,\n        -0.021728516,\n        0.013671875,\n        -0.0099487305,\n        -0.037597656,\n        0.057128906,\n        -0.017944336,\n        -0.020507812,\n        -0.03881836,\n        -0.0066223145,\n        0.012207031,\n        -0.021972656,\n        0.014953613,\n        0.018066406,\n        0.0005836487,\n        -0.031982422,\n        0.025512695,\n        0.016479492,\n        -0.07324219,\n        -0.005706787,\n        0.025634766,\n        -0.014160156,\n        0.06591797,\n        -0.030883789,\n        -0.02331543,\n        0.014282227,\n        0.0234375,\n        -0.032226562,\n        0.025878906,\n        0.040283203,\n        -0.025268555,\n        -0.0015182495,\n        -0.0038909912,\n        -0.0014190674,\n        -0.03540039,\n        0.0057678223,\n        -0.021850586,\n        0.04736328,\n        0.010681152,\n        0.056640625,\n        0.017089844,\n        0.008117676,\n        0.03125,\n        0.026977539,\n        0.03515625,\n        0.03466797,\n        0.037597656,\n        -0.0050964355,\n        -0.0026855469,\n        -0.0008277893,\n        -0.026977539,\n        -0.006164551,\n        0.0012283325,\n        -0.053710938,\n        -0.018554688,\n        -0.012512207,\n        0.0068969727,\n        -0.015380859,\n        0.024780273,\n        -0.011962891,\n        0.044921875,\n        -0.007873535,\n        -0.041992188,\n        0.023925781,\n        0.027709961,\n        0.0076293945,\n        -0.008056641,\n        -0.017089844,\n        0.030639648,\n        0.009643555,\n        -0.0061035156,\n        0.002609253,\n        -0.03930664,\n        0.017456055,\n        0.017456055,\n        -0.076660156,\n        -0.018798828,\n        -0.025878906,\n        0.008361816,\n        -0.049560547,\n        0.020874023,\n        -0.026245117,\n        0.024291992,\n        -0.029663086,\n        -0.008056641,\n        0.027709961,\n        -0.0030670166,\n        -0.03930664,\n        0.015136719,\n        0.028808594,\n        0.026489258,\n        0.014221191,\n        0.036376953,\n        0.010192871,\n        -0.0087890625,\n        -0.015991211,\n        -0.07470703,\n        -0.010620117,\n        0.011413574,\n        0.049560547,\n        -0.076171875,\n        0.016357422,\n        -0.002456665,\n        0.020019531,\n        0.00063323975,\n        -0.013916016,\n        -0.003768921,\n        -0.018676758,\n        0.06542969,\n        -0.029418945,\n        -0.024902344,\n        0.055908203,\n        0.05126953,\n        0.02734375,\n        0.036132812,\n        0.019897461,\n        0.02355957,\n        -0.002822876,\n        -0.04272461,\n        0.008850098,\n        0.0025939941,\n        0.056396484,\n        0.0115356445,\n        0.013305664,\n        0.0027618408,\n        -0.03930664,\n        -0.03112793,\n        -0.016723633,\n        -0.029541016,\n        -0.060791016,\n        -0.008300781,\n        0.018676758,\n        0.011474609,\n        -0.0024414062,\n        -0.025146484,\n        -0.050048828,\n        -0.033447266,\n        0.015136719,\n        -0.014404297,\n        0.01184082,\n        0.0001296997,\n        -0.037353516,\n        -0.02758789,\n        -0.037109375,\n        0.09814453,\n        -0.10205078,\n        -0.03491211,\n        -0.043945312,\n        -0.052978516,\n        -0.019897461,\n        -0.013122559,\n        -0.026855469,\n        0.004699707,\n        0.007080078,\n        0.0026245117,\n        -0.0006866455,\n        0.018798828,\n        -0.001335144,\n        0.049316406,\n        -0.036621094,\n        0.060546875,\n        -0.026245117,\n        -0.035888672,\n        -0.016723633,\n        -0.0079956055,\n        -0.050048828,\n        -0.02722168,\n        -0.017456055,\n        0.041259766,\n        -0.09375,\n        -0.033935547,\n        0.00006389618,\n        -0.01159668,\n        -0.053955078,\n        0.024536133,\n        -0.0040893555,\n        -0.01928711,\n        -0.04711914,\n        -0.01928711,\n        -0.0045776367,\n        -0.024780273,\n        0.0014190674,\n        -0.033203125,\n        0.049072266,\n        -0.03149414,\n        -0.024291992,\n        0.0005836487,\n        0.027954102,\n        -0.0095825195,\n        -0.045410156,\n        -0.004272461,\n        0.027709961,\n        -0.037841797,\n        0.04736328,\n        -0.013061523,\n        -0.0064086914,\n        -0.05859375,\n        0.033447266,\n        -0.0008621216,\n        0.05029297,\n        0.014709473,\n        -0.0053710938,\n        -0.007019043,\n        0.003616333,\n        0.0022125244,\n        -0.008422852,\n        -0.0017929077,\n        -0.03491211,\n        -0.049316406,\n        -0.022949219,\n        -0.029418945,\n        -0.006225586,\n        -0.0032043457,\n        0.017822266,\n        -0.005554199,\n        0.018188477,\n        -0.0068969727,\n        -0.022705078,\n        0.02331543,\n        0.06933594,\n        0.021850586,\n        0.05517578,\n        0.02355957,\n        -0.051757812,\n        -0.012451172,\n        0.01977539,\n        0.037597656,\n        -0.032226562,\n        -0.021728516,\n        -0.0703125,\n        0.0044555664,\n        0.032226562,\n        -0.059570312,\n        -0.009887695,\n        -0.03112793,\n        -0.026977539,\n        0.012756348,\n        0.01953125,\n        0.005645752,\n        -0.033203125,\n        0.014404297,\n        -0.015991211,\n        -0.067871094,\n        0.024902344,\n        -0.03149414,\n        0.034179688,\n        0.026123047,\n        0.031982422,\n        -0.047851562,\n        -0.040039062,\n        -0.008056641,\n        0.014160156,\n        -0.0008773804,\n        0.028564453,\n        -0.06689453,\n        -0.00491333,\n        0.029785156,\n        -0.005004883,\n        0.031982422,\n        -0.046142578,\n        -0.0071105957,\n        -0.040283203,\n        0.014526367,\n        0.006164551,\n        0.018920898,\n        -0.030151367,\n        0.029785156,\n        -0.03881836,\n        -0.032470703,\n        -0.007446289,\n        -0.076171875,\n        -0.019042969,\n        -0.0050964355,\n        -0.014953613,\n        -0.012268066,\n        0.016845703,\n        0.008239746,\n        0.045654297,\n        -0.01586914,\n        0.00090789795,\n        0.04296875,\n        0.057617188,\n        0.026000977,\n        -0.0070495605,\n        0.022705078,\n        -0.029541016,\n        0.051757812,\n        -0.030883789,\n        -0.013977051,\n        -0.015563965,\n        0.00982666,\n        0.0062561035,\n        -0.022338867,\n        -0.0043029785,\n        -0.009216309,\n        -0.0034484863,\n        0.022827148,\n        -0.010986328,\n        0.029418945,\n        -0.03491211,\n        -0.026611328,\n        0.08300781,\n        0.048828125,\n        0.029174805,\n        0.041748047,\n        0.024169922,\n        0.008239746,\n        -0.020751953,\n        0.0049743652,\n        0.014953613,\n        0.029052734,\n        0.0047912598,\n        0.053710938,\n        -0.032714844,\n        -0.026000977,\n        0.0058898926,\n        -0.017700195,\n        0.020874023,\n        0.021484375,\n        -0.047607422,\n        0.030273438,\n        -0.0041503906,\n        0.012390137,\n        -0.048339844,\n        -0.06542969,\n        -0.033691406,\n        -0.049560547,\n        -0.018676758,\n        0.03515625,\n        -0.0052490234,\n        0.037353516,\n        -0.0032653809,\n        -0.016357422,\n        0.026123047,\n        -0.017578125,\n        0.02734375,\n        -0.038085938,\n        0.0062561035,\n        0.020996094,\n        0.009887695,\n        -0.029541016,\n        -0.015075684,\n        -0.016479492,\n        0.023071289,\n        -0.0071105957,\n        0.037597656,\n        -0.059326172,\n        0.03466797,\n        -0.040283203,\n        0.032958984,\n        0.016113281,\n        -0.009094238,\n        -0.00024795532,\n        0.02722168,\n        0.0060424805,\n        0.020751953,\n        -0.028930664,\n        0.03930664,\n        0.021362305,\n        0.029785156,\n        -0.091796875,\n        0.052001953,\n        0.021972656,\n        0.010925293,\n        -0.008056641,\n        -0.016601562,\n        0.037353516,\n        0.047851562,\n        0.06542969,\n        -0.0078125,\n        0.071777344,\n        -0.064941406,\n        0.04663086,\n        -0.033935547,\n        0.046875,\n        -0.016357422,\n        0.01184082,\n        -0.039794922,\n        0.08154297,\n        -0.008483887,\n        -0.0057678223,\n        0.033935547,\n        -0.02355957,\n        -0.0234375,\n        0.024169922,\n        0.044433594,\n        0.032470703,\n        0.044433594,\n        -0.021362305,\n        0.03930664,\n        -0.007385254,\n        0.012145996,\n        0.040039062,\n        0.011657715,\n        0.011047363,\n        -0.008850098,\n        0.007232666,\n        -0.01953125,\n        0.020874023,\n        0.050048828,\n        -0.044189453,\n        -0.040283203,\n        -0.013977051,\n        -0.006652832,\n        -0.0022735596,\n        -0.023803711,\n        0.011474609,\n        0.01574707,\n        -0.017700195,\n        -0.026000977,\n        -0.03173828,\n        -0.0034942627,\n        -0.015197754,\n        0.004425049,\n        -0.06640625,\n        -0.017089844,\n        -0.013244629,\n        0.033447266,\n        0.020263672,\n        0.006713867,\n        0.029907227,\n        -0.00062179565,\n        0.023071289,\n        0.048095703,\n        -0.0007972717,\n        0.0067749023,\n        0.01965332,\n        0.076171875,\n        0.0066833496,\n        -0.0035095215,\n        -0.021728516,\n        0.061279297,\n        0.006011963,\n        -0.064453125,\n        0.018554688,\n        -0.033203125,\n        0.00022983551,\n        -0.006958008,\n        -0.02319336,\n        0.0027923584,\n        0.016113281,\n        0.010498047,\n        -0.03466797,\n        -0.0039367676,\n        -0.032470703,\n        -0.017089844,\n        0.025756836,\n        0.010009766,\n        0.030883789,\n        -0.025634766,\n        0.01928711,\n        0.013793945,\n        0.009033203,\n        -0.025756836,\n        -0.011413574,\n        0.028076172,\n        -0.015197754,\n        -0.0038146973,\n        0.0069274902,\n        -0.024169922,\n        -0.0061950684,\n        -0.025756836,\n        -0.015319824,\n        0.004486084,\n        -0.008911133,\n        -0.022216797,\n        0.03540039,\n        0.0078125,\n        0.017700195,\n        0.011779785,\n        0.0079956055,\n        -0.0154418945,\n        0.001953125,\n        0.012634277,\n        0.049804688,\n        -0.03540039,\n        -0.026367188,\n        0.0703125,\n        0.0019073486,\n        0.051513672,\n        -0.020263672,\n        -0.029418945,\n        0.03540039,\n        -0.010559082,\n        -0.0036468506,\n        0.006500244,\n        0.009216309,\n        0.0023956299,\n        -0.041259766,\n        0.028442383,\n        -0.06298828,\n        0.012084961,\n        -0.01171875,\n        -0.017700195,\n        -0.029785156,\n        -0.057128906,\n        -0.02722168,\n        -0.075683594,\n        0.01171875,\n        0.026489258,\n        -0.014282227,\n        -0.02709961,\n        0.01574707,\n        -0.0054626465,\n        -0.008422852,\n        0.016479492,\n        -0.060791016,\n        0.044433594,\n        0.053955078,\n        -0.009216309,\n        -0.028320312,\n        -0.05029297,\n        -0.049804688,\n        0.087402344,\n        -0.025024414,\n        -0.05419922,\n        0.008483887,\n        -0.031982422,\n        -0.021484375,\n        0.01928711,\n        -0.022338867,\n        -0.004638672,\n        0.01550293,\n        -0.018432617,\n        -0.015563965,\n        -0.0018997192,\n        0.015319824,\n        -0.020874023,\n        -0.025268555,\n        -0.024047852,\n        -0.022216797,\n        -0.02331543,\n        0.004547119,\n        -0.038330078,\n        0.013122559,\n        0.055664062,\n        0.033935547,\n        0.01940918,\n        0.013244629,\n        0.063964844,\n        -0.03881836,\n        -0.04272461,\n        -0.027709961,\n        -0.048095703,\n        -0.006225586,\n        0.037597656,\n        0.025512695,\n        0.025390625,\n        0.008422852,\n        -0.02331543,\n        0.003616333,\n        -0.026000977,\n        0.04321289,\n        0.025634766,\n        0.0146484375,\n        -0.040771484,\n        -0.011230469,\n        -0.020385742,\n        0.009033203,\n        0.018554688,\n        0.0030059814,\n        0.04296875,\n        -0.040283203,\n        -0.07373047,\n        0.0048828125,\n        -0.032226562,\n        0.0115356445,\n        -0.020263672,\n        0.042236328,\n        -0.015014648,\n        0.012390137,\n        0.022094727,\n        0.018066406,\n        -0.04711914,\n        -0.022705078,\n        -0.034179688,\n        -0.03881836,\n        -0.01977539,\n        0.03466797,\n        -0.0071411133,\n        -0.006958008,\n        -0.024536133,\n        -0.0023651123,\n        0.0021820068,\n        -0.0062561035,\n        -0.017333984,\n        0.018676758,\n        -0.0046691895,\n        -0.051757812,\n        -0.041015625,\n        0.0045776367,\n        0.0053100586,\n        -0.002380371,\n        -0.020629883,\n        -0.028564453,\n        -0.020019531,\n        -0.045410156,\n        -0.049560547,\n        -0.0063171387,\n        -0.029663086,\n        -0.029052734,\n        -0.03173828,\n        -0.013122559,\n        0.0027618408,\n        0.015991211,\n        -0.0034332275,\n        -0.055908203,\n        0.008178711,\n        0.036376953,\n        0.015319824,\n        -0.045166016,\n        0.016723633,\n        -0.028442383,\n        0.029907227,\n        -0.02734375,\n        -0.02722168,\n        0.00014781952,\n        0.05102539,\n        -0.06738281,\n        -0.040039062,\n        0.0070495605,\n        0.0027313232,\n        -0.05517578,\n        0.010803223,\n        -0.05102539,\n        0.022338867,\n        0.053710938,\n        -0.05883789,\n        -0.022338867,\n        -0.017944336,\n        0.027832031,\n        -0.04711914,\n        -0.028076172,\n        0.038085938,\n        0.0075683594,\n        -0.017333984,\n        0.06201172,\n        -0.025390625,\n        0.029052734,\n        0.020629883,\n        -0.040039062,\n        0.0087890625,\n        -0.022949219,\n        -0.015991211,\n        -0.0025177002,\n        -0.01171875,\n        -0.020019531,\n        0.008605957,\n        -0.053222656,\n        0.010070801,\n        -0.029785156,\n        -0.031982422,\n        0.017822266,\n        -0.0025177002,\n        -0.0138549805,\n        0.023803711,\n        -0.0095825195,\n        0.046142578,\n        0.014343262,\n        0.01953125,\n        0.0154418945,\n        0.025756836,\n        -0.008728027,\n        -0.012329102,\n        0.013427734,\n        -0.022460938,\n        0.0546875,\n        -0.0007286072,\n        -0.060302734,\n        0.008056641,\n        -0.03100586,\n        0.03173828,\n        0.091796875,\n        0.009094238,\n        -0.0034637451,\n        0.010498047,\n        -0.009521484,\n        0.018676758,\n        0.012084961,\n        -0.0069885254,\n        -0.03564453,\n        0.010986328,\n        0.04345703,\n        -0.0025939941,\n        -0.0008621216,\n        -0.037109375,\n        -0.03930664,\n        -0.013122559,\n        0.059814453,\n        -0.033935547,\n        -0.017456055,\n        0.02746582,\n        0.0021514893,\n        -0.021728516,\n        0.014953613,\n        -0.019897461,\n        0.0074157715,\n        -0.012023926,\n        -0.029052734,\n        -0.018676758,\n        -0.003479004,\n        0.014038086,\n        0.063964844,\n        0.0045776367,\n        -0.010498047,\n        -0.040527344,\n        0.048583984,\n        0.026245117,\n        0.009033203,\n        0.068847656,\n        0.009399414,\n        0.06542969,\n        -0.014953613,\n        0.028076172,\n        -0.028442383,\n        -0.005279541,\n        -0.0023498535,\n        0.02331543,\n        0.036376953,\n        0.00075531006,\n        0.018920898,\n        0.029907227,\n        -0.020141602,\n        0.011047363,\n        -0.0073242188,\n        -0.021362305,\n        0.016845703,\n        0.015563965\n    ],\n    \"inputTextTokenCount\": 8,\n    \"message\": null\n}"
						}
					]
				},
				{
					"name": "amazon.titan-image-generator-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"textToImageParams\": {\r\n        \"text\": \"What is the purpose of life\"\r\n    },\r\n    \"taskType\": \"TEXT_IMAGE\",\r\n    \"imageGenerationConfig\": {\r\n        \"cfgScale\": 8,\r\n        \"seed\": 0,\r\n        \"quality\": \"standard\",\r\n        \"width\": 1024,\r\n        \"height\": 1024,\r\n        \"numberOfImages\": 3\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "amazon.titan-image-generator-v1",
									"uuid": "8813ddce-22b8-4089-ab1b-b5bb593e5ff9"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Anthropic",
			"item": [
				{
					"name": "anthropic.claude-3-opus-20240229-v1:0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"anthropic_version\": \"bedrock-2023-05-31\",\r\n    \"max_tokens\": 512,\r\n    \"messages\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"content\": [\r\n                {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"What is the purpose of life\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"temperature\": 0.5,\r\n    \"top_p\": 0.9\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "anthropic.claude-3-opus-20240229-v1:0",
									"uuid": "79485fed-f002-43b9-ad5d-3964b3f44e82"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"anthropic_version\": \"bedrock-2023-05-31\",\r\n    \"max_tokens\": 512,\r\n    \"messages\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"content\": [\r\n                {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"What is the purpose of life\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"temperature\": 0.5,\r\n    \"top_p\": 0.9\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "anthropic.claude-3-opus-20240229-v1:0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 16 Apr 2024 19:06:45 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1702"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "47901619-87c9-4100-aede-0f047de81eca"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "12428"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "302"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "13"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"msg_bdrk_013A5M1RwMupW29AqR9nzg6M\",\n    \"type\": \"message\",\n    \"role\": \"assistant\",\n    \"content\": [\n        {\n            \"type\": \"text\",\n            \"text\": \"The purpose of life is a philosophical and religious question that has been debated for centuries, and there is no single, universally accepted answer. Different individuals, cultures, and belief systems have their own perspectives on what gives life meaning and purpose. Here are a few common views:\\n\\n1. Religious and spiritual purpose: Many people believe that the purpose of life is to fulfill a divine plan, worship a higher power, or achieve spiritual enlightenment.\\n\\n2. Happiness and well-being: Some argue that the purpose of life is to seek happiness, contentment, and overall well-being for oneself and others.\\n\\n3. Personal growth and self-actualization: Others believe that life's purpose is to continually learn, grow, and strive to reach one's full potential.\\n\\n4. Serving others and making a difference: Some individuals find purpose in contributing to society, helping others, and leaving a positive impact on the world.\\n\\n5. Experiencing and appreciating life: Another perspective is that the purpose of life is simply to experience and appreciate the journey, with all its joys and challenges.\\n\\n6. Existentialism: Existentialist philosophers argue that life has no inherent purpose, and it is up to each individual to create their own meaning and purpose.\\n\\nUltimately, the purpose of life is a deeply personal question that each individual must explore and answer for themselves based on their own values, beliefs, and experiences.\"\n        }\n    ],\n    \"model\": \"claude-3-opus-20240229\",\n    \"stop_reason\": \"end_turn\",\n    \"stop_sequence\": null,\n    \"usage\": {\n        \"input_tokens\": 13,\n        \"output_tokens\": 302\n    }\n}"
						}
					]
				},
				{
					"name": "anthropic.claude-3-sonnet-20240229-v1:0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"anthropic_version\": \"bedrock-2023-05-31\",\r\n    \"max_tokens\": 512,\r\n    \"messages\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"content\": [\r\n                {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"What is the purpose of life\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"temperature\": 0.5,\r\n    \"top_p\": 0.9\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "anthropic.claude-3-sonnet-20240229-v1:0",
									"uuid": "2186eb51-093f-461e-8cc8-ccbe08488889"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "modelId",
										"value": "anthropic.claude-v2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"anthropic_version\": \"bedrock-2023-05-31\",\r\n    \"max_tokens\": 512,\r\n    \"messages\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"content\": [\r\n                {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"What is the purpose of life\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"temperature\": 0.5,\r\n    \"top_p\": 0.9\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "anthropic.claude-3-sonnet-20240229-v1:0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:28:08 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1329"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "eb0871e4-a48b-4f2e-a0cf-31bd9efef8bd"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "6866"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "217"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "13"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"msg_01LQXqzsaT7TjdsWVtJhSFfo\",\n    \"type\": \"message\",\n    \"role\": \"assistant\",\n    \"content\": [\n        {\n            \"type\": \"text\",\n            \"text\": \"There is no single, universally agreed upon purpose of life. Philosophers, religions, and individuals have different perspectives on this deep question. Some potential purposes that have been proposed include:\\n\\n- To find happiness and fulfillment\\n- To grow as individuals and reach our fullest potential \\n- To reproduce and perpetuate the species\\n- To make the world a better place through good works\\n- To discover truth and gain knowledge\\n- To develop spiritually and get in harmony with a higher reality\\n- To enjoy the pleasures and beauty of the world\\n- To create, whether that's art, relationships, businesses, etc.\\n- Simply to live authentically and make the most of our finite existence\\n\\nUltimately, the purpose of life is a highly personal question. Some find purpose through relationships, some through achievements, some through philosophical or religious beliefs. Others feel life itself is the purpose, to be experienced fully in the present moment. There are endless perspectives, and each individual has to decide what gives their own life meaning and purpose.\"\n        }\n    ],\n    \"model\": \"claude-3-sonnet-28k-20240229\",\n    \"stop_reason\": \"end_turn\",\n    \"stop_sequence\": null,\n    \"usage\": {\n        \"input_tokens\": 13,\n        \"output_tokens\": 217\n    }\n}"
						}
					]
				},
				{
					"name": "anthropic.claude-3-haiku-20240307-v1:0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"anthropic_version\": \"bedrock-2023-05-31\",\r\n    \"max_tokens\": 512,\r\n    \"messages\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"content\": [\r\n                {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"What is the purpose of life\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"temperature\": 0.5,\r\n    \"top_p\": 0.9\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "anthropic.claude-3-haiku-20240307-v1:0",
									"uuid": "32e68421-cf0b-40b5-a16a-2925482394b0"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "modelId",
										"value": "anthropic.claude-v2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"anthropic_version\": \"bedrock-2023-05-31\",\r\n    \"max_tokens\": 512,\r\n    \"messages\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"content\": [\r\n                {\r\n                    \"type\": \"text\",\r\n                    \"text\": \"What is the purpose of life\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"temperature\": 0.5,\r\n    \"top_p\": 0.9\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "anthropic.claude-3-haiku-20240307-v1:0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:28:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1303"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "fb8b4294-c876-4461-83d4-e2c9d61030ec"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "3113"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "209"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "13"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"msg_01Ttm1AEENSwy96vd5YBM8jG\",\n    \"type\": \"message\",\n    \"role\": \"assistant\",\n    \"content\": [\n        {\n            \"type\": \"text\",\n            \"text\": \"There is no single, agreed-upon purpose of life. Different people and philosophies have proposed various perspectives on this deep and complex question. Some common themes include:\\n\\n- Finding meaning, fulfillment and happiness through relationships, personal growth, creative expression, service to others, or connection to something larger than oneself.\\n\\n- Pursuing knowledge, understanding the nature of reality, and expanding human potential.\\n\\n- Living ethically and making a positive contribution to the world.\\n\\n- Achieving spiritual enlightenment or union with the divine.\\n\\n- Embracing the inherent uncertainty and mystery of existence, and simply living fully in the present moment.\\n\\nUltimately, the purpose of life is a highly personal and subjective matter. Many believe it is up to each individual to determine their own meaning and purpose through reflection, experience, and the choices they make. There is no universally right or wrong answer - the purpose of life is something each person has to grapple with and define for themselves.\"\n        }\n    ],\n    \"model\": \"claude-3-haiku-48k-20240307\",\n    \"stop_reason\": \"end_turn\",\n    \"stop_sequence\": null,\n    \"usage\": {\n        \"input_tokens\": 13,\n        \"output_tokens\": 209\n    }\n}"
						}
					]
				},
				{
					"name": "anthropic.claude-v2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"\\n\\nHuman:What is the purpose of life\\n\\nAssistant:\",\r\n    \"max_tokens_to_sample\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "anthropic.claude-v2",
									"uuid": "3a10c22b-a3e4-47d4-8817-200159454b11"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "modelId",
										"value": "anthropic.claude-v2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"\\n\\nHuman:What is the purpose of life\\n\\nAssistant:\",\r\n    \"max_tokens_to_sample\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "anthropic.claude-v2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:52:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "306"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "65c5fff5-a380-4d97-8371-8bd9d8c137e1"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "1822"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "53"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"completion\": \" I'm an AI assistant created by Anthropic to be helpful, harmless, and honest. I don't have my own purpose or opinions on philosophical questions like the meaning of life. Those are complex topics that humans continue to ponder and debate.\",\n    \"stop_reason\": \"stop_sequence\",\n    \"stop\": \"\\n\\nHuman:\"\n}"
						}
					]
				},
				{
					"name": "anthropic.claude-v2:1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"\\n\\nHuman:What is the purpose of life\\n\\nAssistant:\",\r\n    \"max_tokens_to_sample\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "anthropic.claude-v2:1",
									"uuid": "cafd322c-78f0-47a9-b65a-a64d82da89a9"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "modelId",
										"value": "anthropic.claude-v2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"\\n\\nHuman:What is the purpose of life\\n\\nAssistant:\",\r\n    \"max_tokens_to_sample\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "anthropic.claude-v2:1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:17:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "332"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "eaf5c598-e521-4511-a428-0ce2efeed5ec"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "2952"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "59"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"completion\": \" I don't have a definitive answer on the purpose of life. As an AI assistant created by Anthropic to be helpful, harmless, and honest, I don't have personal opinions on such philosophical questions. Reasonable people can disagree on the meaning and purpose of life.\",\n    \"stop_reason\": \"stop_sequence\",\n    \"stop\": \"\\n\\nHuman:\"\n}"
						}
					]
				},
				{
					"name": "anthropic.claude-instant-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"\\n\\nHuman:What is the purpose of life\\n\\nAssistant:\",\r\n    \"max_tokens_to_sample\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "anthropic.claude-instant-v1",
									"uuid": "e0c25f43-12de-449b-b9bc-d26e2ef1dcea"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "modelId",
										"value": "anthropic.claude-v2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"\\n\\nHuman:What is the purpose of life\\n\\nAssistant:\",\r\n    \"max_tokens_to_sample\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "anthropic.claude-instant-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:17:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "292"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "fa9ff75e-d94d-4668-b4b7-2bd0e5bc0a67"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "1317"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "54"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"completion\": \" I don't have a definitive answer to the purpose of life. As an AI, I was created by Anthropic to be helpful, harmless, and honest. Different people and philosophies may have different views on the purpose or meaning of life.\",\n    \"stop_reason\": \"stop_sequence\",\n    \"stop\": \"\\n\\nHuman:\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Cohere",
			"item": [
				{
					"name": "cohere.command-text-v14",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\",\r\n    \"temperature\": 0,\r\n    \"p\": 0.9,\r\n    \"max_tokens\": 4096\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "cohere.command-text-v14",
									"uuid": "d5ac90cc-c0fc-4655-9a92-ec738f846ed4"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\",\r\n    \"temperature\": 0,\r\n    \"p\": 0.9,\r\n    \"max_tokens\": 4096\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "cohere.command-text-v14"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:53:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1200"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "d6acba16-99c0-4423-9127-3008bc41032b"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "6281"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "203"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"generations\": [\n        {\n            \"finish_reason\": \"COMPLETE\",\n            \"id\": \"d6dea12a-495a-420b-b922-41beadeada8e\",\n            \"text\": \" The purpose of life is a complex and deeply personal question that has been pondered by philosophers, theologians, and individuals throughout history. There is no single answer to this question, as the purpose of life can vary greatly depending on an individual's beliefs, values, and experiences. \\n\\nSome people may believe that the purpose of life is to seek happiness, others may believe that it is to fulfill a specific destiny or purpose that they were born with, and others may believe that the purpose of life is to contribute to society or to help others. \\n\\nUltimately, the purpose of life is a deeply personal and subjective concept that can be shaped by an individual's beliefs, values, and experiences. It is important to reflect on your own beliefs and values to determine what the purpose of life means to you. \\n\\nIt is also important to note that the purpose of life can change over time as individuals grow and develop. It is a question that can be explored and re-evaluated throughout one's life.\"\n        }\n    ],\n    \"id\": \"d6acba16-99c0-4423-9127-3008bc41032b\",\n    \"prompt\": \"What is the purpose of life\"\n}"
						}
					]
				},
				{
					"name": "cohere.command-light-text-v14",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\",\r\n    \"temperature\": 0,\r\n    \"p\": 0.9,\r\n    \"max_tokens\": 4096\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "cohere.command-light-text-v14",
									"uuid": "42692016-48ce-4876-ac32-f61f726b6e61"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\",\r\n    \"temperature\": 0,\r\n    \"p\": 0.9,\r\n    \"max_tokens\": 4096\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "cohere.command-light-text-v14"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:08:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2268"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "11c37dda-915e-4ab9-ada0-737354d0ad26"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "7626"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "409"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"generations\": [\n        {\n            \"finish_reason\": \"COMPLETE\",\n            \"id\": \"fd7c6777-b762-4858-bc4e-9f1dfa3d87e8\",\n            \"text\": \" The question of the purpose of life has been a subject of philosophical, religious, and scientific contemplation since the beginning of humankind. There is no one-size-fits-all answer to this complex question, as the purpose of life can vary from person to person, culture to culture, and individual to individual.  \\n  \\nFrom a philosophical perspective, some common themes and ideas about the purpose of life include:  \\n  \\n- Existentialism: This philosophical movement emphasizes the individual's existence and agency, and the search for meaning and purpose in life. Existentialists argue that individuals must create their own purpose and meaning, rather than seeking it in external sources such as religion or societal norms. Some famous existentialist thinkers include Jean-Paul Sartre, Friedrich Nietzsche, and Albert Camus.  \\n  \\n- Humanism: Humanism is a philosophical and ethical stance that emphasizes the value of human beings and our capacity for reason, compassion, and self-improvement. Humanists believe that individuals have the power to shape their own lives and create their own purpose.  \\n  \\n- Spirituality: Spirituality is a broad term that can encompass a range of beliefs and practices, including religious and non-religious perspectives. Some people believe that the purpose of life is to connect with the divine, or to find inner peace and fulfillment. Others may believe that the purpose of life is to serve others, or to live in harmony with the natural world.  \\n  \\n- Religion: Many religions have specific beliefs and teachings about the purpose of life. For example, Christianity teaches that the purpose of life is to follow Jesus Christ and live a life of love, service, and compassion. Islam teaches that the purpose of life is to worship Allah and live a life of piety and righteousness.  \\n  \\nIt is important to note that these are just a few of the many perspectives on the purpose of life, and that individuals may find meaning and purpose in different ways. The key is to explore, reflect, and find what is meaningful and fulfilling to you.\"\n        }\n    ],\n    \"id\": \"11c37dda-915e-4ab9-ada0-737354d0ad26\",\n    \"prompt\": \"What is the purpose of life\"\n}"
						}
					]
				},
				{
					"name": "cohere.embed-english-v3",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texts\": [\"What is the purpose of life\"],\r\n    \"input_type\": \"search_document\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "cohere.embed-english-v3",
									"uuid": "15c1b3f0-1eb2-4cb9-ad4c-52dcae5f45f4"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texts\": [\"What is the purpose of life\"],\r\n    \"input_type\": \"search_document\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "cohere.embed-english-v3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:45:59 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "12841"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a3798f3a-7471-46f5-bc04-f43dd4f41958"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "279"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"embeddings\": [\n        [\n            -0.040527344,\n            0.010772705,\n            -0.07208252,\n            -0.0040664673,\n            -0.03652954,\n            -0.0390625,\n            -0.052581787,\n            0.002773285,\n            -0.025375366,\n            0.052581787,\n            0.010032654,\n            -0.02645874,\n            0.012489319,\n            -0.025863647,\n            0.0016717911,\n            -0.0065193176,\n            0.016845703,\n            -0.003168106,\n            0.0063171387,\n            -0.019485474,\n            -0.006034851,\n            -0.002752304,\n            -0.0013141632,\n            -0.02041626,\n            0.037750244,\n            -0.0003399849,\n            -0.06274414,\n            -0.0060424805,\n            -0.035369873,\n            -0.04107666,\n            0.006439209,\n            0.071899414,\n            0.037902832,\n            -0.05618286,\n            0.048797607,\n            0.061462402,\n            -0.0022602081,\n            -0.013748169,\n            0.007762909,\n            -0.005306244,\n            0.01512146,\n            -0.019332886,\n            -0.047943115,\n            -0.0073013306,\n            -0.05114746,\n            -0.03378296,\n            0.021575928,\n            0.007774353,\n            -0.015274048,\n            -0.034362793,\n            -0.0057144165,\n            -0.0335083,\n            0.035949707,\n            0.00027918816,\n            -0.008148193,\n            0.0025291443,\n            -0.04421997,\n            -0.009056091,\n            0.015602112,\n            -0.036254883,\n            -0.0076179504,\n            -0.016036987,\n            0.06628418,\n            0.02154541,\n            0.01889038,\n            -0.024520874,\n            0.0037059784,\n            0.030395508,\n            -0.008361816,\n            0.0135650635,\n            0.008766174,\n            -0.019622803,\n            0.020080566,\n            -0.009635925,\n            -0.009796143,\n            -0.006652832,\n            0.030578613,\n            0.03643799,\n            0.004436493,\n            -0.0317688,\n            -0.036987305,\n            -0.03717041,\n            0.0007586479,\n            -0.018676758,\n            -0.0047683716,\n            0.008514404,\n            -0.0006375313,\n            0.00085020065,\n            0.014793396,\n            -0.0715332,\n            0.010826111,\n            0.080200195,\n            -0.047424316,\n            0.033294678,\n            -0.032684326,\n            -0.03982544,\n            0.00522995,\n            -0.00037002563,\n            -0.04220581,\n            -0.032928467,\n            -0.06958008,\n            -0.013748169,\n            -0.01386261,\n            -0.012191772,\n            -0.0026512146,\n            0.03475952,\n            0.0012168884,\n            -0.046325684,\n            0.015541077,\n            0.033569336,\n            0.0032291412,\n            0.011405945,\n            0.032989502,\n            0.0019435883,\n            0.03781128,\n            -0.0064926147,\n            0.0068244934,\n            0.043823242,\n            -0.0011606216,\n            0.0023994446,\n            0.0040664673,\n            0.015052795,\n            0.033843994,\n            -0.025283813,\n            0.042755127,\n            0.05895996,\n            -0.016159058,\n            -0.06842041,\n            0.030456543,\n            0.008468628,\n            -0.029205322,\n            0.03543091,\n            -0.07757568,\n            -0.07043457,\n            -0.047698975,\n            -0.013961792,\n            -0.00869751,\n            -0.031799316,\n            -0.033172607,\n            0.0057411194,\n            -0.024368286,\n            -0.018325806,\n            0.013420105,\n            -0.022598267,\n            0.013557434,\n            0.002008438,\n            0.05480957,\n            0.00642395,\n            0.013465881,\n            0.02458191,\n            -0.08239746,\n            0.09039307,\n            0.009643555,\n            0.044433594,\n            -0.07122803,\n            0.008491516,\n            -0.10913086,\n            0.03375244,\n            0.045776367,\n            0.03086853,\n            0.009742737,\n            -0.0058288574,\n            0.05154419,\n            -0.0003979206,\n            -0.011802673,\n            0.01146698,\n            -0.04727173,\n            -0.005050659,\n            0.0066490173,\n            0.014465332,\n            -0.016235352,\n            0.004837036,\n            0.025253296,\n            -0.02909851,\n            -0.014862061,\n            -0.0018825531,\n            0.019836426,\n            -0.048034668,\n            0.017196655,\n            0.04849243,\n            0.034179688,\n            -0.013702393,\n            -0.043823242,\n            0.05053711,\n            -0.028045654,\n            -0.020492554,\n            0.0013608932,\n            -0.0022144318,\n            0.0034446716,\n            0.017791748,\n            -0.036071777,\n            0.03778076,\n            -0.0206604,\n            -0.0087890625,\n            -0.034088135,\n            -0.004032135,\n            -0.015853882,\n            0.010032654,\n            -0.031097412,\n            0.04046631,\n            0.019561768,\n            0.01058197,\n            0.0007123947,\n            -0.017303467,\n            -0.0019245148,\n            -0.019851685,\n            0.00008291006,\n            -0.005344391,\n            0.037109375,\n            0.04437256,\n            0.0076179504,\n            0.037475586,\n            0.015213013,\n            -0.09680176,\n            -0.047698975,\n            0.01361084,\n            -0.019332886,\n            -0.051727295,\n            -0.015075684,\n            -0.022323608,\n            -0.008384705,\n            0.024429321,\n            -0.04953003,\n            0.0066223145,\n            0.043121338,\n            0.013023376,\n            -0.011619568,\n            -0.019317627,\n            0.00440979,\n            0.029830933,\n            -0.011695862,\n            -0.0068244934,\n            -0.0017538071,\n            -0.022857666,\n            -0.058135986,\n            -0.010391235,\n            -0.0016641617,\n            0.03161621,\n            -0.001414299,\n            0.028915405,\n            0.022781372,\n            0.024673462,\n            -0.021148682,\n            -0.0051612854,\n            0.04736328,\n            -0.019073486,\n            0.024932861,\n            -0.014465332,\n            -0.01285553,\n            -0.004722595,\n            0.0076904297,\n            -0.022842407,\n            0.041046143,\n            0.0037250519,\n            -0.0013999939,\n            0.04071045,\n            0.033050537,\n            -0.024414062,\n            0.029159546,\n            0.052642822,\n            -0.027008057,\n            0.09136963,\n            0.03729248,\n            0.027862549,\n            -0.020477295,\n            0.023712158,\n            -0.007209778,\n            0.04916382,\n            -0.052520752,\n            0.0066566467,\n            0.05090332,\n            0.075927734,\n            -0.0041999817,\n            -0.010520935,\n            0.026763916,\n            -0.013389587,\n            0.019348145,\n            0.0062026978,\n            -0.046569824,\n            -0.023376465,\n            -0.004749298,\n            -0.010475159,\n            -0.02571106,\n            0.0062713623,\n            0.03942871,\n            0.042877197,\n            0.018539429,\n            0.02394104,\n            0.0074539185,\n            -0.016967773,\n            0.033081055,\n            -0.015609741,\n            -0.01209259,\n            0.007247925,\n            0.020721436,\n            -0.027389526,\n            0.027999878,\n            0.05340576,\n            -0.037963867,\n            0.01651001,\n            -0.045288086,\n            0.034301758,\n            0.026229858,\n            0.0067481995,\n            0.005897522,\n            0.011054993,\n            -0.012840271,\n            0.04537964,\n            0.022735596,\n            0.0037345886,\n            -0.026855469,\n            0.053131104,\n            0.021026611,\n            -0.033813477,\n            0.037109375,\n            -0.009338379,\n            0.022644043,\n            -0.02331543,\n            -0.033050537,\n            -0.012512207,\n            0.0007004738,\n            0.03982544,\n            -0.032440186,\n            -0.027038574,\n            0.031311035,\n            -0.0016298294,\n            -0.060058594,\n            -0.026229858,\n            0.029754639,\n            0.0040397644,\n            0.04071045,\n            0.012649536,\n            -0.014625549,\n            -0.017349243,\n            0.023223877,\n            -0.009651184,\n            -0.0018606186,\n            0.040863037,\n            0.001200676,\n            -0.015823364,\n            0.016525269,\n            -0.008651733,\n            0.007045746,\n            -0.0063667297,\n            0.055114746,\n            -0.04324341,\n            0.012588501,\n            0.0017786026,\n            0.040496826,\n            0.031402588,\n            -0.028030396,\n            -0.015548706,\n            -0.013534546,\n            -0.0074424744,\n            0.07122803,\n            -0.07550049,\n            -0.019958496,\n            0.018417358,\n            0.038330078,\n            -0.04244995,\n            -0.011444092,\n            -0.0030918121,\n            -0.049621582,\n            0.0011644363,\n            0.040924072,\n            -0.05154419,\n            -0.008430481,\n            -0.0030136108,\n            0.011314392,\n            0.01675415,\n            -0.015174866,\n            -0.03125,\n            0.045288086,\n            0.038024902,\n            0.012321472,\n            -0.031982422,\n            0.043060303,\n            -0.023239136,\n            0.0075569153,\n            0.01272583,\n            0.023452759,\n            0.021713257,\n            0.035125732,\n            0.015457153,\n            0.01448822,\n            0.02166748,\n            0.0060577393,\n            0.047180176,\n            0.011528015,\n            -0.011734009,\n            0.012016296,\n            0.03942871,\n            0.006259918,\n            -0.00630188,\n            0.049102783,\n            -0.007534027,\n            -0.01348114,\n            0.04058838,\n            -0.06555176,\n            -0.009338379,\n            -0.010917664,\n            -0.02734375,\n            -0.017532349,\n            -0.013381958,\n            -0.06854248,\n            0.0011825562,\n            -0.058624268,\n            -0.036071777,\n            0.032989502,\n            0.023513794,\n            -0.053863525,\n            0.029891968,\n            0.0020771027,\n            -0.04812622,\n            -0.019439697,\n            0.021087646,\n            -0.031433105,\n            0.010093689,\n            0.03692627,\n            -0.010437012,\n            -0.027130127,\n            0.00016665459,\n            -0.022064209,\n            0.020706177,\n            0.014511108,\n            0.057769775,\n            0.039489746,\n            -0.009017944,\n            0.05215454,\n            -0.016021729,\n            0.024627686,\n            -0.026687622,\n            -0.051940918,\n            -0.050933838,\n            0.013710022,\n            0.015296936,\n            -0.014732361,\n            0.018463135,\n            -0.022888184,\n            0.018875122,\n            -0.07897949,\n            -0.019897461,\n            0.052764893,\n            0.009849548,\n            0.013412476,\n            0.0034675598,\n            0.0054244995,\n            -0.042144775,\n            -0.029769897,\n            -0.0206604,\n            -0.046569824,\n            0.03050232,\n            -0.04272461,\n            0.012290955,\n            -0.008079529,\n            -0.03265381,\n            -0.004261017,\n            0.042663574,\n            -0.015853882,\n            0.014823914,\n            0.020080566,\n            -0.046569824,\n            0.01222229,\n            0.008392334,\n            -0.037475586,\n            -0.041412354,\n            0.06994629,\n            -0.007133484,\n            -0.009811401,\n            -0.019973755,\n            -0.04675293,\n            0.068603516,\n            -0.04953003,\n            -0.022994995,\n            0.032226562,\n            0.031066895,\n            -0.04336548,\n            0.001373291,\n            -0.0028839111,\n            -0.00667572,\n            0.005973816,\n            -0.008666992,\n            0.019760132,\n            -0.037841797,\n            -0.004688263,\n            -0.004924774,\n            -0.05670166,\n            0.043762207,\n            0.033813477,\n            -0.06616211,\n            -0.040771484,\n            -0.080566406,\n            -0.0070877075,\n            -0.06854248,\n            -0.050750732,\n            -0.0041885376,\n            -0.014907837,\n            0.0066566467,\n            0.003993988,\n            -0.06390381,\n            -0.070495605,\n            -0.004295349,\n            -0.02909851,\n            -0.0129852295,\n            0.029678345,\n            -0.021011353,\n            0.020996094,\n            0.022155762,\n            0.00025320053,\n            0.021270752,\n            0.07598877,\n            -0.017471313,\n            -0.030700684,\n            -0.003250122,\n            -0.028457642,\n            -0.035827637,\n            0.02645874,\n            -0.022918701,\n            -0.015808105,\n            0.0158844,\n            0.06378174,\n            0.087890625,\n            0.023422241,\n            0.027664185,\n            0.025848389,\n            -0.026931763,\n            0.0046653748,\n            -0.028930664,\n            -0.05307007,\n            -0.04043579,\n            -0.019348145,\n            0.03488159,\n            -0.015792847,\n            -0.032318115,\n            0.06451416,\n            -0.0032024384,\n            -0.0067863464,\n            -0.011512756,\n            -0.012924194,\n            -0.034820557,\n            -0.013824463,\n            -0.029663086,\n            -0.03967285,\n            -0.016220093,\n            0.005420685,\n            -0.032073975,\n            0.018081665,\n            0.05831909,\n            0.04699707,\n            0.014846802,\n            0.021697998,\n            0.008811951,\n            0.005706787,\n            -0.012329102,\n            -0.033172607,\n            -0.03491211,\n            -0.005207062,\n            -0.0006456375,\n            -0.021087646,\n            0.008781433,\n            0.017059326,\n            0.037841797,\n            -0.017715454,\n            -0.011543274,\n            0.078063965,\n            -0.00058317184,\n            0.025283813,\n            -0.045959473,\n            -0.061676025,\n            0.016311646,\n            -0.047576904,\n            0.01133728,\n            -0.022598267,\n            -0.04208374,\n            -0.015022278,\n            0.0000064969063,\n            -0.024215698,\n            0.008056641,\n            -0.00039672852,\n            0.024032593,\n            0.061035156,\n            0.0362854,\n            -0.041503906,\n            0.066833496,\n            -0.019699097,\n            -0.0027217865,\n            0.016662598,\n            0.0044784546,\n            -0.017913818,\n            -0.01348114,\n            0.03250122,\n            -0.01473999,\n            -0.009407043,\n            0.017410278,\n            0.005634308,\n            -0.017120361,\n            0.008399963,\n            -0.05895996,\n            0.004837036,\n            0.015991211,\n            0.030685425,\n            -0.006969452,\n            -0.004962921,\n            -0.02003479,\n            -0.03161621,\n            -0.0011377335,\n            0.049621582,\n            -0.040771484,\n            -0.029205322,\n            -0.0010204315,\n            0.06365967,\n            -0.019042969,\n            -0.016403198,\n            0.03527832,\n            -0.0044898987,\n            0.0017709732,\n            0.0074539185,\n            0.0005059242,\n            -0.029769897,\n            -0.010421753,\n            0.025222778,\n            -0.031158447,\n            0.049041748,\n            -0.0050201416,\n            0.019042969,\n            -0.037139893,\n            0.01626587,\n            0.025009155,\n            0.0051231384,\n            -0.0006117821,\n            0.022201538,\n            -0.0074310303,\n            -0.060668945,\n            0.005672455,\n            0.008163452,\n            0.010810852,\n            -0.057769775,\n            -0.006839752,\n            0.014312744,\n            0.020492554,\n            -0.036254883,\n            0.01134491,\n            0.008293152,\n            0.017532349,\n            -0.012939453,\n            -0.06378174,\n            0.0027618408,\n            -0.0143585205,\n            -0.0042915344,\n            0.028076172,\n            0.03842163,\n            0.019866943,\n            -0.043182373,\n            0.011619568,\n            0.010192871,\n            0.02053833,\n            -0.011161804,\n            0.025115967,\n            -0.044891357,\n            -0.070739746,\n            0.047058105,\n            0.030700684,\n            0.03717041,\n            0.003686905,\n            -0.011062622,\n            -0.028213501,\n            0.023117065,\n            0.037628174,\n            -0.02909851,\n            0.006122589,\n            0.034484863,\n            -0.04788208,\n            -0.07318115,\n            -0.0151901245,\n            0.021591187,\n            0.018997192,\n            0.012863159,\n            0.027313232,\n            -0.000117480755,\n            -0.03225708,\n            -0.018447876,\n            -0.0335083,\n            -0.008216858,\n            0.017990112,\n            -0.028701782,\n            0.00497818,\n            0.024139404,\n            0.011581421,\n            -0.018295288,\n            -0.039245605,\n            -0.054718018,\n            0.03326416,\n            -0.04473877,\n            0.0039787292,\n            0.0076675415,\n            0.00079393387,\n            -0.012229919,\n            0.007522583,\n            0.03466797,\n            -0.0045661926,\n            0.019943237,\n            0.0019741058,\n            0.00041151047,\n            -0.019012451,\n            0.04827881,\n            -0.01902771,\n            -0.04748535,\n            -0.045532227,\n            0.03918457,\n            0.028656006,\n            -0.008796692,\n            -0.0066566467,\n            -0.052215576,\n            0.006164551,\n            0.022949219,\n            0.0056915283,\n            -0.013252258,\n            0.002866745,\n            -0.015899658,\n            -0.018829346,\n            -0.03439331,\n            -0.054534912,\n            -0.020492554,\n            -0.0048446655,\n            0.025894165,\n            -0.009536743,\n            -0.06890869,\n            -0.013160706,\n            0.014137268,\n            0.0016222,\n            -0.015106201,\n            0.016204834,\n            -0.04171753,\n            0.004459381,\n            0.03778076,\n            0.028717041,\n            -0.008758545,\n            -0.0013475418,\n            -0.039215088,\n            -0.02154541,\n            -0.03591919,\n            -0.0006375313,\n            -0.00043964386,\n            0.018569946,\n            0.0035114288,\n            0.02557373,\n            0.012283325,\n            0.086364746,\n            -0.030929565,\n            -0.009162903,\n            0.023635864,\n            0.023422241,\n            -0.024719238,\n            -0.058410645,\n            0.011436462,\n            -0.03012085,\n            0.0038433075,\n            0.031951904,\n            -0.0066833496,\n            0.012077332,\n            -0.03753662,\n            -0.014633179,\n            0.017089844,\n            0.05166626,\n            -0.03289795,\n            0.035461426,\n            -0.03930664,\n            -0.01977539,\n            0.036987305,\n            0.010734558,\n            0.039520264,\n            0.021606445,\n            -0.016113281,\n            -0.08258057,\n            -0.004261017,\n            0.05041504,\n            0.05883789,\n            -0.01953125,\n            0.007019043,\n            -0.029342651,\n            -0.029586792,\n            -0.010368347,\n            0.004753113,\n            0.03463745,\n            0.0053253174,\n            -0.0087509155,\n            0.045166016,\n            0.00969696,\n            0.010116577,\n            0.012680054,\n            -0.005138397,\n            0.027435303,\n            0.01826477,\n            0.04348755,\n            0.035247803,\n            0.04473877,\n            0.037597656,\n            0.014572144,\n            0.045959473,\n            0.01953125,\n            -0.032043457,\n            -0.070617676,\n            -0.026321411,\n            -0.01576233,\n            0.0050239563,\n            -0.093688965,\n            -0.022354126,\n            0.023864746,\n            0.024520874,\n            0.0056266785,\n            -0.0062217712,\n            -0.01033783,\n            -0.027664185,\n            0.025726318,\n            0.0075569153,\n            0.04849243,\n            0.004562378,\n            -0.03338623,\n            -0.004234314,\n            -0.005092621,\n            -0.020996094,\n            0.024276733,\n            0.03567505,\n            -0.023132324,\n            -0.057800293,\n            0.0074005127,\n            0.019073486,\n            -0.06048584,\n            0.028030396,\n            0.042877197,\n            0.01020813,\n            0.0066070557,\n            -0.0024490356,\n            0.05508423,\n            0.020706177,\n            0.020843506,\n            0.003068924,\n            0.03277588,\n            -0.0064468384,\n            0.0065689087,\n            0.01146698,\n            -0.01398468,\n            -0.00040507317,\n            -0.0044898987,\n            -0.032043457,\n            0.018325806,\n            0.013221741,\n            -0.00035500526,\n            -0.026245117,\n            0.05682373,\n            0.041778564,\n            0.048431396,\n            0.027908325,\n            0.031829834,\n            -0.006828308,\n            0.027938843,\n            0.011756897,\n            -0.035125732,\n            -0.014305115,\n            0.011932373,\n            -0.020492554,\n            0.0000936985,\n            -0.011260986,\n            0.028244019,\n            0.025344849,\n            -0.009117126,\n            -0.05923462,\n            -0.016586304,\n            -0.047790527,\n            -0.0368042,\n            0.011329651,\n            0.07409668,\n            -0.018920898,\n            -0.00081443787,\n            -0.022842407,\n            0.01574707,\n            0.009941101,\n            0.012397766,\n            0.03543091,\n            0.042938232,\n            -0.017852783,\n            0.006629944,\n            0.01109314,\n            0.022323608,\n            -0.027069092,\n            -0.055114746,\n            -0.012382507,\n            0.046539307,\n            -0.04031372,\n            -0.015426636,\n            0.015304565,\n            -0.023376465,\n            0.021438599,\n            0.021759033,\n            -0.014091492,\n            0.010375977,\n            0.002046585,\n            0.033599854,\n            -0.0015907288,\n            -0.05557251,\n            0.042419434,\n            -0.030685425,\n            -0.0075149536,\n            -0.010658264,\n            -0.011878967,\n            -0.0009975433,\n            0.020309448,\n            0.005405426,\n            -0.025039673,\n            -0.014892578,\n            0.030258179,\n            0.0030918121,\n            -0.0025234222,\n            0.027023315,\n            -0.044158936,\n            -0.045562744,\n            0.022857666,\n            0.017288208,\n            0.05206299,\n            0.016479492,\n            -0.04043579,\n            -0.050720215,\n            -0.0038852692,\n            0.027908325,\n            0.053771973,\n            -0.008132935,\n            0.023788452,\n            -0.07965088,\n            0.013473511,\n            0.01449585,\n            0.032287598,\n            0.0053100586,\n            -0.008651733,\n            0.020584106,\n            0.022018433,\n            -0.022827148,\n            -0.040863037,\n            0.0057029724,\n            -0.013580322,\n            -0.046783447,\n            -0.01574707,\n            -0.04446411,\n            0.016860962,\n            0.0473938,\n            -0.030807495,\n            0.020904541,\n            0.0067977905,\n            -0.048950195,\n            -0.07299805,\n            -0.042297363,\n            -0.02279663,\n            0.008529663,\n            -0.015686035,\n            0.010185242,\n            -0.0028476715,\n            0.05307007,\n            -0.039916992,\n            -0.055023193,\n            -0.0053749084,\n            0.053100586,\n            -0.030563354,\n            0.05545044,\n            0.0020599365,\n            0.003786087,\n            -0.0053138733,\n            0.025421143,\n            -0.020767212,\n            0.0084991455,\n            0.03265381,\n            -0.0010271072,\n            -0.035003662,\n            0.0473938,\n            -0.0115356445,\n            0.015472412,\n            0.041931152,\n            0.022567749,\n            0.03048706,\n            -0.06414795,\n            -0.01878357,\n            -0.0023288727,\n            -0.045532227,\n            0.014709473,\n            0.008430481,\n            0.033599854,\n            -0.028671265,\n            0.004837036,\n            -0.00085020065,\n            0.012939453,\n            0.018722534,\n            -0.0010881424,\n            -0.012084961,\n            0.10571289,\n            0.030593872,\n            -0.038360596,\n            -0.029388428,\n            0.0030765533,\n            0.009681702,\n            0.009002686,\n            0.016067505,\n            -0.05795288,\n            -0.009346008,\n            0.030899048,\n            0.039764404,\n            0.03567505,\n            -0.0184021,\n            0.015808105,\n            0.02067566,\n            -0.025253296,\n            0.019088745,\n            0.025161743,\n            0.007904053,\n            0.048797607,\n            -0.027160645,\n            -0.005504608,\n            -0.0021591187,\n            -0.038513184,\n            0.02381897,\n            0.011138916,\n            0.07659912,\n            0.028701782,\n            -0.041046143,\n            0.004398346,\n            0.02130127,\n            -0.031402588\n        ]\n    ],\n    \"id\": \"a3798f3a-7471-46f5-bc04-f43dd4f41958\",\n    \"response_type\": \"embeddings_floats\",\n    \"texts\": [\n        \"what is the purpose of life\"\n    ]\n}"
						}
					]
				},
				{
					"name": "cohere.embed-multilingual-v3",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texts\": [\"What is the purpose of life\"],\r\n    \"input_type\": \"search_document\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "cohere.embed-multilingual-v3",
									"uuid": "c4552ba0-4ff7-4239-84e2-613f41068ad9"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texts\": [\"What is the purpose of life\"],\r\n    \"input_type\": \"search_document\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "cohere.embed-multilingual-v3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:46:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "12875"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "3babe7ce-9e21-4d4b-a7b6-142725172bdc"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "315"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"embeddings\": [\n        [\n            0.020980835,\n            0.031585693,\n            0.02796936,\n            -0.0033607483,\n            -0.035614014,\n            -0.014221191,\n            -0.037597656,\n            -0.046447754,\n            0.0012044907,\n            -0.004371643,\n            0.0016965866,\n            -0.006248474,\n            0.011482239,\n            -0.00919342,\n            -0.018432617,\n            0.0029754639,\n            0.013557434,\n            0.038848877,\n            0.026260376,\n            0.00015175343,\n            0.004096985,\n            -0.0015153885,\n            0.0031585693,\n            -0.0088272095,\n            -0.03994751,\n            0.023361206,\n            0.008468628,\n            -0.011581421,\n            -0.009429932,\n            -0.046691895,\n            -0.03062439,\n            0.013442993,\n            0.05255127,\n            -0.0118255615,\n            -0.0060272217,\n            -0.004070282,\n            -0.029754639,\n            -0.068359375,\n            -0.015388489,\n            0.08502197,\n            -0.015075684,\n            -0.02659607,\n            -0.058502197,\n            0.06378174,\n            0.016571045,\n            0.05102539,\n            0.000059247017,\n            0.025421143,\n            0.0028915405,\n            0.013114929,\n            0.005344391,\n            0.03665161,\n            -0.0069618225,\n            -0.021087646,\n            -0.016036987,\n            0.037475586,\n            0.019760132,\n            0.021759033,\n            -0.0012073517,\n            0.0044822693,\n            0.013191223,\n            -0.014976501,\n            -0.05407715,\n            0.035186768,\n            0.0014600754,\n            0.03338623,\n            0.023391724,\n            0.029510498,\n            0.016067505,\n            0.008483887,\n            0.0037765503,\n            0.018798828,\n            0.041992188,\n            -0.00869751,\n            -0.024337769,\n            -0.056671143,\n            -0.005634308,\n            -0.009147644,\n            0.0413208,\n            0.049438477,\n            -0.016021729,\n            0.027511597,\n            0.07055664,\n            0.028320312,\n            -0.021224976,\n            0.024047852,\n            -0.015174866,\n            0.02520752,\n            0.011161804,\n            0.029525757,\n            -0.031982422,\n            0.046661377,\n            0.041381836,\n            -0.005050659,\n            0.038116455,\n            -0.026504517,\n            0.013175964,\n            0.005016327,\n            -0.022445679,\n            -0.009132385,\n            -0.015808105,\n            -0.036346436,\n            -0.009101868,\n            -0.008415222,\n            0.0061912537,\n            0.049926758,\n            -0.00024795532,\n            -0.013969421,\n            -0.02357483,\n            -0.022598267,\n            0.02053833,\n            -0.00062322617,\n            -0.0005159378,\n            -0.040008545,\n            -0.030593872,\n            -0.022277832,\n            0.014259338,\n            -0.0076179504,\n            -0.018722534,\n            -0.010688782,\n            -0.042877197,\n            0.045684814,\n            -0.00017094612,\n            -0.00623703,\n            0.0012578964,\n            0.025161743,\n            0.055511475,\n            -0.019317627,\n            0.032409668,\n            0.009429932,\n            -0.046539307,\n            0.03314209,\n            0.0010099411,\n            -0.004070282,\n            0.04373169,\n            0.017990112,\n            0.00920105,\n            -0.04837036,\n            0.03173828,\n            0.018066406,\n            0.0093307495,\n            0.030578613,\n            0.009597778,\n            0.013694763,\n            0.002658844,\n            0.0011377335,\n            0.007873535,\n            0.018310547,\n            0.00030207634,\n            -0.05532837,\n            0.03173828,\n            0.0013856888,\n            0.010070801,\n            -0.0048713684,\n            -0.0021743774,\n            0.00579834,\n            -0.013977051,\n            -0.012252808,\n            -0.010520935,\n            0.008979797,\n            0.060394287,\n            -0.023712158,\n            -0.03552246,\n            0.006931305,\n            -0.0033416748,\n            -0.048431396,\n            0.058288574,\n            -0.01586914,\n            0.030563354,\n            0.011024475,\n            0.054473877,\n            -0.0024604797,\n            0.054840088,\n            0.015716553,\n            -0.025848389,\n            -0.06750488,\n            -0.012832642,\n            0.0102005005,\n            0.049713135,\n            -0.08917236,\n            0.031982422,\n            0.030075073,\n            -0.014556885,\n            0.10058594,\n            0.018417358,\n            0.033325195,\n            0.0046195984,\n            0.00077295303,\n            0.0107040405,\n            0.046539307,\n            -0.021728516,\n            -0.04824829,\n            -0.068359375,\n            0.033416748,\n            -0.010231018,\n            0.020309448,\n            0.0054016113,\n            -0.021148682,\n            0.03152466,\n            0.043518066,\n            0.07293701,\n            -0.014678955,\n            -0.0026721954,\n            0.020309448,\n            -0.0040740967,\n            -0.031555176,\n            0.007030487,\n            0.023452759,\n            -0.0569458,\n            0.041900635,\n            -0.018844604,\n            -0.020080566,\n            0.037078857,\n            0.013305664,\n            -0.022781372,\n            -0.027786255,\n            0.0063705444,\n            0.04257202,\n            0.00365448,\n            0.032043457,\n            0.05407715,\n            -0.0036716461,\n            -0.005458832,\n            -0.0013217926,\n            -0.04598999,\n            0.014480591,\n            -0.008842468,\n            -0.004611969,\n            -0.04043579,\n            -0.030410767,\n            -0.027496338,\n            -0.019577026,\n            0.02961731,\n            -0.0067214966,\n            0.060424805,\n            0.026870728,\n            0.0077400208,\n            -0.03665161,\n            -0.01524353,\n            -0.018692017,\n            -0.020614624,\n            -0.07562256,\n            0.039916992,\n            0.040039062,\n            -0.01612854,\n            0.019470215,\n            0.011741638,\n            0.072631836,\n            0.034088135,\n            -0.08093262,\n            0.021881104,\n            0.02960205,\n            -0.04019165,\n            0.0362854,\n            0.03970337,\n            -0.0030651093,\n            -0.045959473,\n            -0.035888672,\n            -0.014198303,\n            -0.022354126,\n            -0.011360168,\n            0.0051994324,\n            0.023544312,\n            -0.010261536,\n            0.0024585724,\n            -0.005317688,\n            -0.04031372,\n            0.015075684,\n            0.039398193,\n            -0.033294678,\n            -0.010498047,\n            -0.015487671,\n            -0.03250122,\n            0.05279541,\n            0.004852295,\n            0.05291748,\n            -0.07501221,\n            0.047912598,\n            -0.0418396,\n            0.06011963,\n            0.029052734,\n            0.010978699,\n            -0.011024475,\n            0.011657715,\n            -0.082092285,\n            0.016723633,\n            -0.037384033,\n            0.016204834,\n            -0.064208984,\n            0.03640747,\n            -0.00579834,\n            0.005344391,\n            -0.008552551,\n            0.0068588257,\n            0.0016508102,\n            -0.009590149,\n            0.0029773712,\n            -0.031341553,\n            -0.03387451,\n            0.021987915,\n            -0.0025177002,\n            0.012748718,\n            0.04324341,\n            -0.0029315948,\n            -0.001200676,\n            0.04360962,\n            0.013458252,\n            -0.0030059814,\n            0.03186035,\n            0.018234253,\n            -0.00233078,\n            0.0034217834,\n            -0.020233154,\n            0.00062799454,\n            -0.0597229,\n            0.021087646,\n            -0.02330017,\n            -0.03656006,\n            -0.011512756,\n            -0.02633667,\n            -0.035705566,\n            -0.014640808,\n            -0.020477295,\n            0.03656006,\n            -0.045806885,\n            -0.013389587,\n            0.00440979,\n            -0.021942139,\n            -0.009155273,\n            0.0014686584,\n            0.024734497,\n            0.016448975,\n            0.017745972,\n            -0.005836487,\n            0.034576416,\n            0.0065307617,\n            -0.0017356873,\n            0.0030117035,\n            0.023025513,\n            -0.023132324,\n            -0.028030396,\n            0.0038928986,\n            0.0067100525,\n            -0.007507324,\n            -0.004070282,\n            0.049804688,\n            0.0068969727,\n            -0.020065308,\n            -0.035064697,\n            -0.02027893,\n            0.019515991,\n            0.040405273,\n            -0.03778076,\n            -0.015670776,\n            0.00969696,\n            -0.012275696,\n            0.012741089,\n            0.014030457,\n            -0.012557983,\n            -0.019592285,\n            0.0068244934,\n            0.0065994263,\n            -0.056518555,\n            0.014549255,\n            0.018493652,\n            0.02218628,\n            -0.022521973,\n            0.012084961,\n            -0.021392822,\n            0.0023555756,\n            0.0090789795,\n            0.013450623,\n            0.042053223,\n            0.042175293,\n            -0.052246094,\n            -0.011123657,\n            -0.02178955,\n            0.0047454834,\n            0.0031414032,\n            -0.03677368,\n            -0.02267456,\n            0.00006121397,\n            0.04788208,\n            0.053344727,\n            0.025909424,\n            0.017700195,\n            -0.009788513,\n            -0.019805908,\n            -0.025924683,\n            0.024749756,\n            0.0345459,\n            0.041656494,\n            0.045715332,\n            -0.0042266846,\n            0.010353088,\n            -0.0087509155,\n            0.0028381348,\n            0.020904541,\n            0.019500732,\n            -0.010528564,\n            -0.009216309,\n            -0.035614014,\n            0.015686035,\n            -0.024291992,\n            0.028549194,\n            0.057159424,\n            -0.01727295,\n            0.0038414001,\n            -0.0065841675,\n            -0.03753662,\n            -0.019699097,\n            -0.018096924,\n            0.028717041,\n            -0.008636475,\n            0.023162842,\n            -0.015838623,\n            0.027893066,\n            0.008560181,\n            -0.001953125,\n            0.023468018,\n            0.0013341904,\n            -0.027130127,\n            0.04547119,\n            0.034088135,\n            0.011810303,\n            -0.009506226,\n            0.02545166,\n            -0.008216858,\n            0.03930664,\n            0.004501343,\n            0.00793457,\n            -0.009017944,\n            0.0073127747,\n            0.0027217865,\n            -0.0042648315,\n            -0.0014886856,\n            -0.033477783,\n            0.00957489,\n            -0.015823364,\n            0.015823364,\n            0.010879517,\n            -0.012161255,\n            0.015792847,\n            -0.0024776459,\n            0.1015625,\n            -0.0012102127,\n            -0.029327393,\n            0.026641846,\n            -0.05731201,\n            -0.038238525,\n            -0.0006918907,\n            -0.022140503,\n            0.020187378,\n            -0.036102295,\n            0.008850098,\n            0.028717041,\n            0.00818634,\n            0.0135650635,\n            -0.010543823,\n            -0.022583008,\n            -0.044189453,\n            -0.011955261,\n            0.015007019,\n            -0.059906006,\n            -0.020141602,\n            -0.017471313,\n            0.030258179,\n            -0.00008946657,\n            0.009490967,\n            0.008018494,\n            -0.020843506,\n            0.045776367,\n            -0.0020771027,\n            -0.03314209,\n            0.034301758,\n            0.035186768,\n            -0.03010559,\n            0.0064964294,\n            -0.0006918907,\n            0.049682617,\n            -0.0013914108,\n            0.008834839,\n            -0.0137786865,\n            0.029586792,\n            -0.025405884,\n            0.013381958,\n            0.022537231,\n            -0.014434814,\n            0.05718994,\n            -0.0011835098,\n            0.049346924,\n            0.014427185,\n            -0.041290283,\n            -0.012626648,\n            0.021774292,\n            -0.062927246,\n            0.023040771,\n            -0.03555298,\n            0.021102905,\n            0.00844574,\n            0.026412964,\n            0.007987976,\n            0.027069092,\n            -0.020339966,\n            -0.013687134,\n            -0.010314941,\n            0.024658203,\n            0.037475586,\n            0.013084412,\n            0.053009033,\n            -0.017974854,\n            -0.045074463,\n            -0.041259766,\n            0.03451538,\n            -0.033569336,\n            -0.039215088,\n            0.022155762,\n            0.008735657,\n            0.036895752,\n            -0.05831909,\n            0.032165527,\n            0.057678223,\n            0.03387451,\n            0.03277588,\n            0.07458496,\n            -0.0052337646,\n            0.0049934387,\n            0.041778564,\n            -0.075927734,\n            -0.03466797,\n            -0.0121536255,\n            -0.029403687,\n            0.032287598,\n            0.030929565,\n            -0.08441162,\n            -0.1237793,\n            0.022705078,\n            -0.008430481,\n            0.027145386,\n            0.07861328,\n            0.05026245,\n            0.01411438,\n            0.025482178,\n            0.05996704,\n            0.0126953125,\n            -0.04598999,\n            -0.0635376,\n            -0.039978027,\n            -0.019577026,\n            0.050231934,\n            -0.0048217773,\n            -0.0069732666,\n            -0.030563354,\n            -0.051849365,\n            0.008758545,\n            0.0030059814,\n            -0.06726074,\n            -0.044311523,\n            0.03050232,\n            0.033935547,\n            0.036315918,\n            -0.07397461,\n            0.0043411255,\n            0.041992188,\n            -0.016937256,\n            0.003255844,\n            0.011154175,\n            0.00868988,\n            0.035217285,\n            -0.07470703,\n            0.011947632,\n            0.047576904,\n            0.035217285,\n            -0.03579712,\n            -0.026870728,\n            -0.024108887,\n            0.042388916,\n            -0.011566162,\n            -0.026062012,\n            -0.0006942749,\n            -0.02407837,\n            -0.038635254,\n            0.024017334,\n            0.0017995834,\n            -0.024505615,\n            -0.031463623,\n            0.011619568,\n            0.011352539,\n            0.009666443,\n            -0.017532349,\n            0.028182983,\n            -0.019821167,\n            0.015129089,\n            0.04510498,\n            -0.01586914,\n            0.019180298,\n            0.00091695786,\n            0.0345459,\n            0.04650879,\n            0.0013036728,\n            -0.03970337,\n            -0.013595581,\n            -0.046905518,\n            -0.0077056885,\n            -0.025405884,\n            0.03100586,\n            0.0034446716,\n            -0.029830933,\n            0.080200195,\n            0.050476074,\n            0.009132385,\n            0.0009784698,\n            0.023880005,\n            -0.005466461,\n            -0.03970337,\n            -0.004673004,\n            -0.01939392,\n            0.02192688,\n            0.026489258,\n            0.015594482,\n            -0.020080566,\n            -0.023757935,\n            -0.01979065,\n            0.001912117,\n            -0.030731201,\n            0.008880615,\n            0.058929443,\n            -0.005569458,\n            -0.040924072,\n            -0.018066406,\n            -0.011680603,\n            -0.035339355,\n            0.026275635,\n            -0.033721924,\n            -0.023269653,\n            0.047576904,\n            -0.0017261505,\n            -0.066589355,\n            -0.036468506,\n            0.0053138733,\n            0.016036987,\n            -0.050933838,\n            0.008033752,\n            0.0058403015,\n            -0.009315491,\n            0.015670776,\n            0.030090332,\n            -0.021896362,\n            -0.03363037,\n            -0.004711151,\n            0.058624268,\n            -0.03475952,\n            0.016571045,\n            -0.0028762817,\n            -0.042388916,\n            0.029342651,\n            0.051483154,\n            0.052246094,\n            -0.014823914,\n            0.020339966,\n            -0.00969696,\n            -0.0017938614,\n            -0.021087646,\n            -0.024093628,\n            0.013076782,\n            0.06964111,\n            -0.0052261353,\n            -0.017593384,\n            -0.022064209,\n            -0.028884888,\n            -0.031921387,\n            0.044036865,\n            0.021575928,\n            0.007659912,\n            0.05267334,\n            0.025970459,\n            -0.043670654,\n            0.015464783,\n            -0.009841919,\n            0.01626587,\n            0.0068855286,\n            0.020050049,\n            -0.036010742,\n            0.024627686,\n            -0.0029010773,\n            0.016113281,\n            -0.054595947,\n            -0.027420044,\n            0.02456665,\n            -0.035003662,\n            -0.0015935898,\n            0.07861328,\n            -0.048187256,\n            0.050872803,\n            0.007904053,\n            0.017456055,\n            0.053009033,\n            0.038604736,\n            -0.056152344,\n            -0.019348145,\n            -0.016113281,\n            0.033691406,\n            -0.024246216,\n            0.025253296,\n            0.0019569397,\n            0.0062065125,\n            0.039123535,\n            -0.04373169,\n            0.021270752,\n            0.0107421875,\n            -0.04827881,\n            0.037506104,\n            0.032806396,\n            -0.025894165,\n            0.0050697327,\n            0.0016021729,\n            -0.021118164,\n            -0.031173706,\n            -0.023849487,\n            -0.014945984,\n            -0.039001465,\n            -0.018630981,\n            0.0071983337,\n            0.006214142,\n            0.016860962,\n            0.0053901672,\n            -0.0014648438,\n            -0.002286911,\n            0.030532837,\n            0.017944336,\n            0.007331848,\n            -0.0010089874,\n            0.004711151,\n            0.016555786,\n            0.031341553,\n            -0.050994873,\n            -0.040008545,\n            0.010192871,\n            0.06817627,\n            -0.006793976,\n            0.107177734,\n            0.049438477,\n            0.057922363,\n            -0.08850098,\n            -0.03567505,\n            0.017074585,\n            -0.027816772,\n            0.06201172,\n            -0.044677734,\n            0.012748718,\n            -0.023117065,\n            0.05609131,\n            -0.033691406,\n            0.0003144741,\n            -0.0048675537,\n            -0.036590576,\n            0.04748535,\n            0.030303955,\n            -0.072631836,\n            0.033843994,\n            0.0014848709,\n            -0.015411377,\n            0.0059776306,\n            -0.013076782,\n            -0.008621216,\n            0.027023315,\n            -0.011390686,\n            0.026779175,\n            -0.015991211,\n            0.010574341,\n            -0.033966064,\n            0.004135132,\n            0.004219055,\n            -0.021453857,\n            -0.03012085,\n            -0.01928711,\n            -0.020828247,\n            0.030029297,\n            0.030288696,\n            -0.014526367,\n            -0.03793335,\n            -0.047058105,\n            0.025100708,\n            -0.048431396,\n            0.012763977,\n            0.002456665,\n            0.029708862,\n            0.0069618225,\n            -0.00037193298,\n            0.00983429,\n            -0.01184845,\n            0.0054244995,\n            0.09075928,\n            -0.038635254,\n            -0.014282227,\n            -0.05419922,\n            0.0027103424,\n            -0.0073890686,\n            0.025680542,\n            -0.06829834,\n            0.042755127,\n            -0.027923584,\n            -0.03186035,\n            0.0023555756,\n            0.049743652,\n            -0.024459839,\n            -0.009239197,\n            0.037322998,\n            0.0118255615,\n            0.02029419,\n            -0.020736694,\n            0.0027046204,\n            0.0056877136,\n            0.027114868,\n            0.04562378,\n            0.024108887,\n            0.07519531,\n            0.06604004,\n            -0.026763916,\n            0.032043457,\n            -0.012504578,\n            0.013259888,\n            -0.004459381,\n            0.021026611,\n            0.038726807,\n            0.030899048,\n            -0.006591797,\n            -0.015144348,\n            0.0049552917,\n            0.040222168,\n            -0.056732178,\n            -0.0076942444,\n            -0.029434204,\n            -0.02394104,\n            0.017166138,\n            -0.045837402,\n            0.0023021698,\n            0.066467285,\n            -0.0009803772,\n            -0.034454346,\n            0.017349243,\n            -0.0069503784,\n            -0.048187256,\n            0.023147583,\n            0.020568848,\n            0.041015625,\n            0.0017623901,\n            0.0062713623,\n            -0.009391785,\n            0.056610107,\n            0.0015668869,\n            -0.019866943,\n            0.045806885,\n            -0.0075302124,\n            0.009239197,\n            -0.0138168335,\n            0.008087158,\n            -0.016448975,\n            -0.014862061,\n            0.0027008057,\n            -0.03353882,\n            0.014076233,\n            0.019180298,\n            0.024887085,\n            -0.0004541874,\n            -0.00033140182,\n            -0.023132324,\n            0.030944824,\n            -0.0026168823,\n            -0.029571533,\n            -0.01776123,\n            0.030792236,\n            0.013183594,\n            -0.08227539,\n            0.05316162,\n            0.0064811707,\n            -0.010810852,\n            -0.0054512024,\n            -0.00020313263,\n            0.053222656,\n            0.024414062,\n            -0.03250122,\n            -0.008399963,\n            -0.03567505,\n            0.011421204,\n            -0.034729004,\n            -0.030548096,\n            0.041534424,\n            -0.010696411,\n            -0.0071792603,\n            0.040527344,\n            0.0098724365,\n            0.033966064,\n            0.040863037,\n            0.006980896,\n            -0.053619385,\n            0.046142578,\n            -0.012573242,\n            -0.020095825,\n            -0.034210205,\n            -0.027633667,\n            0.023666382,\n            0.03237915,\n            -0.01789856,\n            -0.007980347,\n            -0.014549255,\n            0.045166016,\n            -0.0013256073,\n            0.006000519,\n            -0.006542206,\n            0.008125305,\n            0.039611816,\n            0.0011034012,\n            0.008842468,\n            0.0041618347,\n            -0.015434265,\n            -0.005088806,\n            0.0071144104,\n            -0.02494812,\n            -0.012268066,\n            -0.022216797,\n            0.06317139,\n            -0.04244995,\n            -0.006061554,\n            -0.035003662,\n            -0.031051636,\n            0.024917603,\n            0.008628845,\n            -0.028076172,\n            0.016555786,\n            -0.013587952,\n            -0.00121212,\n            0.0102005005,\n            -0.026947021,\n            -0.018920898,\n            -0.00039291382,\n            -0.011306763,\n            -0.012893677,\n            0.04751587,\n            -0.016098022,\n            0.016021729,\n            0.018173218,\n            -0.05923462,\n            -0.03488159,\n            0.03439331,\n            0.002401352,\n            -0.032318115,\n            0.032318115,\n            0.029083252,\n            0.016967773,\n            0.064697266,\n            -0.037231445,\n            0.047576904,\n            -0.032562256,\n            -0.035461426,\n            0.03756714,\n            0.015899658,\n            0.008308411,\n            0.009147644,\n            0.0119018555,\n            -0.0027217865,\n            0.009979248,\n            -0.005970001,\n            -0.0007419586,\n            0.012992859,\n            -0.021224976,\n            0.021270752,\n            -0.053131104,\n            -0.002313614,\n            0.10699463,\n            0.030975342,\n            0.002571106,\n            -0.09448242,\n            0.005317688,\n            -0.016021729,\n            0.021636963,\n            -0.00013303757,\n            -0.031707764,\n            0.07116699,\n            0.030380249,\n            0.008598328,\n            0.04525757,\n            -0.00024068356,\n            0.03967285,\n            -0.022140503,\n            0.06677246,\n            -0.0154800415,\n            0.006378174,\n            0.004310608,\n            -0.025482178,\n            0.045928955,\n            0.027252197,\n            -0.04473877,\n            -0.074279785,\n            -0.021347046,\n            0.04977417,\n            -0.023284912,\n            -0.020858765,\n            0.016479492,\n            0.04864502,\n            -0.00086927414,\n            -0.008361816,\n            0.006038666,\n            -0.015991211,\n            0.016952515,\n            0.019607544,\n            0.05996704,\n            0.015899658,\n            0.0026378632,\n            0.0028705597,\n            -0.032318115,\n            0.046844482,\n            -0.04638672,\n            0.0004720688,\n            0.042144775,\n            -0.036010742,\n            -0.023361206,\n            0.015731812,\n            -0.006767273,\n            0.014701843,\n            0.007858276,\n            0.04269409,\n            -0.03451538,\n            0.005760193\n        ]\n    ],\n    \"id\": \"3babe7ce-9e21-4d4b-a7b6-142725172bdc\",\n    \"response_type\": \"embeddings_floats\",\n    \"texts\": [\n        \"What is the purpose of life\"\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Meta",
			"item": [
				{
					"name": "meta.llama2-13b-chat-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "meta.llama2-13b-chat-v1",
									"uuid": "f4103075-7e52-4edd-81a2-4458c9292505"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "meta.llama2-13b-chat-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:49:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2094"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "f55b4413-8314-4658-9f71-9b31eda1f532"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "10997"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "436"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "{\n    \"generation\": \"? This is a question that has puzzled philosophers and theologians for centuries, and there is no one answer that is universally accepted. However, here are some possible purposes of life:\\n\\n1. To seek happiness and fulfillment: Many people believe that the purpose of life is to seek happiness and fulfillment. This can be achieved by pursuing one's passions, building meaningful relationships, and living a life that is true to oneself.\\n2. To learn and grow: Life can be seen as an opportunity for personal growth and development. Through experiences and challenges, we can learn new skills, gain wisdom, and become better versions of ourselves.\\n3. To make a positive impact: Some people believe that the purpose of life is to make a positive impact on the world. This can be done through acts of kindness, volunteering, or working to make the world a better place.\\n4. To seek spiritual enlightenment: For many religious and spiritual people, the purpose of life is to seek spiritual enlightenment or union with a higher power. This can be achieved through prayer, meditation, or service to others.\\n5. To leave a legacy: Some people believe that the purpose of life is to leave a lasting legacy that will outlive them. This can be achieved through creating art, writing, building, or making other contributions to society.\\n6. To seek knowledge and understanding: Life can be seen as an opportunity to seek knowledge and understanding of the world and the universe. Through science, philosophy, and other forms of inquiry, we can gain a deeper understanding of the world and our place in it.\\n7. To experience the beauty of life: Life is full of beauty, from the natural world to the creations of human culture. The purpose of life can be to experience and appreciate this beauty, and to create more beauty in the world.\\n\\nUltimately, the purpose of life is a deeply personal and subjective question, and each person must find their own answer based on their own beliefs, values, and experiences.\",\n    \"prompt_token_count\": 7,\n    \"generation_token_count\": 436,\n    \"stop_reason\": \"stop\"\n}"
						}
					]
				},
				{
					"name": "meta.llama2-70b-chat-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "meta.llama2-70b-chat-v1",
									"uuid": "030d460d-dcf8-4429-9270-6e7b8e354a63"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "meta.llama2-70b-chat-v1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:04:23 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2424"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "45056d21-6091-4b9d-9904-f9e403777c5f"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "23582"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "512"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "{\n    \"generation\": \"? This is a question that has puzzled philosophers and theologians for centuries. It is a question that is difficult to answer definitively, as it is a question that is deeply personal and subjective. However, in this essay, I will attempt to provide a possible answer to this question based on my own beliefs and values.\\n\\nFirstly, I believe that the purpose of life is to seek happiness and fulfillment. Happiness is a fundamental human need, and it is something that we all strive for in our lives. However, happiness is not just about feeling good or having fun. It is about living a life that is meaningful and fulfilling, a life that is rich in experiences and relationships that bring us joy and satisfaction.\\n\\nSecondly, I believe that the purpose of life is to learn and grow as individuals. Life is a journey of discovery and self-improvement, and it is through learning and growing that we can achieve our full potential as human beings. This means developing our intellectual, emotional, and spiritual capacities, and using them to make a positive impact on the world around us.\\n\\nThirdly, I believe that the purpose of life is to make a positive difference in the world. We are all interconnected, and our actions have an impact on others and on the planet. Therefore, I believe that it is our responsibility to use our talents, skills, and resources to make a positive contribution to society and to the world. This can be achieved through acts of kindness, volunteering, activism, or simply living a sustainable and environmentally conscious lifestyle.\\n\\nFinally, I believe that the purpose of life is to seek spiritual enlightenment or transcendence. This is a deeply personal and subjective aspect of human experience, and it can be understood in many different ways. For some, it may involve religious or spiritual beliefs and practices, while for others, it may involve a sense of connection to nature, art, or music. Whatever form it takes, spiritual enlightenment or transcendence is a way of experiencing life that goes beyond the mundane and material, and that connects us to something greater than ourselves.\\n\\nIn conclusion, the purpose of life is a complex and multifaceted question that each person must answer for themselves. Based on my own beliefs and values, I believe that the purpose of life is\",\n    \"prompt_token_count\": 7,\n    \"generation_token_count\": 512,\n    \"stop_reason\": \"length\"\n}"
						}
					]
				},
				{
					"name": "meta.llama3-8b-instruct-v1:0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "meta.llama3-8b-instruct-v1:0",
									"uuid": "da8f3588-1b52-4d41-90e3-5a7d2818ce1d"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "meta.llama3-8b-instruct-v1:0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Apr 2024 12:53:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2744"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "1bee894a-ad44-4089-bf65-4594f82cbe0e"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "4694"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "512"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"generation\": \"?\\nThe purpose of life is a question that has puzzled philosophers, scientists, and theologians for centuries. There is no one definitive answer, as the purpose of life can vary greatly from person to person and culture to culture. However, here are some possible answers to this question:\\n\\n1. To find happiness and fulfillment: Many people believe that the purpose of life is to find happiness and fulfillment. This can be achieved through personal relationships, career success, or pursuing one's passions.\\n2. To learn and grow: Another perspective is that the purpose of life is to learn and grow as a person. This can involve developing new skills, building relationships, and overcoming challenges.\\n3. To make a positive impact: Some people believe that the purpose of life is to make a positive impact on the world. This can be achieved through volunteering, donating to charity, or working to make a difference in one's community.\\n4. To find meaning and purpose: The purpose of life can also be seen as finding meaning and purpose. This can involve discovering one's values and passions, and using them to guide one's decisions and actions.\\n5. To achieve spiritual enlightenment: For some people, the purpose of life is to achieve spiritual enlightenment or to connect with a higher power. This can involve practicing meditation, prayer, or other spiritual disciplines.\\n6. To experience the beauty of life: Finally, some people believe that the purpose of life is simply to experience the beauty of life. This can involve appreciating the natural world, enjoying relationships, and experiencing the joys of life.\\n\\nUltimately, the purpose of life is a personal and subjective question that can have different answers for different people. What is important is that we each find our own purpose and meaning in life, and that we live in a way that is authentic and fulfilling to us. Read more\\nWhat is the meaning of life?\\nThe meaning of life is a question that has puzzled philosophers, scientists, and theologians for centuries. There is no one definitive answer, as the meaning of life can vary greatly from person to person and culture to culture. However, here are some possible answers to this question:\\n\\n1. To find happiness and fulfillment: Many people believe that the meaning of life is to find happiness and fulfillment. This can be achieved through personal relationships, career success, or pursuing one's passions.\\n2. To learn and grow: Another perspective is that the meaning of life is to learn and grow as a person. This can involve developing new skills, building relationships, and overcoming challenges.\\n3. To make\",\n    \"prompt_token_count\": 6,\n    \"generation_token_count\": 512,\n    \"stop_reason\": \"length\"\n}"
						}
					]
				},
				{
					"name": "meta.llama3-70b-instruct-v1:0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "meta.llama3-70b-instruct-v1:0",
									"uuid": "8c98df88-de2f-47db-87ce-64b5d51c83ea"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "meta.llama3-70b-instruct-v1:0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Apr 2024 12:53:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2884"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "81503922-e9e7-410a-89a2-41b3b6aa2dc3"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "11987"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "512"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"generation\": \"?\\nWhat is the nature of reality?\\nWhat is the relationship between mind and body?\\nWhat is the nature of knowledge?\\nWhat is the nature of morality?\\nWhat is the nature of beauty?\\nWhat is the nature of truth?\\nWhat is the nature of justice?\\nWhat is the nature of freedom?\\nWhat is the nature of happiness?\\n\\nThese are just a few examples of the many philosophical questions that have been debated throughout history. Philosophers have approached these questions in various ways,, using different methods and perspectives to explore the nature of reality, knowledge, and human experience.\\n\\nSome of the key approaches to philosophy include:\\n\\n1. **Rationalism**: This approach emphasizes the use of reason and logic to understand the world. Rationalists believe that certain knowledge can be acquired through the use of reason, independent of sense experience.\\n2. **Empiricism**: This approach emphasizes the role of sense experience in understanding the world. Empiricists believe that knowledge comes from experience and observation.\\n3. **Idealism**: This approach emphasizes the role of mind and consciousness in shaping our understanding of the world. Idealists believe that reality is fundamentally mental or spiritual in nature.\\n4. **Materialism**: This approach emphasizes the role of matter and physical processes in understanding the world. Materialists believe that reality is fundamentally physical in nature.\\n5. **Pragmatism**: This approach emphasizes the practical applications of philosophical ideas. Pragmatists believe that the truth of an idea is determined by its usefulness and effectiveness in solving problems.\\n6. **Existentialism**: This approach emphasizes individual freedom and choice in understanding the world. Existentialists believe that humans must take responsibility for creating their own meaning and purpose in life.\\n7. **Phenomenology**: This approach emphasizes the study of conscious experience or perception. Phenomenologists believe that we must carefully examine our own experiences and perceptions in order to understand the world.\\n\\nThese are just a few examples of the many approaches to philosophy that have been developed over time. Philosophers often draw on multiple approaches and perspectives in their work, and many philosophical debates involve disagreements over the best approach to understanding a particular issue.\\n\\n### Branches of Philosophy\\n\\nPhilosophy is often divided into several branches, each of which focuses on a specific area of inquiry. Some of the main branches of philosophy include:\\n\\n1. **Metaphysics**: This branch of philosophy deals with the nature of reality, including the relationship between mind and body, substance and attribute, and potentiality and actuality.\\n2. **Epistemology**: This branch\",\n    \"prompt_token_count\": 6,\n    \"generation_token_count\": 512,\n    \"stop_reason\": \"length\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Mistral AI",
			"item": [
				{
					"name": "mistral.mistral-large-2402-v1:0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "mistral.mistral-large-2402-v1:0",
									"uuid": "b832b8df-fdc2-43b0-af31-add44d343dac"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "mistral.mistral-large-2402-v1:0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 06 Apr 2024 15:16:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "608"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "0dbdcfb4-3086-4da0-be7b-453bdb1bc1ae"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "3117"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "113"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "6"
								}
							],
							"cookie": [],
							"body": "{\n    \"outputs\": [\n        {\n            \"text\": \"?\\n\\nThe purpose of life is a deeply philosophical question and the answer can vary greatly depending on one's personal beliefs, cultural background, and life experiences. Some people may believe the purpose of life is to seek happiness, knowledge, personal fulfillment, or to contribute to the betterment of humanity. Others may find purpose through religious or spiritual beliefs. Ultimately, the purpose of life is a deeply personal and subjective concept. It's a journey of self-discovery and introspection that each individual must undertake for themselves.\",\n            \"stop_reason\": \"stop\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "mistral.mistral-7b-instruct-v0:2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "mistral.mistral-7b-instruct-v0:2",
									"uuid": "e50a09e2-ddec-46ca-b1f5-a3e86c59860b"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "mistral.mistral-7b-instruct-v0:2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 02 Apr 2024 23:50:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1653"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "d3adbbb0-5d59-4600-81bc-0a0448e88e1b"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "3051"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "346"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "{\n    \"outputs\": [\n        {\n            \"text\": \"?\\n\\nThis question has puzzled philosophers, theologians, and thinkers for centuries. Some say the purpose of life is to seek happiness, others say it is to serve God or the greater good, and still others say it is to learn and grow as individuals.\\n\\nUltimately, the answer to this question is a matter of personal belief and faith. However, there are some common themes that many people find meaningful and fulfilling in their lives.\\n\\nOne common theme is the pursuit of happiness. Many people believe that the purpose of life is to be happy and to find joy and fulfillment in life. This can come from many sources, such as relationships, work, hobbies, and personal growth.\\n\\nAnother common theme is the desire to serve others and make a positive impact on the world. Many people find meaning and purpose in their lives by helping others, whether it be through volunteering, caring for loved ones, or making a difference in their community.\\n\\nReligion and spirituality also play a significant role in many people's lives and can provide a sense of purpose and meaning. For some, the purpose of life is to serve God or the greater good, and to live in accordance with religious teachings and values.\\n\\nUltimately, the purpose of life is a deeply personal and subjective question, and each person must find their own answer based on their beliefs, experiences, and values. Some may find meaning and purpose in multiple areas of their lives, while others may focus on one particular aspect. Regardless of the answer, the journey of discovering one's purpose can be a rewarding and fulfilling experience.\",\n            \"stop_reason\": \"stop\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "mistral.mixtral-8x7b-instruct-v0:1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "mistral.mixtral-8x7b-instruct-v0:1",
									"uuid": "c4da7bb4-8e11-4ed9-9057-5b90f451b2a7"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-amzn-bedrock-save",
										"value": "true",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prompt\": \"What is the purpose of life\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "mistral.mixtral-8x7b-instruct-v0:1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Apr 2024 00:02:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1576"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "96a4b0da-f4c1-4d8b-ad72-abcff0918e91"
								},
								{
									"key": "X-Amzn-Bedrock-Invocation-Latency",
									"value": "6846"
								},
								{
									"key": "X-Amzn-Bedrock-Output-Token-Count",
									"value": "337"
								},
								{
									"key": "X-Amzn-Bedrock-Input-Token-Count",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "{\n    \"outputs\": [\n        {\n            \"text\": \"?\\n\\nThis is a question that has puzzled philosophers and theologians for centuries. Some say the purpose of life is to seek happiness, others say it is to serve a higher power, and still others say it is to find meaning and fulfillment in what we do.\\n\\nBut what if the purpose of life is something much simpler than all of that? What if the purpose of life is simply to be alive?\\n\\nThink about it. Every moment that we are alive is a miracle. Our hearts beat, our lungs breathe, and our brains process thoughts and emotions, all without us having to do anything. We are constantly being bombarded with sensory information, and yet we are able to make sense of it and interact with the world around us.\\n\\nThe fact that we are alive at all is a remarkable thing. We are the result of billions of years of evolution, and we have been given the incredible gift of consciousness. We have the ability to think, to feel, and to experience the world in a way that no other creature can.\\n\\nSo perhaps the purpose of life is simply to appreciate and make the most of this incredible gift. To live in the present moment, to savor every experience, and to express gratitude for the simple fact that we are alive.\\n\\nOf course, this is not to say that we should not seek happiness, meaning, and fulfillment in our lives. These are important and worthwhile goals. But perhaps they are not the ultimate purpose of life. Perhaps the ultimate purpose of life is simply to be alive, and to appreciate and make the most of this incredible gift.\",\n            \"stop_reason\": \"stop\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Stability AI",
			"item": [
				{
					"name": "stability.stable-diffusion-xl-v0",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text_prompts\": [\r\n        {\r\n            \"text\": \"The purpose of life\"\r\n        }\r\n    ],\r\n    \"cfg_scale\": 10,\r\n    \"seed\": 20,\r\n    \"steps\": 50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "stability.stable-diffusion-xl-v0",
									"uuid": "3095f6b9-ff0f-4003-ae8a-5713ec65db2d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "stability.stable-diffusion-xl-v1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text_prompts\": [\r\n        {\r\n            \"text\": \"The purpose of life\"\r\n        }\r\n    ],\r\n    \"cfg_scale\": 10,\r\n    \"seed\": 20,\r\n    \"steps\": 50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
							"protocol": "https",
							"host": [
								"bedrock-runtime",
								"{{AWS_Region}}",
								"amazonaws",
								"com"
							],
							"path": [
								"model",
								":model_identifier",
								"invoke"
							],
							"variable": [
								{
									"key": "model_identifier",
									"value": "stability.stable-diffusion-xl-v1",
									"uuid": "20db9b39-348b-4713-b829-69e9646c94fb"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Use Cases",
			"item": [
				{
					"name": "Chat",
					"item": [
						{
							"name": "Chat (amazon.titan-tg1-large)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inputText\": \"System: You are an helpful assistant. Answer questions in a concise way. \\nQuestion: How can I fix a flat tire on my Ford F150 Lightning? \\nAnswer: \",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-tg1-large",
											"uuid": "c83a9330-71d4-4424-8403-75d277c98df9"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inputText\": \"System: You are an helpful assistant. Answer questions in a concise way. \\nQuestion: How can I fix a flat tire on my Ford F150 Lightning? \\nAnswer: \",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
											"protocol": "https",
											"host": [
												"bedrock-runtime",
												"{{AWS_Region}}",
												"amazonaws",
												"com"
											],
											"path": [
												"model",
												":model_identifier",
												"invoke"
											],
											"variable": [
												{
													"key": "model_identifier",
													"value": "amazon.titan-tg1-large"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2024 00:36:58 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "834"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "8e6975ee-b84b-42b5-b1c4-862174936d7c"
										},
										{
											"key": "X-Amzn-Bedrock-Invocation-Latency",
											"value": "4696"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Token-Count",
											"value": "185"
										},
										{
											"key": "X-Amzn-Bedrock-Input-Token-Count",
											"value": "40"
										}
									],
									"cookie": [],
									"body": "{\n    \"inputTextTokenCount\": 40,\n    \"results\": [\n        {\n            \"tokenCount\": 185,\n            \"outputText\": \"1. Find a safe place to park your Ford F150 Lightning and turn on the hazard lights.\\n2. Locate the spare tire, jack, and lug wrench in the trunk or under the bed.\\n3. Use the lug wrench to loosen the lug nuts on the flat tire, but do not remove them yet.\\n4. Position the jack under the vehicle near the flat tire and raise it until the tire is off the ground.\\n5. Completely remove the lug nuts and the flat tire.\\n6. Mount the spare tire onto the wheel hub and hand-tighten the lug nuts.\\n7. Lower the jack and tighten the lug nuts with the lug wrench in a star pattern.\\n8. Check the tire pressure of the spare tire and make sure it is properly inflated.\\n9. Put the lug wrench, jack, and flat tire in the trunk or under the bed.\",\n            \"completionReason\": \"FINISH\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Embedding",
					"item": [
						{
							"name": "Embedding (amazon.titan-embed-text-v1)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inputText\": \"Testing 123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-embed-text-v1",
											"uuid": "a2c92aa5-28b1-4fbd-ae15-f06d0457948a"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inputText\": \"Testing 123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
											"protocol": "https",
											"host": [
												"bedrock-runtime",
												"{{AWS_Region}}",
												"amazonaws",
												"com"
											],
											"path": [
												"model",
												":model_identifier",
												"invoke"
											],
											"variable": [
												{
													"key": "model_identifier",
													"value": "amazon.titan-embed-text-v1",
													"description": "Available text generation models under Amazon Bedrock have the following IDs:\n\n- amazon.titan-e1t-medium"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 06 Apr 2024 23:52:23 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "17125"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "aa7cf63d-67ae-4419-bc21-e8183428a879"
										},
										{
											"key": "X-Amzn-Bedrock-Invocation-Latency",
											"value": "384"
										},
										{
											"key": "X-Amzn-Bedrock-Input-Token-Count",
											"value": "5"
										}
									],
									"cookie": [],
									"body": "{\n    \"embedding\": [\n        0.53125,\n        0.087890625,\n        0.359375,\n        0.12060547,\n        0.28515625,\n        0.4921875,\n        0.46875,\n        -0.00065612793,\n        -0.18847656,\n        -1.15625,\n        0.48046875,\n        0.08544922,\n        0.38867188,\n        0.29296875,\n        -0.23535156,\n        -0.0022888184,\n        0.26953125,\n        -0.875,\n        -0.06347656,\n        0.48242188,\n        -0.2265625,\n        -0.0016174316,\n        0.203125,\n        0.27929688,\n        0.01361084,\n        0.28710938,\n        0.8359375,\n        0.4609375,\n        0.03491211,\n        -0.049804688,\n        0.640625,\n        0.20605469,\n        0.69921875,\n        -0.8515625,\n        -0.087402344,\n        0.41992188,\n        0.56640625,\n        0.25976562,\n        -0.55859375,\n        0.040039062,\n        -0.69140625,\n        -0.46679688,\n        0.47265625,\n        0.66015625,\n        -0.38671875,\n        -0.30078125,\n        0.2109375,\n        0.029052734,\n        0.984375,\n        0.85546875,\n        -0.43359375,\n        0.69921875,\n        -0.26953125,\n        -0.080566406,\n        0.23828125,\n        0.9296875,\n        0.09472656,\n        0.053955078,\n        0.076171875,\n        -0.69921875,\n        0.6640625,\n        0.14746094,\n        -0.734375,\n        -0.46484375,\n        -0.69921875,\n        -0.1875,\n        -0.44140625,\n        0.13378906,\n        -0.091308594,\n        0.3515625,\n        0.13671875,\n        0.012817383,\n        0.048828125,\n        0.39453125,\n        -0.34179688,\n        -0.20800781,\n        0.020385742,\n        -0.06640625,\n        0.029418945,\n        -0.18554688,\n        0.020874023,\n        -0.27734375,\n        -0.047851562,\n        0.20605469,\n        -0.5234375,\n        0.103027344,\n        -0.10253906,\n        0.375,\n        0.0001449585,\n        -0.74609375,\n        -0.017333984,\n        0.052246094,\n        0.58984375,\n        0.83203125,\n        -0.041992188,\n        0.24316406,\n        -1.109375,\n        0.140625,\n        0.44335938,\n        0.119140625,\n        0.052001953,\n        0.123046875,\n        -0.06982422,\n        0.51171875,\n        0.24316406,\n        0.51953125,\n        -0.016845703,\n        0.38867188,\n        0.47851562,\n        0.62890625,\n        -0.10839844,\n        -0.16113281,\n        0.2421875,\n        -0.5390625,\n        0.19824219,\n        0.57421875,\n        0.33398438,\n        0.059326172,\n        -0.77734375,\n        -0.55859375,\n        -0.16894531,\n        0.06542969,\n        0.040283203,\n        -0.17578125,\n        0.11767578,\n        -0.3515625,\n        0.43164062,\n        -0.14160156,\n        -0.15136719,\n        0.17089844,\n        -0.14257812,\n        0.625,\n        0.6640625,\n        0.106933594,\n        0.09765625,\n        -0.42773438,\n        -1.765625,\n        0.071777344,\n        0.25976562,\n        -0.002166748,\n        -0.2265625,\n        -1.046875,\n        0.032226562,\n        -0.19726562,\n        -0.0057678223,\n        0.34960938,\n        -0.10986328,\n        -0.33789062,\n        -0.10546875,\n        -0.18359375,\n        0.25390625,\n        0.013793945,\n        0.07470703,\n        0.28125,\n        -0.21679688,\n        -0.25195312,\n        -0.111816406,\n        -0.7265625,\n        -1.09375,\n        -0.25,\n        0.33203125,\n        0.36328125,\n        -0.17382812,\n        -0.6328125,\n        0.21679688,\n        -0.61328125,\n        -0.31640625,\n        -0.2578125,\n        -0.5859375,\n        -0.061767578,\n        0.54296875,\n        -0.07519531,\n        0.33789062,\n        0.625,\n        0.006011963,\n        0.13085938,\n        0.109375,\n        -0.13671875,\n        -0.26757812,\n        -0.109375,\n        0.7265625,\n        -0.45898438,\n        -0.017578125,\n        -1.078125,\n        0.41015625,\n        -0.734375,\n        0.53125,\n        -0.0042419434,\n        0.17480469,\n        -0.040527344,\n        -0.27734375,\n        0.11230469,\n        -0.27929688,\n        -0.40039062,\n        0.00390625,\n        0.609375,\n        -0.39453125,\n        -0.20898438,\n        -0.4140625,\n        0.15527344,\n        -0.033203125,\n        -0.3125,\n        0.4296875,\n        -0.6171875,\n        -0.13964844,\n        0.24804688,\n        0.12988281,\n        -0.041992188,\n        -0.44335938,\n        0.59375,\n        -0.13476562,\n        0.49804688,\n        -0.390625,\n        0.022949219,\n        -0.006011963,\n        0.076660156,\n        0.41210938,\n        -0.016113281,\n        0.10205078,\n        -0.2109375,\n        0.35351562,\n        -0.859375,\n        -0.87890625,\n        -1.1015625,\n        -0.00579834,\n        0.03173828,\n        1.0859375,\n        0.16210938,\n        0.6484375,\n        0.73828125,\n        0.35546875,\n        0.35546875,\n        -0.07421875,\n        0.8046875,\n        0.62109375,\n        -0.65234375,\n        -1.0390625,\n        0.36914062,\n        0.57421875,\n        -0.095703125,\n        0.08154297,\n        -0.375,\n        0.20117188,\n        -0.30273438,\n        -0.47460938,\n        -0.080078125,\n        0.77734375,\n        -0.096191406,\n        0.31445312,\n        -0.41210938,\n        -0.48828125,\n        0.41015625,\n        -0.1015625,\n        -0.03515625,\n        -0.43554688,\n        -0.07324219,\n        -0.6015625,\n        0.42578125,\n        -0.4140625,\n        -0.02746582,\n        0.22753906,\n        0.031982422,\n        0.23144531,\n        0.103515625,\n        0.6015625,\n        -0.64453125,\n        0.45117188,\n        -0.30664062,\n        -0.018310547,\n        -0.52734375,\n        0.0001449585,\n        -0.5078125,\n        -0.041503906,\n        0.12158203,\n        0.05029297,\n        -0.07128906,\n        -0.5078125,\n        0.30664062,\n        0.27539062,\n        -0.23046875,\n        0.8125,\n        -0.29882812,\n        0.90234375,\n        -0.16796875,\n        0.37890625,\n        0.08203125,\n        -0.12597656,\n        0.32617188,\n        0.6328125,\n        0.6796875,\n        -0.38476562,\n        0.3203125,\n        0.71875,\n        -0.09375,\n        0.5390625,\n        0.48046875,\n        -0.3515625,\n        0.36523438,\n        -0.13867188,\n        0.075683594,\n        0.25390625,\n        -0.011413574,\n        0.33203125,\n        -0.22949219,\n        0.33203125,\n        -0.2578125,\n        0.66015625,\n        0.014465332,\n        -0.40429688,\n        0.033447266,\n        0.23925781,\n        -0.07421875,\n        -0.76953125,\n        0.42773438,\n        -0.12109375,\n        -0.20117188,\n        -0.20703125,\n        -0.28515625,\n        -0.5,\n        0.484375,\n        -0.34960938,\n        -0.41601562,\n        -0.18847656,\n        -0.28710938,\n        0.0012435913,\n        -0.18066406,\n        0.62890625,\n        -0.36132812,\n        0.21679688,\n        -1.0078125,\n        0.024658203,\n        -0.114746094,\n        -0.4921875,\n        0.8359375,\n        0.34960938,\n        0.13476562,\n        -0.06982422,\n        0.107910156,\n        0.026367188,\n        -0.75,\n        -0.7890625,\n        -0.060546875,\n        0.111328125,\n        -0.25195312,\n        0.100097656,\n        -0.43554688,\n        -0.099609375,\n        0.3359375,\n        -0.005554199,\n        0.27539062,\n        -0.012207031,\n        0.16308594,\n        -0.15917969,\n        -0.328125,\n        0.8203125,\n        0.13476562,\n        0.21679688,\n        -0.31054688,\n        -0.87890625,\n        0.21191406,\n        0.21484375,\n        0.17285156,\n        -0.110839844,\n        0.013977051,\n        -0.71875,\n        0.6875,\n        -0.30664062,\n        0.13476562,\n        0.24511719,\n        0.16015625,\n        -0.33984375,\n        1.2265625,\n        0.31640625,\n        0.65234375,\n        0.064453125,\n        0.32421875,\n        -0.24023438,\n        -0.08642578,\n        -0.22460938,\n        -0.017822266,\n        0.41210938,\n        -0.6640625,\n        -0.31640625,\n        0.5546875,\n        -0.19824219,\n        1.046875,\n        -0.26757812,\n        -0.5625,\n        0.05078125,\n        -1.0078125,\n        -0.18066406,\n        0.107910156,\n        0.5,\n        -0.083496094,\n        0.3515625,\n        0.51953125,\n        0.017211914,\n        -0.5703125,\n        -0.296875,\n        0.546875,\n        -0.07714844,\n        0.38671875,\n        0.12695312,\n        -0.36132812,\n        0.05517578,\n        0.099121094,\n        -0.65234375,\n        -0.51953125,\n        -0.22851562,\n        -0.5546875,\n        0.21777344,\n        0.50390625,\n        -0.33007812,\n        0.49609375,\n        -0.064941406,\n        -0.45507812,\n        0.0009536743,\n        -0.17382812,\n        -0.07519531,\n        -0.84765625,\n        0.19726562,\n        0.34960938,\n        0.26953125,\n        0.09863281,\n        0.74609375,\n        0.2109375,\n        0.49804688,\n        0.4765625,\n        -0.5625,\n        0.15722656,\n        -0.23339844,\n        -0.23535156,\n        0.02722168,\n        0.5703125,\n        0.22753906,\n        -0.18359375,\n        0.16796875,\n        0.029296875,\n        0.53515625,\n        0.37109375,\n        -0.3125,\n        -0.13671875,\n        0.33398438,\n        -0.5703125,\n        -0.59375,\n        -0.375,\n        -0.3046875,\n        0.0048828125,\n        -0.23144531,\n        -0.31640625,\n        -0.036132812,\n        -0.30078125,\n        -0.55078125,\n        -0.22558594,\n        -0.15917969,\n        0.08251953,\n        0.014343262,\n        0.31445312,\n        0.46289062,\n        0.3515625,\n        0.53125,\n        -0.23632812,\n        0.14355469,\n        0.080078125,\n        -0.06933594,\n        0.024536133,\n        1.9296875,\n        0.09082031,\n        -0.37109375,\n        -0.92578125,\n        -0.27148438,\n        0.35351562,\n        0.056396484,\n        0.45117188,\n        -0.671875,\n        0.34179688,\n        0.265625,\n        -0.28320312,\n        0.24414062,\n        -0.6328125,\n        0.38867188,\n        0.2265625,\n        -0.296875,\n        -0.31640625,\n        -0.27539062,\n        -0.4765625,\n        0.078125,\n        -0.31054688,\n        -0.122558594,\n        -0.5546875,\n        0.068847656,\n        1.0234375,\n        -0.78125,\n        -0.033447266,\n        -0.3125,\n        -0.016845703,\n        -0.0005302429,\n        -0.640625,\n        -0.06591797,\n        0.65234375,\n        0.40429688,\n        0.25585938,\n        -0.26757812,\n        0.24804688,\n        -0.83203125,\n        0.33203125,\n        -0.039794922,\n        0.328125,\n        -0.3203125,\n        0.1171875,\n        0.6875,\n        -0.011413574,\n        -0.29101562,\n        0.234375,\n        -0.13867188,\n        0.640625,\n        -0.20898438,\n        0.14746094,\n        -0.40429688,\n        0.34960938,\n        0.484375,\n        -0.54296875,\n        0.32617188,\n        0.18457031,\n        -0.66015625,\n        0.60546875,\n        -0.034179688,\n        -0.30078125,\n        0.07519531,\n        0.546875,\n        -0.071777344,\n        -0.26367188,\n        -0.9765625,\n        0.12207031,\n        0.007080078,\n        0.8984375,\n        0.34375,\n        0.47070312,\n        0.29296875,\n        -0.453125,\n        -0.017578125,\n        0.09716797,\n        -0.063964844,\n        0.3125,\n        -0.24121094,\n        0.23144531,\n        -0.15039062,\n        0.20214844,\n        -0.072753906,\n        0.80078125,\n        0.875,\n        0.22265625,\n        -0.032714844,\n        -1.03125,\n        0.48828125,\n        0.796875,\n        -0.1796875,\n        -0.24902344,\n        -0.25195312,\n        -0.26171875,\n        0.26953125,\n        -0.265625,\n        -0.071777344,\n        -0.41015625,\n        -0.26757812,\n        0.23339844,\n        -0.69140625,\n        -0.023071289,\n        -0.45898438,\n        0.78125,\n        0.24121094,\n        -0.18945312,\n        0.484375,\n        -0.0005378723,\n        0.23339844,\n        0.90625,\n        0.0154418945,\n        -0.80078125,\n        -0.13085938,\n        0.029785156,\n        -0.076171875,\n        0.31054688,\n        0.3125,\n        0.2734375,\n        0.14257812,\n        0.30664062,\n        -0.52734375,\n        -0.34179688,\n        -0.044921875,\n        -1.546875,\n        -0.24023438,\n        -0.030273438,\n        -0.07861328,\n        -0.7421875,\n        -0.49804688,\n        -0.765625,\n        -0.0027770996,\n        -0.83203125,\n        -0.7890625,\n        -0.020141602,\n        0.8125,\n        -0.39453125,\n        0.8203125,\n        -0.57421875,\n        -0.2890625,\n        0.17773438,\n        -0.123535156,\n        0.5234375,\n        0.07910156,\n        0.09326172,\n        0.515625,\n        -0.1484375,\n        0.028564453,\n        -0.18652344,\n        -0.20214844,\n        0.041992188,\n        -0.24804688,\n        0.609375,\n        -0.115234375,\n        0.38085938,\n        -0.12792969,\n        0.28125,\n        -0.33984375,\n        -0.46679688,\n        -0.53125,\n        0.036865234,\n        0.25976562,\n        -0.45898438,\n        0.31835938,\n        -0.19238281,\n        -0.546875,\n        0.515625,\n        0.04296875,\n        0.23535156,\n        -0.13574219,\n        0.4296875,\n        0.41210938,\n        -1.8203125,\n        0.25195312,\n        0.03112793,\n        0.018066406,\n        -0.010986328,\n        0.13183594,\n        -0.80078125,\n        1.453125,\n        -0.47851562,\n        -0.03173828,\n        0.4375,\n        0.14648438,\n        -0.0019836426,\n        -0.56640625,\n        0.07763672,\n        -0.29882812,\n        0.19824219,\n        1.0859375,\n        0.41015625,\n        0.22265625,\n        0.20703125,\n        -0.39453125,\n        0.18945312,\n        -0.14746094,\n        0.06591797,\n        -0.59765625,\n        0.4140625,\n        -0.1875,\n        0.19726562,\n        -0.05029297,\n        0.45898438,\n        -0.35546875,\n        -0.011413574,\n        -0.14453125,\n        0.171875,\n        0.31835938,\n        0.203125,\n        -1.140625,\n        -0.15820312,\n        -0.21191406,\n        0.70703125,\n        -0.028198242,\n        -0.079589844,\n        0.44335938,\n        -0.28320312,\n        -0.6484375,\n        -0.0546875,\n        0.045410156,\n        0.09277344,\n        0.036376953,\n        -0.16796875,\n        -0.36132812,\n        0.006225586,\n        -0.30664062,\n        0.107421875,\n        0.38671875,\n        0.23730469,\n        0.037841797,\n        -0.05419922,\n        0.23339844,\n        -0.38671875,\n        -0.18066406,\n        -0.39453125,\n        0.3984375,\n        0.35546875,\n        -0.22167969,\n        0.13964844,\n        -0.2578125,\n        -0.037109375,\n        -0.023803711,\n        0.0056762695,\n        -0.41992188,\n        0.671875,\n        0.46289062,\n        0.203125,\n        0.40625,\n        -0.28320312,\n        -0.24121094,\n        -0.375,\n        -0.58203125,\n        0.20214844,\n        0.40234375,\n        0.703125,\n        0.22363281,\n        0.92578125,\n        0.55078125,\n        0.32617188,\n        0.17089844,\n        -0.025634766,\n        0.12597656,\n        0.13183594,\n        -0.69140625,\n        -0.38867188,\n        -0.06201172,\n        -0.14453125,\n        0.875,\n        -0.16992188,\n        -0.20410156,\n        -0.1328125,\n        -0.23632812,\n        -0.29296875,\n        -0.068359375,\n        0.12988281,\n        0.515625,\n        -0.33203125,\n        -0.14941406,\n        -0.4296875,\n        0.24609375,\n        0.43945312,\n        -0.3125,\n        -0.14453125,\n        0.515625,\n        0.25,\n        0.17382812,\n        -0.26757812,\n        -0.16113281,\n        -0.22753906,\n        -0.734375,\n        -0.95703125,\n        0.44140625,\n        -0.20800781,\n        -0.051513672,\n        0.60546875,\n        -0.359375,\n        0.5078125,\n        -0.47460938,\n        0.27148438,\n        0.053955078,\n        -0.15722656,\n        0.36132812,\n        0.08496094,\n        -0.60546875,\n        0.16894531,\n        -0.10595703,\n        -0.13574219,\n        0.018188477,\n        -0.37109375,\n        0.32617188,\n        -0.4609375,\n        0.42578125,\n        0.26171875,\n        -0.3515625,\n        0.37695312,\n        -0.021484375,\n        0.27734375,\n        0.48828125,\n        0.045654297,\n        -0.03112793,\n        0.24316406,\n        0.140625,\n        0.019165039,\n        0.13867188,\n        0.45703125,\n        -0.3125,\n        -0.40234375,\n        -0.11279297,\n        0.12011719,\n        0.5390625,\n        0.29101562,\n        -0.14453125,\n        -0.3984375,\n        0.32617188,\n        0.11328125,\n        0.0073547363,\n        0.13476562,\n        -0.203125,\n        -0.34179688,\n        -0.14746094,\n        -0.32421875,\n        0.26757812,\n        0.3359375,\n        0.17675781,\n        0.6484375,\n        -0.095703125,\n        -0.55078125,\n        0.14648438,\n        0.026489258,\n        0.000415802,\n        -0.140625,\n        0.13964844,\n        -0.75390625,\n        0.796875,\n        -0.14941406,\n        -0.2734375,\n        0.38671875,\n        -0.71484375,\n        0.20996094,\n        -0.21484375,\n        0.0038909912,\n        0.25195312,\n        0.3203125,\n        -0.22265625,\n        0.17675781,\n        0.045166016,\n        0.28125,\n        0.453125,\n        -0.080566406,\n        0.09082031,\n        -0.16015625,\n        -0.0012969971,\n        -0.4296875,\n        0.34375,\n        -0.65234375,\n        -0.017456055,\n        0.20019531,\n        0.8125,\n        0.15039062,\n        0.18847656,\n        -0.13964844,\n        0.3203125,\n        0.33398438,\n        0.41015625,\n        -0.11669922,\n        1.0546875,\n        0.30859375,\n        0.16601562,\n        -0.55078125,\n        0.40234375,\n        0.20507812,\n        -0.123535156,\n        -0.24902344,\n        0.029418945,\n        -0.6953125,\n        0.68359375,\n        0.07763672,\n        -0.38867188,\n        0.091796875,\n        0.021850586,\n        0.34960938,\n        0.375,\n        0.26367188,\n        0.10107422,\n        0.14648438,\n        0.7109375,\n        -0.41796875,\n        0.60546875,\n        0.12158203,\n        -0.21875,\n        -0.18164062,\n        0.46875,\n        0.515625,\n        0.5625,\n        -0.016967773,\n        -0.25390625,\n        -0.953125,\n        -0.46875,\n        0.1484375,\n        0.28710938,\n        0.34765625,\n        0.23046875,\n        0.24023438,\n        0.375,\n        -0.26171875,\n        1.1484375,\n        -0.34570312,\n        0.14355469,\n        0.19140625,\n        -0.24414062,\n        0.7265625,\n        -0.29296875,\n        0.28515625,\n        -0.5234375,\n        -0.122558594,\n        -0.625,\n        -0.10058594,\n        0.18359375,\n        -0.74609375,\n        -0.19433594,\n        -0.46875,\n        -0.07861328,\n        0.41992188,\n        0.27148438,\n        -0.38867188,\n        -0.016601562,\n        -0.111816406,\n        0.09423828,\n        0.049804688,\n        -0.06738281,\n        0.7578125,\n        0.13769531,\n        -0.6484375,\n        -0.14941406,\n        -0.6953125,\n        -0.20703125,\n        -0.24804688,\n        0.3359375,\n        0.26953125,\n        -0.033691406,\n        -0.013977051,\n        -0.45117188,\n        1.0234375,\n        0.23339844,\n        0.027832031,\n        -0.79296875,\n        -0.32617188,\n        0.38085938,\n        -0.375,\n        -0.10546875,\n        0.12597656,\n        0.8671875,\n        -0.17285156,\n        0.2265625,\n        0.06347656,\n        0.075683594,\n        0.0003566742,\n        -0.011169434,\n        0.9296875,\n        -0.1328125,\n        -0.62109375,\n        -0.27929688,\n        0.42773438,\n        0.42578125,\n        0.41601562,\n        -0.026123047,\n        0.5,\n        -0.04663086,\n        0.0019836426,\n        -0.17382812,\n        -0.21582031,\n        0.07470703,\n        -0.4921875,\n        -0.063964844,\n        0.16015625,\n        -0.03564453,\n        -0.061035156,\n        0.17089844,\n        -0.3671875,\n        -0.68359375,\n        0.59375,\n        -0.62890625,\n        0.20605469,\n        0.111328125,\n        0.19335938,\n        -0.35742188,\n        -0.18847656,\n        -1.1171875,\n        -0.46484375,\n        0.005279541,\n        0.057128906,\n        -0.6796875,\n        0.15136719,\n        0.6953125,\n        -0.32617188,\n        -0.38671875,\n        -0.734375,\n        -0.38671875,\n        -0.68359375,\n        0.453125,\n        0.8828125,\n        -0.063964844,\n        0.19726562,\n        -0.39648438,\n        -0.734375,\n        -0.51171875,\n        -0.6875,\n        0.07763672,\n        0.6015625,\n        0.671875,\n        -0.27539062,\n        0.26953125,\n        0.14746094,\n        0.6640625,\n        -0.5625,\n        -0.8828125,\n        0.49804688,\n        -0.31835938,\n        0.546875,\n        -0.78125,\n        -0.34179688,\n        -0.24316406,\n        0.15722656,\n        -0.25585938,\n        -0.20117188,\n        -0.023925781,\n        0.5078125,\n        0.037109375,\n        -0.3125,\n        0.41015625,\n        -0.41992188,\n        -0.15039062,\n        0.17285156,\n        0.19824219,\n        0.059570312,\n        -1.109375,\n        -0.33203125,\n        -0.34960938,\n        -0.296875,\n        -0.29882812,\n        0.41796875,\n        0.15039062,\n        0.58203125,\n        -0.21679688,\n        0.59375,\n        -0.06982422,\n        0.66796875,\n        -0.51953125,\n        -0.44335938,\n        0.27539062,\n        0.60546875,\n        0.75390625,\n        -0.42382812,\n        -0.51171875,\n        0.24707031,\n        0.21582031,\n        0.1171875,\n        -0.6640625,\n        0.31640625,\n        0.20117188,\n        -0.032958984,\n        -0.20117188,\n        0.50390625,\n        0.0016708374,\n        0.23828125,\n        -0.08154297,\n        -0.33789062,\n        -0.19335938,\n        0.057128906,\n        0.36914062,\n        -0.53125,\n        -0.32617188,\n        0.5703125,\n        -0.55078125,\n        -0.07763672,\n        0.38085938,\n        0.17578125,\n        0.60546875,\n        -0.38671875,\n        0.51171875,\n        0.24511719,\n        -0.08935547,\n        -1.1171875,\n        0.54296875,\n        0.9375,\n        0.055419922,\n        -0.28515625,\n        0.043945312,\n        0.36523438,\n        0.18847656,\n        0.38085938,\n        -0.37695312,\n        0.32617188,\n        -0.12060547,\n        0.38671875,\n        0.234375,\n        -0.45703125,\n        0.30078125,\n        -0.48828125,\n        0.42382812,\n        0.018920898,\n        0.42578125,\n        -0.10449219,\n        0.5390625,\n        -0.068847656,\n        0.06542969,\n        0.0079956055,\n        -0.14648438,\n        -0.056884766,\n        0.9609375,\n        0.5,\n        0.31640625,\n        -0.22949219,\n        0.17285156,\n        -0.296875,\n        0.58203125,\n        0.78125,\n        -0.46484375,\n        -0.59375,\n        0.23535156,\n        -0.31445312,\n        0.08642578,\n        0.33789062,\n        0.21777344,\n        0.12597656,\n        -0.37304688,\n        0.12011719,\n        -0.11230469,\n        0.5,\n        0.25390625,\n        0.6875,\n        0.38476562,\n        -0.18945312,\n        -0.0075683594,\n        0.16503906,\n        0.15332031,\n        -0.32421875,\n        -0.17578125,\n        -0.40625,\n        -0.5234375,\n        0.36328125,\n        -0.20117188,\n        -0.27148438,\n        -0.103027344,\n        0.390625,\n        -0.76171875,\n        -0.5,\n        0.035888672,\n        0.49609375,\n        0.68359375,\n        0.09082031,\n        -0.24023438,\n        0.484375,\n        -0.22851562,\n        0.11328125,\n        0.4375,\n        0.171875,\n        0.60546875,\n        -0.48828125,\n        -0.44921875,\n        -0.047851562,\n        -0.57421875,\n        -0.22070312,\n        -0.20605469,\n        0.28710938,\n        0.51171875,\n        0.10498047,\n        -0.10449219,\n        -0.49414062,\n        0.16015625,\n        0.73828125,\n        0.29296875,\n        -0.020996094,\n        -0.6171875,\n        0.05859375,\n        0.53515625,\n        0.39453125,\n        0.48046875,\n        0.5546875,\n        -0.35742188,\n        0.3125,\n        0.06982422,\n        0.05859375,\n        -0.578125,\n        0.4140625,\n        0.453125,\n        0.01940918,\n        -0.6484375,\n        0.36132812,\n        -0.48828125,\n        -0.52734375,\n        -0.21289062,\n        -0.072265625,\n        -0.02709961,\n        -0.5625,\n        -0.7734375,\n        0.671875,\n        -0.36328125,\n        0.003967285,\n        -0.26367188,\n        -0.01586914,\n        0.24121094,\n        0.5390625,\n        0.008544922,\n        -0.025878906,\n        -0.359375,\n        -0.037597656,\n        -0.3046875,\n        0.64453125,\n        -0.010559082,\n        -0.083984375,\n        0.2578125,\n        0.026489258,\n        -0.08886719,\n        0.15136719,\n        -1.1171875,\n        -0.18554688,\n        0.75,\n        -0.95703125,\n        0.0007324219,\n        -1.59375,\n        -0.62109375,\n        -0.22558594,\n        0.33007812,\n        -0.796875,\n        0.061767578,\n        0.075683594,\n        -0.15429688,\n        -0.22265625,\n        0.47265625,\n        0.15234375,\n        0.67578125,\n        0.55078125,\n        -0.5546875,\n        -0.106933594,\n        -0.45117188,\n        -0.18457031,\n        -1.1875,\n        -0.06689453,\n        -0.34375,\n        0.6328125,\n        0.31835938,\n        0.22363281,\n        -0.29296875,\n        0.40429688,\n        0.15039062,\n        -0.3203125,\n        -0.06738281,\n        -0.14160156,\n        0.18261719,\n        0.390625,\n        0.07373047,\n        0.25,\n        -0.8046875,\n        -0.47460938,\n        0.033691406,\n        -0.375,\n        1.0625,\n        0.08496094,\n        -0.17285156,\n        -0.4921875,\n        -0.2421875,\n        -0.54296875,\n        -0.34375,\n        -0.43359375,\n        0.29492188,\n        0.09667969,\n        0.096191406,\n        -0.23632812,\n        -0.59375,\n        0.6171875,\n        -0.49023438,\n        0.6015625,\n        0.10546875,\n        -0.50390625,\n        -0.099609375,\n        0.7890625,\n        0.24023438,\n        0.64453125,\n        -0.78125,\n        0.30664062,\n        -1.1484375,\n        0.36328125,\n        -0.5234375,\n        -0.56640625,\n        -0.421875,\n        0.20800781,\n        -0.33398438,\n        0.07324219,\n        0.07324219,\n        -0.030273438,\n        -0.03564453,\n        -0.27734375,\n        -0.8203125,\n        0.15429688,\n        -0.8359375,\n        0.20898438,\n        -0.055419922,\n        -0.08496094,\n        0.10595703,\n        0.25195312,\n        0.31835938,\n        0.19726562,\n        0.56640625,\n        0.52734375,\n        0.27734375,\n        -0.83203125,\n        -0.14453125,\n        -0.203125,\n        -0.9921875,\n        -1.1640625,\n        -0.10546875,\n        0.546875,\n        0.6796875,\n        -0.23632812,\n        -0.18359375,\n        -0.08105469,\n        -0.15625,\n        0.43164062,\n        -0.60546875,\n        -0.23046875,\n        -0.328125,\n        0.38476562,\n        0.079589844,\n        -0.38671875,\n        0.140625,\n        0.020751953,\n        0.41015625,\n        0.68359375,\n        0.6875,\n        -0.22558594,\n        -0.09277344,\n        -0.0053100586,\n        0.17578125,\n        -0.31054688,\n        0.515625,\n        0.3828125,\n        0.02319336,\n        0.016357422,\n        -0.29296875,\n        0.3125,\n        0.58984375,\n        0.15625,\n        0.041992188,\n        -0.328125,\n        0.15820312,\n        0.10595703,\n        0.11376953,\n        0.33007812,\n        0.015380859,\n        -0.33984375,\n        0.83203125,\n        -0.58203125,\n        0.45117188,\n        0.051513672,\n        -0.10595703,\n        -0.40820312,\n        -0.390625,\n        0.2421875,\n        0.05859375,\n        0.16308594,\n        -0.234375,\n        -0.12792969,\n        0.93359375,\n        -0.038085938,\n        -0.059570312,\n        0.083984375,\n        0.06542969,\n        -0.95703125,\n        -0.09033203,\n        0.12597656,\n        0.4609375,\n        -0.4765625,\n        0.18066406,\n        -0.5625,\n        -0.020751953,\n        -0.421875,\n        0.3203125,\n        -0.22265625,\n        0.40234375,\n        -0.75390625,\n        0.11669922,\n        -0.16699219,\n        -0.104003906,\n        0.061035156,\n        0.66015625,\n        -0.375,\n        0.80859375,\n        0.033447266,\n        -0.3203125,\n        -0.77734375,\n        -0.021728516,\n        0.09033203,\n        0.13085938,\n        -0.26757812,\n        -0.703125,\n        0.421875,\n        0.13085938,\n        -0.59375,\n        0.36914062,\n        0.96875,\n        0.11621094,\n        -0.45703125,\n        0.33398438,\n        0.067871094,\n        -0.08154297,\n        -0.25585938,\n        -0.052734375,\n        0.54296875,\n        0.072265625,\n        0.07080078,\n        -0.47265625,\n        0.018432617,\n        0.578125,\n        -0.16992188,\n        -0.0023040771,\n        -0.24414062,\n        -0.44921875,\n        0.34960938,\n        -0.4609375,\n        -0.16992188,\n        -0.375,\n        0.37890625,\n        -0.06347656,\n        0.13574219,\n        -0.28125,\n        0.12988281,\n        -0.25,\n        0.11425781,\n        -0.22167969,\n        -1.015625,\n        0.21289062,\n        -0.59765625,\n        0.18847656,\n        0.6640625,\n        -0.08251953,\n        -0.17089844,\n        -0.18554688,\n        -0.18652344,\n        0.18847656,\n        -0.06347656,\n        0.3359375,\n        -0.21191406,\n        0.17871094,\n        -0.39648438,\n        0.38085938,\n        -0.5234375,\n        -0.15527344,\n        0.12792969,\n        -0.90234375,\n        -0.96484375,\n        0.41210938,\n        -0.52734375,\n        0.17675781,\n        -0.3203125,\n        -0.29101562,\n        -0.5078125,\n        0.15136719,\n        0.3125,\n        -0.13476562,\n        -0.59375,\n        0.640625,\n        -0.076660156,\n        0.078125,\n        -0.103515625,\n        0.11669922,\n        -0.10449219,\n        0.890625,\n        0.08154297,\n        0.359375,\n        -0.39453125,\n        0.092285156,\n        0.12695312,\n        0.0095825195,\n        -0.04272461,\n        0.75390625,\n        0.030029297,\n        0.328125,\n        -0.19238281,\n        0.58203125,\n        -0.5078125,\n        0.953125,\n        0.27929688,\n        -0.56640625,\n        -0.04638672,\n        0.2890625,\n        -0.27734375,\n        0.123046875,\n        -0.09863281,\n        0.54296875,\n        0.14257812,\n        0.296875,\n        -0.012329102,\n        0.09472656,\n        -0.10449219,\n        -0.203125,\n        0.109375,\n        -0.51953125,\n        -0.072753906,\n        -0.16015625,\n        0.16796875,\n        -0.04321289,\n        -0.35351562,\n        -0.83203125,\n        -0.028686523,\n        -0.453125,\n        -0.671875,\n        0.609375,\n        1.5078125,\n        0.75,\n        0.05493164,\n        0.30664062,\n        -0.20507812,\n        0.35742188,\n        -1.046875,\n        -0.34375,\n        0.328125,\n        -0.30664062,\n        0.12402344,\n        0.123535156,\n        -0.14453125,\n        0.72265625,\n        0.14746094,\n        -0.27929688,\n        0.2890625,\n        0.11279297,\n        -0.76171875,\n        0.33007812,\n        -0.1953125,\n        0.028686523,\n        -1.296875,\n        0.30664062,\n        -0.22558594,\n        0.28515625,\n        -0.25,\n        -0.10253906,\n        0.44726562,\n        -0.20117188,\n        0.091796875,\n        -0.021850586,\n        0.23046875,\n        -0.8671875,\n        0.13867188,\n        -0.37890625,\n        -0.10205078,\n        0.62109375,\n        -0.056884766,\n        -0.16992188,\n        0.01373291,\n        -0.34960938,\n        0.31640625\n    ],\n    \"inputTextTokenCount\": 5\n}"
								}
							]
						}
					]
				},
				{
					"name": "Image Generation",
					"item": [
						{
							"name": "Image Generation (stability.stable-diffusion-xl)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text_prompts\": [{ \n        \"text\": \"Character design of a robot warrior, concept art, contest winner, diverse medical cybersuits, Football armor, triade color scheme, black shirt underneath armor, in golden armor, clothes in military armor, high resolution render, octane \" \n    }],\n    \"cfg_scale\": 10,\n    \"seed\": 20,\n    \"steps\": 50\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "stability.stable-diffusion-xl",
											"uuid": "44871e31-19fe-48bb-81b8-d9b5dff99239"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text_prompts\": [{ \n        \"text\": \"Character design of a robot warrior, concept art, contest winner, diverse medical cybersuits, Football armor, triade color scheme, black shirt underneath armor, in golden armor, clothes in military armor, high resolution render, octane \" \n    }],\n    \"cfg_scale\": 10,\n    \"seed\": 20,\n    \"steps\": 50\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
											"protocol": "https",
											"host": [
												"bedrock-runtime",
												"{{AWS_Region}}",
												"amazonaws",
												"com"
											],
											"path": [
												"model",
												":model_identifier",
												"invoke"
											],
											"variable": [
												{
													"key": "model_identifier",
													"value": "stability.stable-diffusion-xl",
													"description": "Available text generation models under Amazon Bedrock have the following IDs:\n\n-  amazon.titan-tg1-large\n- ai21.j2-grande-instruct\n- ai21.j2-jumbo-instruct\n- anthropic.claude-instant-v1\n- anthropic.claude-v1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 06 Apr 2024 23:57:51 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "408387"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "83a3db02-3316-4e57-bafb-769f60682e76"
										},
										{
											"key": "X-Amzn-Bedrock-Invocation-Latency",
											"value": "4573"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Image-Height",
											"value": "512"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Image-Width",
											"value": "512"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Image-Bucketed-Step-Size",
											"value": "50"
										}
									],
									"cookie": [],
									"body": "{\n    \"result\": \"success\",\n    \"artifacts\": [\n        {\n            \"seed\": 20,\n            \"base64\": \"\",\n            \"finishReason\": \"SUCCESS\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Sentiment Analysis",
					"item": [
						{
							"name": "Sentiment Analysis (amazon.titan-tg1-large)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inputText\": \"Review: This movie is so great and once again dazzles and delights us Is this movie review sentence negative or positive? \\nOPTIONS: -positive -negative \",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-tg1-large",
											"uuid": "9c6701af-8e45-43f9-a0e9-d5ef44732486"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inputText\": \"Review: This movie is so great and once again dazzles and delights us Is this movie review sentence negative or positive? \\nOPTIONS: -positive -negative \",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
											"protocol": "https",
											"host": [
												"bedrock-runtime",
												"{{AWS_Region}}",
												"amazonaws",
												"com"
											],
											"path": [
												"model",
												":model_identifier",
												"invoke"
											],
											"variable": [
												{
													"key": "model_identifier",
													"value": "amazon.titan-tg1-large"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2024 00:03:13 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "109"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "56ebc33f-02fe-402b-b2a9-daa563ca56a7"
										},
										{
											"key": "X-Amzn-Bedrock-Invocation-Latency",
											"value": "605"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Token-Count",
											"value": "2"
										},
										{
											"key": "X-Amzn-Bedrock-Input-Token-Count",
											"value": "34"
										}
									],
									"cookie": [],
									"body": "{\n    \"inputTextTokenCount\": 34,\n    \"results\": [\n        {\n            \"tokenCount\": 2,\n            \"outputText\": \"\\npositive\",\n            \"completionReason\": \"FINISH\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "SQL Generation",
					"item": [
						{
							"name": "SQL Generation (amazon.titan-tg1-large)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inputText\": \"Create SQL statement from instruction. \\n Database: Customers(CustomerID, CustomerName, ContactName, Address, City, PostalCode, Country) \\n Request: all the countries we have customers in without repetitions. \\n SQL statement: SELECT DISTINCT Country FROM Customers; \\n  ## \\n Create SQL statement from instruction. \\n Database: Orders(OrderID, CustomerID, EmployeeID, OrderDate, ShipperID) \\n Request: select all the orders from customer id 1. \\n SQL statement: SELECT * FROM Orders WHERE CustomerID = 1; \\n ## \\n Create SQL statement from instruction. Database: Products(ProductID, ProductName, SupplierID, CategoryID, Unit, Price) \\n Request: selects all products from categories 1 and 7 \\n SQL statement: SELECT * FROM Products WHERE CategoryID = 1 OR CategoryID = 7; \\n ## \\n Create SQL statement from instruction. \\n Database: Customers(CustomerID, CustomerName, ContactName, Address, City, PostalCode, Country) \\n Request: change the first customer's name to Alfred Schmidt who lives in Frankfurt city. \\n SQL statement: \",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-tg1-large",
											"uuid": "377e8a6b-aba2-41d6-90ab-112a0199a9cd"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inputText\": \"Create SQL statement from instruction. \\n Database: Customers(CustomerID, CustomerName, ContactName, Address, City, PostalCode, Country) \\n Request: all the countries we have customers in without repetitions. \\n SQL statement: SELECT DISTINCT Country FROM Customers; \\n  ## \\n Create SQL statement from instruction. \\n Database: Orders(OrderID, CustomerID, EmployeeID, OrderDate, ShipperID) \\n Request: select all the orders from customer id 1. \\n SQL statement: SELECT * FROM Orders WHERE CustomerID = 1; \\n ## \\n Create SQL statement from instruction. Database: Products(ProductID, ProductName, SupplierID, CategoryID, Unit, Price) \\n Request: selects all products from categories 1 and 7 \\n SQL statement: SELECT * FROM Products WHERE CategoryID = 1 OR CategoryID = 7; \\n ## \\n Create SQL statement from instruction. \\n Database: Customers(CustomerID, CustomerName, ContactName, Address, City, PostalCode, Country) \\n Request: change the first customer's name to Alfred Schmidt who lives in Frankfurt city. \\n SQL statement: \",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
											"protocol": "https",
											"host": [
												"bedrock-runtime",
												"{{AWS_Region}}",
												"amazonaws",
												"com"
											],
											"path": [
												"model",
												":model_identifier",
												"invoke"
											],
											"variable": [
												{
													"key": "model_identifier",
													"value": "amazon.titan-tg1-large",
													"description": "Available text generation models under Amazon Bedrock have the following IDs:\n\n-  amazon.titan-tg1-large\n- ai21.j2-grande-instruct\n- ai21.j2-jumbo-instruct\n- anthropic.claude-instant-v1\n- anthropic.claude-v1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 06 Apr 2024 23:59:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "202"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "4b7b6aa1-9527-41c5-aa00-4c92611072c9"
										},
										{
											"key": "X-Amzn-Bedrock-Invocation-Latency",
											"value": "1173"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Token-Count",
											"value": "25"
										},
										{
											"key": "X-Amzn-Bedrock-Input-Token-Count",
											"value": "232"
										}
									],
									"cookie": [],
									"body": "{\n    \"inputTextTokenCount\": 232,\n    \"results\": [\n        {\n            \"tokenCount\": 25,\n            \"outputText\": \"UPDATE Customers SET CustomerName = \\\"Alfred Schmidt\\\" WHERE City = \\\"Frankfurt\\\" AND CustomerID = 1;\",\n            \"completionReason\": \"FINISH\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Summarization",
					"item": [
						{
							"name": "Summarization (amazon.titan-tg1-large)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inputText\": \"Statement: \\\"The purpose of life is a deep and personal question with different perspectives from philosophers, religions, and individuals. Some potential purposes include finding happiness and fulfillment, growing as individuals, reproducing and perpetuating the species, making the world a better place, discovering truth and knowledge, developing spiritually, enjoying the pleasures and beauty of the world, creating, and living authentically. Ultimately, the purpose of life is a highly individual question, and each person must decide what gives their life meaning and purpose.\\\" \\nTask: Summarize Statement in one sentence.\",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-tg1-large",
											"uuid": "90a5b36c-c7f8-4950-8648-7edc47447cdd"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inputText\": \"Statement: \\\"The purpose of life is a deep and personal question with different perspectives from philosophers, religions, and individuals. Some potential purposes include finding happiness and fulfillment, growing as individuals, reproducing and perpetuating the species, making the world a better place, discovering truth and knowledge, developing spiritually, enjoying the pleasures and beauty of the world, creating, and living authentically. Ultimately, the purpose of life is a highly individual question, and each person must decide what gives their life meaning and purpose.\\\" \\nTask: Summarize Statement in one sentence.\",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
											"protocol": "https",
											"host": [
												"bedrock-runtime",
												"{{AWS_Region}}",
												"amazonaws",
												"com"
											],
											"path": [
												"model",
												":model_identifier",
												"invoke"
											],
											"variable": [
												{
													"key": "model_identifier",
													"value": "amazon.titan-tg1-large"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2024 00:11:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "254"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e4521f1e-b203-492c-b9c4-821b2ce71ab5"
										},
										{
											"key": "X-Amzn-Bedrock-Invocation-Latency",
											"value": "1318"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Token-Count",
											"value": "28"
										},
										{
											"key": "X-Amzn-Bedrock-Input-Token-Count",
											"value": "113"
										}
									],
									"cookie": [],
									"body": "{\n    \"inputTextTokenCount\": 113,\n    \"results\": [\n        {\n            \"tokenCount\": 28,\n            \"outputText\": \"\\nThe purpose of life is a deep and personal question with different perspectives, and each person must decide what gives their life meaning and purpose.\",\n            \"completionReason\": \"FINISH\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Text Generation",
					"item": [
						{
							"name": "Text Generation (amazon.titan-tg1-large)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inputText\": \"Tell a story of two dogs\",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-tg1-large",
											"uuid": "e799c1a6-9c67-4694-9bfc-0c48f3b6efa3"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inputText\": \"Tell a story of two dogs\",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
											"protocol": "https",
											"host": [
												"bedrock-runtime",
												"{{AWS_Region}}",
												"amazonaws",
												"com"
											],
											"path": [
												"model",
												":model_identifier",
												"invoke"
											],
											"variable": [
												{
													"key": "model_identifier",
													"value": "amazon.titan-tg1-large"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2024 00:42:10 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1172"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e761f804-85e6-48eb-b125-51a905353e38"
										},
										{
											"key": "X-Amzn-Bedrock-Invocation-Latency",
											"value": "6417"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Token-Count",
											"value": "237"
										},
										{
											"key": "X-Amzn-Bedrock-Input-Token-Count",
											"value": "6"
										}
									],
									"cookie": [],
									"body": "{\n    \"inputTextTokenCount\": 6,\n    \"results\": [\n        {\n            \"tokenCount\": 237,\n            \"outputText\": \"\\nOnce upon a time, there were two dogs named Max and Bella. Max was a playful and energetic Golden Retriever, while Bella was a calm and gentle German Shepherd. They were the best of friends and loved to play together every day.\\n\\nOne day, while they were out for a walk, they came across a lost little girl. She was crying and scared, and Max and Bella didn't hesitate to approach her. They licked her face and wagged their tails, trying to comfort her.\\n\\nThe little girl was grateful to Max and Bella for their help. She told them that she had gotten lost while playing in the park and didn't know how to get back home. Max and Bella knew exactly where her house was and led the way, barking excitedly as they went.\\n\\nWhen they arrived at the little girl's house, her parents were overjoyed to see her safe and sound. They thanked Max and Bella for their kindness and generosity. From that day on, Max and Bella became known as the neighborhood's heroes. They continued to play together every day, but now they also looked out for each other and anyone else in need.\",\n            \"completionReason\": \"FINISH\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Translation",
					"item": [
						{
							"name": "Translation (amazon.titan-tg1-large)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inputText\": \"Statement: \\\"My name is Bernd\\\" \\nTask: Translate Statement to German.\",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
									"protocol": "https",
									"host": [
										"bedrock-runtime",
										"{{AWS_Region}}",
										"amazonaws",
										"com"
									],
									"path": [
										"model",
										":model_identifier",
										"invoke"
									],
									"variable": [
										{
											"key": "model_identifier",
											"value": "amazon.titan-tg1-large",
											"description": "Available text generation models under Amazon Bedrock have the following IDs:\n\n-  amazon.titan-tg1-large\n- ai21.j2-grande-instruct\n- ai21.j2-jumbo-instruct\n- anthropic.claude-instant-v1\n- anthropic.claude-v1",
											"uuid": "53d45ae0-a5ba-4161-aa0e-aedc31f39c83"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inputText\": \"Statement: \\\"My name is Bernd\\\" \\nTask: Translate Statement to German.\",\n    \"textGenerationConfig\": {\n        \"maxTokenCount\": 4096,\n        \"stopSequences\": [],\n        \"temperature\": 0,\n        \"topP\": 0.9\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://bedrock-runtime.{{AWS_Region}}.amazonaws.com/model/:model_identifier/invoke",
											"protocol": "https",
											"host": [
												"bedrock-runtime",
												"{{AWS_Region}}",
												"amazonaws",
												"com"
											],
											"path": [
												"model",
												":model_identifier",
												"invoke"
											],
											"variable": [
												{
													"key": "model_identifier",
													"value": "amazon.titan-tg1-large",
													"description": "Available text generation models under Amazon Bedrock have the following IDs:\n\n-  amazon.titan-tg1-large\n- ai21.j2-grande-instruct\n- ai21.j2-jumbo-instruct\n- anthropic.claude-instant-v1\n- anthropic.claude-v1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 07 Apr 2024 00:06:38 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "117"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "b7d4be0b-ba61-4e00-977a-730c9936778e"
										},
										{
											"key": "X-Amzn-Bedrock-Invocation-Latency",
											"value": "805"
										},
										{
											"key": "X-Amzn-Bedrock-Output-Token-Count",
											"value": "9"
										},
										{
											"key": "X-Amzn-Bedrock-Input-Token-Count",
											"value": "19"
										}
									],
									"cookie": [],
									"body": "{\n    \"inputTextTokenCount\": 19,\n    \"results\": [\n        {\n            \"tokenCount\": 9,\n            \"outputText\": \"\\nIch hei√üe Bernd\",\n            \"completionReason\": \"FINISH\"\n        }\n    ]\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "awsv4",
		"awsv4": [
			{
				"key": "accessKey",
				"value": "{{AccessKey}}",
				"type": "string"
			},
			{
				"key": "region",
				"value": "{{AWS_Region}}",
				"type": "string"
			},
			{
				"key": "secretKey",
				"value": "{{SecretKey}}",
				"type": "string"
			},
			{
				"key": "service",
				"value": "bedrock",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "AWS_Region",
			"value": "us-west-2"
		},
		{
			"key": "AccessKey",
			"value": "<BringYourOwn>"
		},
		{
			"key": "SecretKey",
			"value": "<BringYourOwn>"
		}
	]
}