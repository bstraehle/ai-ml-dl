{
	"info": {
		"_postman_id": "844c14d1-298b-419a-8db8-10c53d523d32",
		"name": "ðŸ“Œ IBM watsonx.ai API",
		"description": "### Prerequisites\n\n- Postman\n- IBM Cloud Account: [https://dataplatform.cloud.ibm.com/login](https://dataplatform.cloud.ibm.com/login)\n    \n\n### Usage\n\n1. Create a fork\n2. Update collection variables\n3. Send requests\n    \n\n### Documentation\n\n- API: [https://cloud.ibm.com/apidocs/machine-learning](https://cloud.ibm.com/apidocs/machine-learning)\n- Models: [https://www.ibm.com/products/watsonx-ai/foundation-models](https://www.ibm.com/products/watsonx-ai/foundation-models)\n    \n\n### About IBM watsonx.ai\n\nThe AI and data platform thatâ€™s built for business.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7643177",
		"_collection_link": "https://www.postman.com/bstraehle/workspace/generative-ai-llm-rest-apis/collection/7643177-844c14d1-298b-419a-8db8-10c53d523d32?action=share&source=collection_link&creator=7643177"
	},
	"item": [
		{
			"name": "ðŸš€ Get Started",
			"item": [
				{
					"name": "identity/token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonResponse = pm.response.json();\r",
									"pm.collectionVariables.set('access_token', jsonResponse.access_token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "urn:ibm:params:oauth:grant-type:apikey",
									"type": "text"
								},
								{
									"key": "apikey",
									"value": "{{apiKey}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://iam.cloud.ibm.com/identity/token",
							"protocol": "https",
							"host": [
								"iam",
								"cloud",
								"ibm",
								"com"
							],
							"path": [
								"identity",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "text/generation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Summarize the input in one sentence, using a concise, professional tone.\\n\\nInput: A large language model (LLM) is a language model notable for its ability to achieve general-purpose language generation and understanding. LLMs acquire these abilities by learning statistical relationships from text documents during a computationally intensive self-supervised and semi-supervised training process. LLMs are artificial neural networks, the largest and most capable of which are built with a decoder-only transformer-based architecture. Some recent implementations are based on other architectures, such as recurrent neural network variants and Mamba (a state space model). \\nOutput:\",\r\n    \"parameters\": {\r\n        \"decoding_method\": \"greedy\",\r\n        \"max_new_tokens\": 500,\r\n        \"min_new_tokens\": 0,\r\n        \"stop_sequences\": [],\r\n        \"repetition_penalty\": 1\r\n    },\r\n    \"model_id\": \"ibm/granite-13b-instruct-v2\",\r\n    \"project_id\": \"{{projectId}}\",\r\n    \"moderations\": {\r\n        \"hap\": {\r\n            \"input\": {\r\n                \"enabled\": true,\r\n                \"threshold\": 0.5,\r\n                \"mask\": {\r\n                    \"remove_entity_value\": true\r\n                }\r\n            },\r\n            \"output\": {\r\n                \"enabled\": true,\r\n                \"threshold\": 0.5,\r\n                \"mask\": {\r\n                    \"remove_entity_value\": true\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ml/v1/text/generation?version=2023-05-29",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ml",
								"v1",
								"text",
								"generation"
							],
							"query": [
								{
									"key": "version",
									"value": "2023-05-29"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Summarize the input in one sentence, using a concise, professional tone.\\n\\nInput: A large language model (LLM) is a language model notable for its ability to achieve general-purpose language generation and understanding. LLMs acquire these abilities by learning statistical relationships from text documents during a computationally intensive self-supervised and semi-supervised training process. LLMs are artificial neural networks, the largest and most capable of which are built with a decoder-only transformer-based architecture. Some recent implementations are based on other architectures, such as recurrent neural network variants and Mamba (a state space model). \\nOutput:\",\r\n    \"parameters\": {\r\n        \"decoding_method\": \"greedy\",\r\n        \"max_new_tokens\": 500,\r\n        \"min_new_tokens\": 0,\r\n        \"stop_sequences\": [],\r\n        \"repetition_penalty\": 1\r\n    },\r\n    \"model_id\": \"ibm/granite-13b-instruct-v2\",\r\n    \"project_id\": \"{{projectId}}\",\r\n    \"moderations\": {\r\n        \"hap\": {\r\n            \"input\": {\r\n                \"enabled\": true,\r\n                \"threshold\": 0.5,\r\n                \"mask\": {\r\n                    \"remove_entity_value\": true\r\n                }\r\n            },\r\n            \"output\": {\r\n                \"enabled\": true,\r\n                \"threshold\": 0.5,\r\n                \"mask\": {\r\n                    \"remove_entity_value\": true\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/text/generation?version=2023-05-29",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"text",
										"generation"
									],
									"query": [
										{
											"key": "version",
											"value": "2023-05-29"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Mar 2024 19:03:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "server-timing",
									"value": "intid;desc=f4ca49324ab9b384"
								},
								{
									"key": "X-Global-Transaction-Id",
									"value": "ff5a857769f542531f5609f6425826ad"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src *.opendns.com gateway.id.swg.umbrella.com *.sse.cisco.com 'none'; script-src *.opendns.com gateway.id.swg.umbrella.com *.sse.cisco.com 'self'; connect-src *.opendns.com gateway.id.swg.umbrella.com *.sse.cisco.com 'self'; img-src *.opendns.com gateway.id.swg.umbrella.com *.sse.cisco.com 'self'; style-src *.opendns.com gateway.id.swg.umbrella.com *.sse.cisco.com 'self'; frame-ancestors 'none'; form-action *.opendns.com gateway.id.swg.umbrella.com *.sse.cisco.com 'self';"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "85fc5d4c8ffd7bc1-LAX"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Via",
									"value": "HTTP/1.1 m_proxy_lax"
								},
								{
									"key": "Via",
									"value": "HTTP/1.1 s_proxy_lax"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"ibm/granite-13b-instruct-v2\",\n    \"created_at\": \"2024-03-05T19:03:10.560Z\",\n    \"results\": [\n        {\n            \"generated_text\": \"Large language models are artificial neural networks that can achieve general-purpose language generation and understanding.\",\n            \"generated_token_count\": 19,\n            \"input_token_count\": 126,\n            \"stop_reason\": \"eos_token\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "ml",
			"item": [
				{
					"name": "v4",
					"item": [
						{
							"name": "deployments",
							"item": [
								{
									"name": "{deployment_id}",
									"item": [
										{
											"name": "predictions",
											"item": [
												{
													"name": "Execute a synchronous deployment prediction",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"input_data\": [\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id/predictions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id",
																"predictions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id",
																	"value": "<string>",
																	"description": "(Required) The `deployment_id` can be either the `deployment_id` that identifies the deployment or a `serving_name` that allows a predefined URL to be used to post a prediction."
																}
															]
														},
														"description": "Execute a synchronous prediction for the deployment with the specified identifier.\nIf a `serving_name` is used then it must match the `serving_name` that is returned in the `inference` field.\n"
													},
													"response": [
														{
															"name": "Scoring response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"input_data\": [\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id/predictions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployments",
																		":deployment_id",
																		"predictions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"predictions\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"target\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ],\n      \"targets\": [\n        [],\n        []\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"target\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ],\n      \"targets\": [\n        [],\n        []\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"input_data\": [\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id/predictions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployments",
																		":deployment_id",
																		"predictions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"input_data\": [\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id/predictions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployments",
																		":deployment_id",
																		"predictions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"input_data\": [\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id/predictions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployments",
																		":deployment_id",
																		"predictions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"input_data\": [\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"values\": [\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ],\n        [\n          {\n            \"description\": \"The record.\\n\"\n          },\n          {\n            \"description\": \"The record.\\n\"\n          }\n        ]\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id/predictions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployments",
																		":deployment_id",
																		"predictions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "deployment_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete the deployment",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments",
														":deployment_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieves the deployments of assets that belong to this space."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "<string>",
															"description": "(Required) The deployment id."
														}
													]
												},
												"description": "Delete the deployment with the specified identifier.\n"
											},
											"response": [
												{
													"name": "Deployment deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the deployment details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments",
														":deployment_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieves the deployments of assets that belong to this space."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "<string>",
															"description": "(Required) The deployment id."
														}
													]
												},
												"description": "Retrieve the deployment details with the specified identifier.\n"
											},
											"response": [
												{
													"name": "Deployment details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"space_id\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"custom\": {\n      \"nisi_1e3\": -24306468,\n      \"exercitation07\": \"ut\",\n      \"deserunt_1\": 99836971.50959668,\n      \"aliqua_89\": 41083827\n    },\n    \"asset\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"online\": {\n      \"parameters\": {}\n    },\n    \"batch\": {\n      \"parameters\": {}\n    },\n    \"deployed_asset_type\": \"model\",\n    \"status\": {\n      \"state\": \"updating\",\n      \"message\": {\n        \"level\": \"<string>\",\n        \"text\": \"<string>\"\n      },\n      \"failure\": {\n        \"trace\": \"<string>\",\n        \"errors\": [\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          }\n        ]\n      },\n      \"inference\": [\n        {\n          \"url\": \"<string>\",\n          \"sse\": false,\n          \"uses_serving_name\": false\n        },\n        {\n          \"url\": \"<string>\",\n          \"sse\": false,\n          \"uses_serving_name\": false\n        }\n      ],\n      \"serving_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scaling\": {\n        \"state\": \"in_progress\",\n        \"attempted_at\": \"<dateTime>\",\n        \"requested_replicas\": \"<integer>\",\n        \"deployed_replicas\": \"<integer>\",\n        \"message\": {\n          \"level\": \"<string>\",\n          \"text\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the deployment metadata",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments",
														":deployment_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieves the deployments of assets that belong to this space."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "deployment_id",
															"value": "<string>",
															"description": "(Required) The deployment id."
														}
													]
												},
												"description": "Update the deployment metadata.\nThe following parameters of deployment metadata are supported for the patch operation.\n\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n- `/hardware_spec`\n- `/hybrid_pipeline_hardware_specs`\n- `/asset`\n- `/online/parameters`\n\n\n\nIn case of online deployments, using PATCH operation of `/ml/v4/deployments`,\nusers can update the number of copies of an online deployment.\nUsers can specify the desired value of number of copies in `hardware_spec.num_nodes` parameter.\nAs `hardware_spec.name` or `hardware_spec.id` is mandatory for `hardware_spec` schema,\na valid value such as `XS`, `S` must be specified for `hardware_spec.name` parameter\nas part of PATCH request. Alternatively, users can also specify a valid ID of a hardware\nspecification in `hardware_spec.id` parameter. However, changes related to `hardware_spec.name`\nor `hardware_spec.id` specified in PATCH operation will not be applied for online deployments.\n<br />\nIn case of batch deployments, using PATCH operation of `/ml/v4/deployments`, users can update\nthe hardware specification so that subsequent batch deployment jobs can make use of the updated\ncompute configurations. To update the compute configuration, users must specify a valid value for\neither `hardware_spec.name` or `hardware_spec.id` of the hardware specification that suits their\nrequirement. In the batch deployment context, `hardware_spec.num_nodes` parameter is not currently supported.\n<br />\nWhen 'asset' is patched with id/rev:\n\n- Deployment with the patched id/rev is started.\n- If the deployment is asynchronous, 202 response code will be returned and one can poll the deployment status thereafter.\n- If the deployment is synchronous, 200 response code will be returned with patched deployment response.\n- If any failures, deployment will be reverted back to the previous id/rev and the failure message will be captured in 'failures' field in the response.\n\nIn the case of an online deployment, the PATCH operation with path specified as `/online/parameters` can be used to update the `serving_name`.\n\n"
											},
											"response": [
												{
													"name": "Deployment updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"space_id\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"custom\": {\n      \"nisi_1e3\": -24306468,\n      \"exercitation07\": \"ut\",\n      \"deserunt_1\": 99836971.50959668,\n      \"aliqua_89\": 41083827\n    },\n    \"asset\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"online\": {\n      \"parameters\": {}\n    },\n    \"batch\": {\n      \"parameters\": {}\n    },\n    \"deployed_asset_type\": \"model\",\n    \"status\": {\n      \"state\": \"updating\",\n      \"message\": {\n        \"level\": \"<string>\",\n        \"text\": \"<string>\"\n      },\n      \"failure\": {\n        \"trace\": \"<string>\",\n        \"errors\": [\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          }\n        ]\n      },\n      \"inference\": [\n        {\n          \"url\": \"<string>\",\n          \"sse\": false,\n          \"uses_serving_name\": false\n        },\n        {\n          \"url\": \"<string>\",\n          \"sse\": false,\n          \"uses_serving_name\": false\n        }\n      ],\n      \"serving_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scaling\": {\n        \"state\": \"in_progress\",\n        \"attempted_at\": \"<dateTime>\",\n        \"requested_replicas\": \"<integer>\",\n        \"deployed_replicas\": \"<integer>\",\n        \"message\": {\n          \"level\": \"<string>\",\n          \"text\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
												},
												{
													"name": "Deployment accepted",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"space_id\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"custom\": {\n      \"nisi_1e3\": -24306468,\n      \"exercitation07\": \"ut\",\n      \"deserunt_1\": 99836971.50959668,\n      \"aliqua_89\": 41083827\n    },\n    \"asset\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"online\": {\n      \"parameters\": {}\n    },\n    \"batch\": {\n      \"parameters\": {}\n    },\n    \"deployed_asset_type\": \"model\",\n    \"status\": {\n      \"state\": \"updating\",\n      \"message\": {\n        \"level\": \"<string>\",\n        \"text\": \"<string>\"\n      },\n      \"failure\": {\n        \"trace\": \"<string>\",\n        \"errors\": [\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          }\n        ]\n      },\n      \"inference\": [\n        {\n          \"url\": \"<string>\",\n          \"sse\": false,\n          \"uses_serving_name\": false\n        },\n        {\n          \"url\": \"<string>\",\n          \"sse\": false,\n          \"uses_serving_name\": false\n        }\n      ],\n      \"serving_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scaling\": {\n        \"state\": \"in_progress\",\n        \"attempted_at\": \"<dateTime>\",\n        \"requested_replicas\": \"<integer>\",\n        \"deployed_replicas\": \"<integer>\",\n        \"message\": {\n          \"level\": \"<string>\",\n          \"text\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployments/:deployment_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieves the deployments of assets that belong to this space."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new WML deployment",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"space_id\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom\": {\n    \"exercitation_b3d\": -52996862,\n    \"commodo7\": \"sunt aute consectetur\"\n  },\n  \"asset\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"online\": {\n    \"parameters\": {}\n  },\n  \"batch\": {\n    \"parameters\": {}\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/deployments?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"deployments"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new deployment, the parameters specifying the deployment type are `online` and `batch`.\nThese parameters are mutually exclusive, specify only one of these when creating a deployment.\n\nUse `hybrid_pipeline_hardware_specs` only when creating a `batch` deployment job of a hybrid pipeline\nin order to specify compute configuration for each pipeline node. For all other `batch` deployment\ncases use `hardware_spec` to specify compute configuration. The `hybrid_pipeline_hardware_specs` and\n`hardware_spec` are mutually exclusive, specify only one of these when creating a deployment.\n\nFor `batch` deployments, `hardware_spec.num_nodes` parameter is not currently supported.\n\nFor `online` deployments, `hardware_spec` cannot be specified at the time of creation,\n`hardware_spec.num_nodes` parameter is not supported as part of\n`POST /ml/v4/deployments` API request, but it can be updated using `PATCH /ml/v4/deployments/<deployment id>`.\n\nFor `online` deployments, `serving_name` can be provided in\n`online.parameters.\nThe serving name can have the characters `[a-z,0-9,_]` and must not be more than 36 characters.\nThe `serving_name` can be used in the prediction URL in place of the `deployment_id`.\n\nSee the documentation [supported frameworks](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/pm_service_supported_frameworks.html?context=cpdaas&audience=wdp)\nfor details about which frameworks can be used in a deployment.\n"
									},
									"response": [
										{
											"name": "Deployment created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"space_id\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom\": {\n    \"exercitation_b3d\": -52996862,\n    \"commodo7\": \"sunt aute consectetur\"\n  },\n  \"asset\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"online\": {\n    \"parameters\": {}\n  },\n  \"batch\": {\n    \"parameters\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "Location of the newly created resource (deployment).",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"space_id\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"custom\": {\n      \"nisi_1e3\": -24306468,\n      \"exercitation07\": \"ut\",\n      \"deserunt_1\": 99836971.50959668,\n      \"aliqua_89\": 41083827\n    },\n    \"asset\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"online\": {\n      \"parameters\": {}\n    },\n    \"batch\": {\n      \"parameters\": {}\n    },\n    \"deployed_asset_type\": \"model\",\n    \"status\": {\n      \"state\": \"updating\",\n      \"message\": {\n        \"level\": \"<string>\",\n        \"text\": \"<string>\"\n      },\n      \"failure\": {\n        \"trace\": \"<string>\",\n        \"errors\": [\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          }\n        ]\n      },\n      \"inference\": [\n        {\n          \"url\": \"<string>\",\n          \"sse\": false,\n          \"uses_serving_name\": false\n        },\n        {\n          \"url\": \"<string>\",\n          \"sse\": false,\n          \"uses_serving_name\": false\n        }\n      ],\n      \"serving_urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scaling\": {\n        \"state\": \"in_progress\",\n        \"attempted_at\": \"<dateTime>\",\n        \"requested_replicas\": \"<integer>\",\n        \"deployed_replicas\": \"<integer>\",\n        \"message\": {\n          \"level\": \"<string>\",\n          \"text\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"space_id\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom\": {\n    \"exercitation_b3d\": -52996862,\n    \"commodo7\": \"sunt aute consectetur\"\n  },\n  \"asset\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"online\": {\n    \"parameters\": {}\n  },\n  \"batch\": {\n    \"parameters\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"space_id\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom\": {\n    \"exercitation_b3d\": -52996862,\n    \"commodo7\": \"sunt aute consectetur\"\n  },\n  \"asset\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"online\": {\n    \"parameters\": {}\n  },\n  \"batch\": {\n    \"parameters\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"space_id\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom\": {\n    \"exercitation_b3d\": -52996862,\n    \"commodo7\": \"sunt aute consectetur\"\n  },\n  \"asset\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"online\": {\n    \"parameters\": {}\n  },\n  \"batch\": {\n    \"parameters\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"space_id\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"custom\": {\n    \"exercitation_b3d\": -52996862,\n    \"commodo7\": \"sunt aute consectetur\"\n  },\n  \"asset\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"online\": {\n    \"parameters\": {}\n  },\n  \"batch\": {\n    \"parameters\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the deployments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/deployments?space_id=<string>&serving_name=<string>&tag.value=<string>&asset_id=<string>&name=<string>&type=<string>&state=<string>&stats=<boolean>&conflict=false&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"deployments"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "Retrieves the deployments that belong to this space."
												},
												{
													"key": "serving_name",
													"value": "<string>",
													"description": "Retrieves the deployment, if any, that contains this `serving_name`."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Retrieves only the resources with the given tag value."
												},
												{
													"key": "asset_id",
													"value": "<string>",
													"description": "Retrieves only the resources with the given asset_id,\nasset_id would be either model_id or function_id.\n"
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Retrieves only the resources with the given name."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Retrieves the resources filtered with the given type. Allowed values are `model`, `function`, `py_script` and `do`.\n"
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`."
												},
												{
													"key": "stats",
													"value": "<boolean>",
													"description": "Returns stats about deployments within a space or across spaces if it is set to true. This query parameter cannot be combined with any other except for 'space_id'."
												},
												{
													"key": "conflict",
													"value": "false",
													"description": "Returns whether serving_name is available for use or not. This query parameter cannot be combined with any other except for 'serving_name'."
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the list of deployments for the specified space.\n"
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?space_id=<string>&serving_name=<string>&tag.value=<string>&asset_id=<string>&name=<string>&type=<string>&state=<string>&stats=<boolean>&conflict=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "Retrieves the deployments that belong to this space."
														},
														{
															"key": "serving_name",
															"value": "<string>",
															"description": "Retrieves the deployment, if any, that contains this `serving_name`."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the resources with the given tag value."
														},
														{
															"key": "asset_id",
															"value": "<string>",
															"description": "Retrieves only the resources with the given asset_id,\nasset_id would be either model_id or function_id.\n"
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "Retrieves only the resources with the given name."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Retrieves the resources filtered with the given type. Allowed values are `model`, `function`, `py_script` and `do`.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`."
														},
														{
															"key": "stats",
															"value": "<boolean>",
															"description": "Returns stats about deployments within a space or across spaces if it is set to true. This query parameter cannot be combined with any other except for 'space_id'."
														},
														{
															"key": "conflict",
															"value": "false",
															"description": "Returns whether serving_name is available for use or not. This query parameter cannot be combined with any other except for 'serving_name'."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"space_id\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"custom\": {\n          \"tempor92\": -30200460,\n          \"eu9f\": \"Duis dolore\"\n        },\n        \"asset\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ],\n        \"online\": {\n          \"parameters\": {}\n        },\n        \"batch\": {\n          \"parameters\": {}\n        },\n        \"deployed_asset_type\": \"do\",\n        \"status\": {\n          \"state\": \"updating\",\n          \"message\": {\n            \"level\": \"<string>\",\n            \"text\": \"<string>\"\n          },\n          \"failure\": {\n            \"trace\": \"<string>\",\n            \"errors\": [\n              {\n                \"code\": \"<string>\",\n                \"message\": \"<string>\",\n                \"more_info\": \"<string>\"\n              },\n              {\n                \"code\": \"<string>\",\n                \"message\": \"<string>\",\n                \"more_info\": \"<string>\"\n              }\n            ]\n          },\n          \"inference\": [\n            {\n              \"url\": \"<string>\",\n              \"sse\": false,\n              \"uses_serving_name\": false\n            },\n            {\n              \"url\": \"<string>\",\n              \"sse\": false,\n              \"uses_serving_name\": false\n            }\n          ],\n          \"serving_urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scaling\": {\n            \"state\": \"success\",\n            \"attempted_at\": \"<dateTime>\",\n            \"requested_replicas\": \"<integer>\",\n            \"deployed_replicas\": \"<integer>\",\n            \"message\": {\n              \"level\": \"<string>\",\n              \"text\": \"<string>\"\n            }\n          }\n        }\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"space_id\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"custom\": {\n          \"cupidatatd\": false,\n          \"Lorem_5f_\": false,\n          \"cillum_fb6\": 36853582.8334437\n        },\n        \"asset\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ],\n        \"online\": {\n          \"parameters\": {}\n        },\n        \"batch\": {\n          \"parameters\": {}\n        },\n        \"deployed_asset_type\": \"function\",\n        \"status\": {\n          \"state\": \"failed\",\n          \"message\": {\n            \"level\": \"<string>\",\n            \"text\": \"<string>\"\n          },\n          \"failure\": {\n            \"trace\": \"<string>\",\n            \"errors\": [\n              {\n                \"code\": \"<string>\",\n                \"message\": \"<string>\",\n                \"more_info\": \"<string>\"\n              },\n              {\n                \"code\": \"<string>\",\n                \"message\": \"<string>\",\n                \"more_info\": \"<string>\"\n              }\n            ]\n          },\n          \"inference\": [\n            {\n              \"url\": \"<string>\",\n              \"sse\": false,\n              \"uses_serving_name\": false\n            },\n            {\n              \"url\": \"<string>\",\n              \"sse\": false,\n              \"uses_serving_name\": false\n            }\n          ],\n          \"serving_urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"scaling\": {\n            \"state\": \"success\",\n            \"attempted_at\": \"<dateTime>\",\n            \"requested_replicas\": \"<integer>\",\n            \"deployed_replicas\": \"<integer>\",\n            \"message\": {\n              \"level\": \"<string>\",\n              \"text\": \"<string>\"\n            }\n          }\n        }\n      }\n    }\n  ],\n  \"system\": {\n    \"system\": {\n      \"warnings\": [\n        {\n          \"message\": \"<string>\",\n          \"id\": \"<string>\",\n          \"additional_properties\": {}\n        },\n        {\n          \"message\": \"<string>\",\n          \"id\": \"<string>\",\n          \"additional_properties\": {}\n        }\n      ],\n      \"stats\": [\n        {\n          \"space_id\": \"<string>\",\n          \"total_count\": \"<number>\",\n          \"online_count\": \"<number>\",\n          \"batch_count\": \"<number>\"\n        },\n        {\n          \"space_id\": \"<string>\",\n          \"total_count\": \"<number>\",\n          \"online_count\": \"<number>\",\n          \"batch_count\": \"<number>\"\n        }\n      ]\n    }\n  }\n}"
										},
										{
											"name": "serving_name is available for use. Returned when serving_name and conflict query parameters are used.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?space_id=<string>&serving_name=<string>&tag.value=<string>&asset_id=<string>&name=<string>&type=<string>&state=<string>&stats=<boolean>&conflict=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "Retrieves the deployments that belong to this space."
														},
														{
															"key": "serving_name",
															"value": "<string>",
															"description": "Retrieves the deployment, if any, that contains this `serving_name`."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the resources with the given tag value."
														},
														{
															"key": "asset_id",
															"value": "<string>",
															"description": "Retrieves only the resources with the given asset_id,\nasset_id would be either model_id or function_id.\n"
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "Retrieves only the resources with the given name."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Retrieves the resources filtered with the given type. Allowed values are `model`, `function`, `py_script` and `do`.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`."
														},
														{
															"key": "stats",
															"value": "<boolean>",
															"description": "Returns stats about deployments within a space or across spaces if it is set to true. This query parameter cannot be combined with any other except for 'space_id'."
														},
														{
															"key": "conflict",
															"value": "false",
															"description": "Returns whether serving_name is available for use or not. This query parameter cannot be combined with any other except for 'serving_name'."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?space_id=<string>&serving_name=<string>&tag.value=<string>&asset_id=<string>&name=<string>&type=<string>&state=<string>&stats=<boolean>&conflict=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "Retrieves the deployments that belong to this space."
														},
														{
															"key": "serving_name",
															"value": "<string>",
															"description": "Retrieves the deployment, if any, that contains this `serving_name`."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the resources with the given tag value."
														},
														{
															"key": "asset_id",
															"value": "<string>",
															"description": "Retrieves only the resources with the given asset_id,\nasset_id would be either model_id or function_id.\n"
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "Retrieves only the resources with the given name."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Retrieves the resources filtered with the given type. Allowed values are `model`, `function`, `py_script` and `do`.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`."
														},
														{
															"key": "stats",
															"value": "<boolean>",
															"description": "Returns stats about deployments within a space or across spaces if it is set to true. This query parameter cannot be combined with any other except for 'space_id'."
														},
														{
															"key": "conflict",
															"value": "false",
															"description": "Returns whether serving_name is available for use or not. This query parameter cannot be combined with any other except for 'serving_name'."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?space_id=<string>&serving_name=<string>&tag.value=<string>&asset_id=<string>&name=<string>&type=<string>&state=<string>&stats=<boolean>&conflict=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "Retrieves the deployments that belong to this space."
														},
														{
															"key": "serving_name",
															"value": "<string>",
															"description": "Retrieves the deployment, if any, that contains this `serving_name`."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the resources with the given tag value."
														},
														{
															"key": "asset_id",
															"value": "<string>",
															"description": "Retrieves only the resources with the given asset_id,\nasset_id would be either model_id or function_id.\n"
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "Retrieves only the resources with the given name."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Retrieves the resources filtered with the given type. Allowed values are `model`, `function`, `py_script` and `do`.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`."
														},
														{
															"key": "stats",
															"value": "<boolean>",
															"description": "Returns stats about deployments within a space or across spaces if it is set to true. This query parameter cannot be combined with any other except for 'space_id'."
														},
														{
															"key": "conflict",
															"value": "false",
															"description": "Returns whether serving_name is available for use or not. This query parameter cannot be combined with any other except for 'serving_name'."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?space_id=<string>&serving_name=<string>&tag.value=<string>&asset_id=<string>&name=<string>&type=<string>&state=<string>&stats=<boolean>&conflict=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "Retrieves the deployments that belong to this space."
														},
														{
															"key": "serving_name",
															"value": "<string>",
															"description": "Retrieves the deployment, if any, that contains this `serving_name`."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the resources with the given tag value."
														},
														{
															"key": "asset_id",
															"value": "<string>",
															"description": "Retrieves only the resources with the given asset_id,\nasset_id would be either model_id or function_id.\n"
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "Retrieves only the resources with the given name."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Retrieves the resources filtered with the given type. Allowed values are `model`, `function`, `py_script` and `do`.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`."
														},
														{
															"key": "stats",
															"value": "<boolean>",
															"description": "Returns stats about deployments within a space or across spaces if it is set to true. This query parameter cannot be combined with any other except for 'space_id'."
														},
														{
															"key": "conflict",
															"value": "false",
															"description": "Returns whether serving_name is available for use or not. This query parameter cannot be combined with any other except for 'serving_name'."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?space_id=<string>&serving_name=<string>&tag.value=<string>&asset_id=<string>&name=<string>&type=<string>&state=<string>&stats=<boolean>&conflict=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "Retrieves the deployments that belong to this space."
														},
														{
															"key": "serving_name",
															"value": "<string>",
															"description": "Retrieves the deployment, if any, that contains this `serving_name`."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the resources with the given tag value."
														},
														{
															"key": "asset_id",
															"value": "<string>",
															"description": "Retrieves only the resources with the given asset_id,\nasset_id would be either model_id or function_id.\n"
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "Retrieves only the resources with the given name."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Retrieves the resources filtered with the given type. Allowed values are `model`, `function`, `py_script` and `do`.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`."
														},
														{
															"key": "stats",
															"value": "<boolean>",
															"description": "Returns stats about deployments within a space or across spaces if it is set to true. This query parameter cannot be combined with any other except for 'space_id'."
														},
														{
															"key": "conflict",
															"value": "false",
															"description": "Returns whether serving_name is available for use or not. This query parameter cannot be combined with any other except for 'serving_name'."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Returned when serving_name and conflict query parameters are used. The response body will contain the reason.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployments?space_id=<string>&serving_name=<string>&tag.value=<string>&asset_id=<string>&name=<string>&type=<string>&state=<string>&stats=<boolean>&conflict=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "Retrieves the deployments that belong to this space."
														},
														{
															"key": "serving_name",
															"value": "<string>",
															"description": "Retrieves the deployment, if any, that contains this `serving_name`."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the resources with the given tag value."
														},
														{
															"key": "asset_id",
															"value": "<string>",
															"description": "Retrieves only the resources with the given asset_id,\nasset_id would be either model_id or function_id.\n"
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "Retrieves only the resources with the given name."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Retrieves the resources filtered with the given type. Allowed values are `model`, `function`, `py_script` and `do`.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`."
														},
														{
															"key": "stats",
															"value": "<boolean>",
															"description": "Returns stats about deployments within a space or across spaces if it is set to true. This query parameter cannot be combined with any other except for 'space_id'."
														},
														{
															"key": "conflict",
															"value": "false",
															"description": "Returns whether serving_name is available for use or not. This query parameter cannot be combined with any other except for 'serving_name'."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "deployment_jobs",
							"item": [
								{
									"name": "{job_id}",
									"item": [
										{
											"name": "Cancel the deployment job",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&hard_delete=<boolean>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs",
														":job_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Cancel the deployment job that belong to this space.\n"
														},
														{
															"key": "hard_delete",
															"value": "<boolean>",
															"description": "Set to true in order to also delete the job metadata information.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "job_id",
															"value": "<string>",
															"description": "(Required) The id of the job.\n"
														}
													]
												},
												"description": "Cancel the specified deployment job.\n"
											},
											"response": [
												{
													"name": "Success.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&hard_delete=<boolean>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Cancel the deployment job that belong to this space.\n"
																},
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&hard_delete=<boolean>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Cancel the deployment job that belong to this space.\n"
																},
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&hard_delete=<boolean>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Cancel the deployment job that belong to this space.\n"
																},
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&hard_delete=<boolean>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Cancel the deployment job that belong to this space.\n"
																},
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&hard_delete=<boolean>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Cancel the deployment job that belong to this space.\n"
																},
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the deployment job",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&include=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs",
														":job_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieve the deployment job that belong to this space.\n"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as\ncomma separated values as output response fields. Retrieves all the fields if not mentioned.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "job_id",
															"value": "<string>",
															"description": "(Required) The id of the job.\n"
														}
													]
												},
												"description": "Retrieve the deployment job. The predicted data bound to this job_id is going to\nbe kept around for a limited time based on the service configuration.\n"
											},
											"response": [
												{
													"name": "Jobs response.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&include=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieve the deployment job that belong to this space.\n"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as\ncomma separated values as output response fields. Retrieves all the fields if not mentioned.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"deployment\": {\n      \"id\": \"<string>\"\n    },\n    \"custom\": {},\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"scoring\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"type\": \"data_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"qui_58_\": \"<string>\",\n            \"qui5\": \"<string>\",\n            \"enim0e8\": \"<string>\",\n            \"nulla8a0\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"aute6\": \"<string>\",\n            \"sint4\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        }\n      ],\n      \"output_data_reference\": {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"deserunt72\": \"<string>\",\n          \"mollit9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"evaluations\": [\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"environment_variables\": {\n        \"veniam_131\": \"<string>\",\n        \"adipisicingc90\": \"<string>\"\n      },\n      \"predictions\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        }\n      ],\n      \"status\": {\n        \"state\": \"completed\",\n        \"running_at\": \"<dateTime>\",\n        \"completed_at\": \"<dateTime>\",\n        \"message\": {\n          \"level\": \"<string>\",\n          \"text\": \"<string>\"\n        },\n        \"failure\": {\n          \"trace\": \"<string>\",\n          \"errors\": [\n            {\n              \"code\": \"<string>\",\n              \"message\": \"<string>\",\n              \"more_info\": \"<string>\"\n            },\n            {\n              \"code\": \"<string>\",\n              \"message\": \"<string>\",\n              \"more_info\": \"<string>\"\n            }\n          ]\n        }\n      }\n    },\n    \"decision_optimization\": {\n      \"solve_parameters\": {},\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"voluptate_5b1\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"container\",\n          \"location\": {\n            \"veniam_f0\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ],\n      \"output_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"output_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"estfb\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"irure1\": \"<string>\",\n            \"do__0b\": \"<string>\",\n            \"in_d\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ],\n      \"status\": {\n        \"state\": \"completed\",\n        \"running_at\": \"<dateTime>\",\n        \"completed_at\": \"<dateTime>\",\n        \"message\": {\n          \"level\": \"<string>\",\n          \"text\": \"<string>\"\n        },\n        \"failure\": {\n          \"trace\": \"<string>\",\n          \"errors\": [\n            {\n              \"code\": \"<string>\",\n              \"message\": \"<string>\",\n              \"more_info\": \"<string>\"\n            },\n            {\n              \"code\": \"<string>\",\n              \"message\": \"<string>\",\n              \"more_info\": \"<string>\"\n            }\n          ]\n        }\n      },\n      \"solve_state\": {\n        \"details\": {},\n        \"solve_status\": \"unbounded_solution\",\n        \"interruption_status\": \"kill\",\n        \"latest_engine_activity\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"platform_job\": {\n      \"job_id\": \"<string>\",\n      \"run_id\": \"<string>\"\n    }\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&include=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieve the deployment job that belong to this space.\n"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as\ncomma separated values as output response fields. Retrieves all the fields if not mentioned.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&include=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieve the deployment job that belong to this space.\n"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as\ncomma separated values as output response fields. Retrieves all the fields if not mentioned.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&include=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieve the deployment job that belong to this space.\n"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as\ncomma separated values as output response fields. Retrieves all the fields if not mentioned.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_jobs/:job_id?space_id=<string>&include=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_jobs",
																":job_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) Retrieve the deployment job that belong to this space.\n"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as\ncomma separated values as output response fields. Retrieves all the fields if not mentioned.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the deployment jobs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/deployment_jobs?space_id=<string>&tag.value=<string>&state=<string>&deployment_id=<string>&include=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"deployment_jobs"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "(Required) Retrieves the deployment jobs that belong to this space.\n"
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Retrieves only the jobs with these tags (comma separated).\n"
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Filter based on on the deployment job state: queued, running, completed, failed etc.\n"
												},
												{
													"key": "deployment_id",
													"value": "<string>",
													"description": "Filter based on the deployment_id.\n"
												},
												{
													"key": "include",
													"value": "<string>",
													"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as comma\nseparated values as output response fields. Retrieves all the fields if not mentioned.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the status of the current jobs. The system will apply a max limit of jobs retained by the system\nas we cannot accumulate an infinite number of jobs. Only most recent 300 jobs (system configurable)\nwill be preserved. Older jobs will be purged by the system.\n"
									},
									"response": [
										{
											"name": "Jobs response.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?space_id=<string>&tag.value=<string>&state=<string>&deployment_id=<string>&include=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieves the deployment jobs that belong to this space.\n"
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the jobs with these tags (comma separated).\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the deployment job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "deployment_id",
															"value": "<string>",
															"description": "Filter based on the deployment_id.\n"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as comma\nseparated values as output response fields. Retrieves all the fields if not mentioned.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"deployment\": {\n          \"id\": \"<string>\"\n        },\n        \"custom\": {},\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ],\n        \"scoring\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"type\": \"url\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"sinta5\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            },\n            {\n              \"type\": \"connection_asset\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"labore_cc8\": \"<string>\",\n                \"officia_405\": \"<string>\",\n                \"veniam_2\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            }\n          ],\n          \"output_data_reference\": {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"in_6\": \"<string>\",\n              \"consequata\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"evaluations\": [\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"environment_variables\": {\n            \"mollit4c_\": \"<string>\"\n          },\n          \"predictions\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            }\n          ],\n          \"status\": {\n            \"state\": \"failed\",\n            \"running_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"message\": {\n              \"level\": \"<string>\",\n              \"text\": \"<string>\"\n            },\n            \"failure\": {\n              \"trace\": \"<string>\",\n              \"errors\": [\n                {\n                  \"code\": \"<string>\",\n                  \"message\": \"<string>\",\n                  \"more_info\": \"<string>\"\n                },\n                {\n                  \"code\": \"<string>\",\n                  \"message\": \"<string>\",\n                  \"more_info\": \"<string>\"\n                }\n              ]\n            }\n          }\n        },\n        \"decision_optimization\": {\n          \"solve_parameters\": {},\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"container\",\n              \"location\": {\n                \"magnaa_\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"data_asset\",\n              \"location\": {\n                \"et_d2\": \"<string>\",\n                \"consequat_90c\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ],\n          \"output_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"output_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"connection_asset\",\n              \"location\": {\n                \"cillum_29\": \"<string>\",\n                \"ullamcoc\": \"<string>\",\n                \"ea_9b\": \"<string>\",\n                \"ad_74\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"url\",\n              \"location\": {\n                \"anim6\": \"<string>\",\n                \"ipsum__9\": \"<string>\",\n                \"sed6a\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ],\n          \"status\": {\n            \"state\": \"completed\",\n            \"running_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"message\": {\n              \"level\": \"<string>\",\n              \"text\": \"<string>\"\n            },\n            \"failure\": {\n              \"trace\": \"<string>\",\n              \"errors\": [\n                {\n                  \"code\": \"<string>\",\n                  \"message\": \"<string>\",\n                  \"more_info\": \"<string>\"\n                },\n                {\n                  \"code\": \"<string>\",\n                  \"message\": \"<string>\",\n                  \"more_info\": \"<string>\"\n                }\n              ]\n            }\n          },\n          \"solve_state\": {\n            \"details\": {},\n            \"solve_status\": \"unknown\",\n            \"interruption_status\": \"engine_limit\",\n            \"latest_engine_activity\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"platform_job\": {\n          \"job_id\": \"<string>\",\n          \"run_id\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"deployment\": {\n          \"id\": \"<string>\"\n        },\n        \"custom\": {},\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ],\n        \"scoring\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"type\": \"data_asset\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"exdc\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            },\n            {\n              \"type\": \"container\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"laborum_c3\": \"<string>\",\n                \"adipisicing_5\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            }\n          ],\n          \"output_data_reference\": {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"ut2\": \"<string>\",\n              \"fugiat8\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"evaluations\": [\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"environment_variables\": {\n            \"labore1d8\": \"<string>\",\n            \"ipsuma\": \"<string>\"\n          },\n          \"predictions\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            }\n          ],\n          \"status\": {\n            \"state\": \"running\",\n            \"running_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"message\": {\n              \"level\": \"<string>\",\n              \"text\": \"<string>\"\n            },\n            \"failure\": {\n              \"trace\": \"<string>\",\n              \"errors\": [\n                {\n                  \"code\": \"<string>\",\n                  \"message\": \"<string>\",\n                  \"more_info\": \"<string>\"\n                },\n                {\n                  \"code\": \"<string>\",\n                  \"message\": \"<string>\",\n                  \"more_info\": \"<string>\"\n                }\n              ]\n            }\n          }\n        },\n        \"decision_optimization\": {\n          \"solve_parameters\": {},\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"connection_asset\",\n              \"location\": {\n                \"magna__01\": \"<string>\",\n                \"sint_4c\": \"<string>\",\n                \"ipsum_a\": \"<string>\",\n                \"dolore_a28\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"url\",\n              \"location\": {\n                \"in0\": \"<string>\",\n                \"sit_9b_\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ],\n          \"output_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"output_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"url\",\n              \"location\": {\n                \"proident_e\": \"<string>\",\n                \"exercitation_706\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"data_asset\",\n              \"location\": {\n                \"dolor_1c\": \"<string>\",\n                \"dolor_41b\": \"<string>\",\n                \"commodo24b\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ],\n          \"status\": {\n            \"state\": \"queued\",\n            \"running_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"message\": {\n              \"level\": \"<string>\",\n              \"text\": \"<string>\"\n            },\n            \"failure\": {\n              \"trace\": \"<string>\",\n              \"errors\": [\n                {\n                  \"code\": \"<string>\",\n                  \"message\": \"<string>\",\n                  \"more_info\": \"<string>\"\n                },\n                {\n                  \"code\": \"<string>\",\n                  \"message\": \"<string>\",\n                  \"more_info\": \"<string>\"\n                }\n              ]\n            }\n          },\n          \"solve_state\": {\n            \"details\": {},\n            \"solve_status\": \"unbounded_solution\",\n            \"interruption_status\": \"engine_limit\",\n            \"latest_engine_activity\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"platform_job\": {\n          \"job_id\": \"<string>\",\n          \"run_id\": \"<string>\"\n        }\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?space_id=<string>&tag.value=<string>&state=<string>&deployment_id=<string>&include=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieves the deployment jobs that belong to this space.\n"
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the jobs with these tags (comma separated).\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the deployment job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "deployment_id",
															"value": "<string>",
															"description": "Filter based on the deployment_id.\n"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as comma\nseparated values as output response fields. Retrieves all the fields if not mentioned.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?space_id=<string>&tag.value=<string>&state=<string>&deployment_id=<string>&include=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieves the deployment jobs that belong to this space.\n"
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the jobs with these tags (comma separated).\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the deployment job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "deployment_id",
															"value": "<string>",
															"description": "Filter based on the deployment_id.\n"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as comma\nseparated values as output response fields. Retrieves all the fields if not mentioned.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?space_id=<string>&tag.value=<string>&state=<string>&deployment_id=<string>&include=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieves the deployment jobs that belong to this space.\n"
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the jobs with these tags (comma separated).\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the deployment job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "deployment_id",
															"value": "<string>",
															"description": "Filter based on the deployment_id.\n"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as comma\nseparated values as output response fields. Retrieves all the fields if not mentioned.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?space_id=<string>&tag.value=<string>&state=<string>&deployment_id=<string>&include=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) Retrieves the deployment jobs that belong to this space.\n"
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Retrieves only the jobs with these tags (comma separated).\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the deployment job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "deployment_id",
															"value": "<string>",
															"description": "Filter based on the deployment_id.\n"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "Retrieves only fields from `decision_optimization` and `scoring` section mentioned as comma\nseparated values as output response fields. Retrieves all the fields if not mentioned.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Start an asynchronous deployment job",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/deployment_jobs?retention=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"deployment_jobs"
											],
											"query": [
												{
													"key": "retention",
													"value": "<string>",
													"description": "Defines number of days to retain the job meta. Job meta will be auto deleted after that.\nValue '-1' sets the meta to be never auto deleted. accepted values are positive integer and '-1'.\nThe default value if the parameter is not passed is '30' days.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Start a deployment job asynchronously. This can perform batch scoring, streaming, or other types of batch\noperations, such as solving a Decision Optimization problem.\nDepending on the `version` date passed, the `platform_jobs` section in the response may or may not be populated.\nUse the GET call to retrieve the deployment job, this GET call will eventually populate the `platform_jobs` section.\nRefer to the `version date` description for more details.\n"
									},
									"response": [
										{
											"name": "Accepted",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?retention=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "retention",
															"value": "<string>",
															"description": "Defines number of days to retain the job meta. Job meta will be auto deleted after that.\nValue '-1' sets the meta to be never auto deleted. accepted values are positive integer and '-1'.\nThe default value if the parameter is not passed is '30' days.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "Location of the job resource. Example: `{base_url}/ml/v4/deployment_jobs/53dc4cf1-252f-424b-b52d-5cdd9814987f`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"deployment\": {\n      \"id\": \"<string>\"\n    },\n    \"custom\": {},\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"scoring\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"type\": \"data_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"qui_58_\": \"<string>\",\n            \"qui5\": \"<string>\",\n            \"enim0e8\": \"<string>\",\n            \"nulla8a0\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"aute6\": \"<string>\",\n            \"sint4\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        }\n      ],\n      \"output_data_reference\": {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"deserunt72\": \"<string>\",\n          \"mollit9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"evaluations\": [\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"environment_variables\": {\n        \"veniam_131\": \"<string>\",\n        \"adipisicingc90\": \"<string>\"\n      },\n      \"predictions\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        }\n      ],\n      \"status\": {\n        \"state\": \"completed\",\n        \"running_at\": \"<dateTime>\",\n        \"completed_at\": \"<dateTime>\",\n        \"message\": {\n          \"level\": \"<string>\",\n          \"text\": \"<string>\"\n        },\n        \"failure\": {\n          \"trace\": \"<string>\",\n          \"errors\": [\n            {\n              \"code\": \"<string>\",\n              \"message\": \"<string>\",\n              \"more_info\": \"<string>\"\n            },\n            {\n              \"code\": \"<string>\",\n              \"message\": \"<string>\",\n              \"more_info\": \"<string>\"\n            }\n          ]\n        }\n      }\n    },\n    \"decision_optimization\": {\n      \"solve_parameters\": {},\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"voluptate_5b1\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"container\",\n          \"location\": {\n            \"veniam_f0\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ],\n      \"output_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"output_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"estfb\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"irure1\": \"<string>\",\n            \"do__0b\": \"<string>\",\n            \"in_d\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ],\n      \"status\": {\n        \"state\": \"completed\",\n        \"running_at\": \"<dateTime>\",\n        \"completed_at\": \"<dateTime>\",\n        \"message\": {\n          \"level\": \"<string>\",\n          \"text\": \"<string>\"\n        },\n        \"failure\": {\n          \"trace\": \"<string>\",\n          \"errors\": [\n            {\n              \"code\": \"<string>\",\n              \"message\": \"<string>\",\n              \"more_info\": \"<string>\"\n            },\n            {\n              \"code\": \"<string>\",\n              \"message\": \"<string>\",\n              \"more_info\": \"<string>\"\n            }\n          ]\n        }\n      },\n      \"solve_state\": {\n        \"details\": {},\n        \"solve_status\": \"unbounded_solution\",\n        \"interruption_status\": \"kill\",\n        \"latest_engine_activity\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    \"platform_job\": {\n      \"job_id\": \"<string>\",\n      \"run_id\": \"<string>\"\n    }\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?retention=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "retention",
															"value": "<string>",
															"description": "Defines number of days to retain the job meta. Job meta will be auto deleted after that.\nValue '-1' sets the meta to be never auto deleted. accepted values are positive integer and '-1'.\nThe default value if the parameter is not passed is '30' days.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?retention=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "retention",
															"value": "<string>",
															"description": "Defines number of days to retain the job meta. Job meta will be auto deleted after that.\nValue '-1' sets the meta to be never auto deleted. accepted values are positive integer and '-1'.\nThe default value if the parameter is not passed is '30' days.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?retention=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "retention",
															"value": "<string>",
															"description": "Defines number of days to retain the job meta. Job meta will be auto deleted after that.\nValue '-1' sets the meta to be never auto deleted. accepted values are positive integer and '-1'.\nThe default value if the parameter is not passed is '30' days.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_jobs?retention=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_jobs"
													],
													"query": [
														{
															"key": "retention",
															"value": "<string>",
															"description": "Defines number of days to retain the job meta. Job meta will be auto deleted after that.\nValue '-1' sets the meta to be never auto deleted. accepted values are positive integer and '-1'.\nThe default value if the parameter is not passed is '30' days.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "deployment_job_definitions",
							"item": [
								{
									"name": "{job_definition_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "Create a new deployment job definition revision",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"space_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id",
																"revisions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id",
																	"value": "<string>",
																	"description": "(Required) Deployment job definition identifier.\n"
																}
															]
														},
														"description": "Create a new deployment job definition revision.\nThe current metadata and content for\njob_definition_id will be taken and a new revision created.\n"
													},
													"response": [
														{
															"name": "Deployment job definition revision created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new created resource (deployment job definition artifact),\ne.g. `/ml/v4/459afef1-252f-424b-b52d-5cdd98128fa3/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"deployment\": {\n      \"id\": \"<string>\"\n    },\n    \"custom\": {},\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"scoring\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"aliqua_b8d\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"commodoc7_\": \"<string>\",\n            \"in8b\": \"<string>\",\n            \"nostrud36\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        }\n      ],\n      \"output_data_reference\": {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"dolorb29\": \"<string>\",\n          \"eab6\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"evaluations\": [\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"environment_variables\": {\n        \"id_2\": \"<string>\",\n        \"cillum_a\": \"<string>\"\n      }\n    },\n    \"decision_optimization\": {\n      \"solve_parameters\": {},\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"incididunt_b45\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"url\",\n          \"location\": {\n            \"ut1b\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ],\n      \"output_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"output_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"container\",\n          \"location\": {\n            \"occaecat_bc7\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"et_dc1\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ]\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Retrieve the deployment job definition revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?space_id=<string>&start=<string>&limit=100&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id",
																"revisions"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "start",
																	"value": "<string>",
																	"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id",
																	"value": "<string>",
																	"description": "(Required) Deployment job definition identifier.\n"
																}
															]
														},
														"description": "Retrieve the deployment job definition revisions.\n"
													},
													"response": [
														{
															"name": "Deployment job definition revisions",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?space_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "(Required) The space that contains the resource.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"deployment\": {\n          \"id\": \"<string>\"\n        },\n        \"custom\": {},\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ],\n        \"scoring\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"type\": \"data_asset\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"autea4b\": \"<string>\",\n                \"nisi_f\": \"<string>\",\n                \"nostrud7\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            },\n            {\n              \"type\": \"container\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"aliquip_e5_\": \"<string>\",\n                \"quis08\": \"<string>\",\n                \"reprehenderit_e\": \"<string>\",\n                \"irure_54\": \"<string>\",\n                \"enim_\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            }\n          ],\n          \"output_data_reference\": {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"laborum_9__\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"evaluations\": [\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"environment_variables\": {\n            \"Utaba\": \"<string>\",\n            \"ullamco4_\": \"<string>\"\n          }\n        },\n        \"decision_optimization\": {\n          \"solve_parameters\": {},\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"data_asset\",\n              \"location\": {\n                \"do_46\": \"<string>\",\n                \"ipsum_1\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"connection_asset\",\n              \"location\": {\n                \"officiabb\": \"<string>\",\n                \"sunt_c\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ],\n          \"output_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"output_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"container\",\n              \"location\": {\n                \"laborum_93f\": \"<string>\",\n                \"velit8c\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"container\",\n              \"location\": {\n                \"incididunt__a\": \"<string>\",\n                \"magnad\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ]\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"deployment\": {\n          \"id\": \"<string>\"\n        },\n        \"custom\": {},\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ],\n        \"scoring\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"type\": \"connection_asset\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"utca\": \"<string>\",\n                \"dolore_4\": \"<string>\",\n                \"labored\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            },\n            {\n              \"type\": \"connection_asset\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"irureb9c\": \"<string>\",\n                \"commodo_eb\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            }\n          ],\n          \"output_data_reference\": {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"minim_d53\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"evaluations\": [\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"environment_variables\": {\n            \"ipsume\": \"<string>\",\n            \"laboris_6\": \"<string>\"\n          }\n        },\n        \"decision_optimization\": {\n          \"solve_parameters\": {},\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"url\",\n              \"location\": {\n                \"id2\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"container\",\n              \"location\": {\n                \"consequat_dd\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ],\n          \"output_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"output_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"url\",\n              \"location\": {\n                \"aliquip645\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"connection_asset\",\n              \"location\": {\n                \"exercitation3\": \"<string>\",\n                \"eu9\": \"<string>\",\n                \"nostrud599\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ]\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?space_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "(Required) The space that contains the resource.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?space_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "(Required) The space that contains the resource.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?space_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "(Required) The space that contains the resource.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id/revisions?space_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"deployment_job_definitions",
																		":job_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "(Required) The space that contains the resource.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "job_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete the deployment job definition",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions",
														":job_definition_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) The space that contains the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "job_definition_id",
															"value": "<string>",
															"description": "(Required) Deployment job definition identifier.\n"
														}
													]
												},
												"description": "Delete the deployment job definition with the specified identifier. This will delete all revisions of\nthis deployment job definition as well. For each revision all attachments will also be deleted.\n"
											},
											"response": [
												{
													"name": "Deployment job definition deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the deployment job definition",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&rev=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions",
														":job_definition_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) The space that contains the resource.\n"
														},
														{
															"key": "rev",
															"value": "<string>",
															"description": "The revision number of the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "job_definition_id",
															"value": "<string>",
															"description": "(Required) Deployment job definition identifier.\n"
														}
													]
												},
												"description": "Retrieve the deployment job definition with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given\nrevision_number record. \n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"deployment\": {\n      \"id\": \"<string>\"\n    },\n    \"custom\": {},\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"scoring\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"aliqua_b8d\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"commodoc7_\": \"<string>\",\n            \"in8b\": \"<string>\",\n            \"nostrud36\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        }\n      ],\n      \"output_data_reference\": {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"dolorb29\": \"<string>\",\n          \"eab6\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"evaluations\": [\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"environment_variables\": {\n        \"id_2\": \"<string>\",\n        \"cillum_a\": \"<string>\"\n      }\n    },\n    \"decision_optimization\": {\n      \"solve_parameters\": {},\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"incididunt_b45\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"url\",\n          \"location\": {\n            \"ut1b\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ],\n      \"output_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"output_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"container\",\n          \"location\": {\n            \"occaecat_bc7\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"et_dc1\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ]\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the deployment job definition",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions",
														":job_definition_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) The space that contains the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "job_definition_id",
															"value": "<string>",
															"description": "(Required) Deployment job definition identifier.\n"
														}
													]
												},
												"description": "Update the deployment job definition with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n- `/deployment`\n"
											},
											"response": [
												{
													"name": "Deployment job definition has been patched successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"deployment\": {\n      \"id\": \"<string>\"\n    },\n    \"custom\": {},\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"scoring\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"aliqua_b8d\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"commodoc7_\": \"<string>\",\n            \"in8b\": \"<string>\",\n            \"nostrud36\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        }\n      ],\n      \"output_data_reference\": {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"dolorb29\": \"<string>\",\n          \"eab6\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"evaluations\": [\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"environment_variables\": {\n        \"id_2\": \"<string>\",\n        \"cillum_a\": \"<string>\"\n      }\n    },\n    \"decision_optimization\": {\n      \"solve_parameters\": {},\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"incididunt_b45\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"url\",\n          \"location\": {\n            \"ut1b\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ],\n      \"output_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"output_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"container\",\n          \"location\": {\n            \"occaecat_bc7\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"et_dc1\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ]\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions/:job_definition_id?space_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"deployment_job_definitions",
																":job_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "(Required) The space that contains the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "job_definition_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new deployment job definition",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"deployment_job_definitions"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new deployment job definition with the given payload. A deployment job definition represents the deployment metadata information in order to create a batch job in WML. This contains the same metadata used by the /ml/v4/deployment_jobs endpoint. This means that when submitting batch deployment jobs the user can either provide the job definition inline or reference a job definition in a query parameter.\n"
									},
									"response": [
										{
											"name": "Deployment job definition created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The location of the new deployment job definition artifact,\ne.g. `/ml/v4/deployment_job_definitions/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"deployment\": {\n      \"id\": \"<string>\"\n    },\n    \"custom\": {},\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ],\n    \"scoring\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"target\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ],\n          \"targets\": [\n            [],\n            []\n          ]\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"aliqua_b8d\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        },\n        {\n          \"type\": \"connection_asset\",\n          \"id\": \"<string>\",\n          \"connection\": {},\n          \"location\": {\n            \"commodoc7_\": \"<string>\",\n            \"in8b\": \"<string>\",\n            \"nostrud36\": \"<string>\"\n          },\n          \"schema\": {\n            \"id\": \"<string>\",\n            \"fields\": [],\n            \"name\": \"<string>\",\n            \"type\": \"<string>\"\n          }\n        }\n      ],\n      \"output_data_reference\": {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"dolorb29\": \"<string>\",\n          \"eab6\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"evaluations\": [\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"input_target\": \"<string>\",\n          \"metrics_names\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"environment_variables\": {\n        \"id_2\": \"<string>\",\n        \"cillum_a\": \"<string>\"\n      }\n    },\n    \"decision_optimization\": {\n      \"solve_parameters\": {},\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"input_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"incididunt_b45\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"url\",\n          \"location\": {\n            \"ut1b\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ],\n      \"output_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [],\n            []\n          ],\n          \"content\": \"<string>\"\n        }\n      ],\n      \"output_data_references\": [\n        {\n          \"id\": \"<string>\",\n          \"type\": \"container\",\n          \"location\": {\n            \"occaecat_bc7\": \"<string>\"\n          },\n          \"connection\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"et_dc1\": \"<string>\"\n          },\n          \"connection\": {}\n        }\n      ]\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deployment\": {\n    \"id\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {},\n  \"hardware_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\",\n    \"num_nodes\": \"<integer>\"\n  },\n  \"hybrid_pipeline_hardware_specs\": [\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    },\n    {\n      \"node_runtime_id\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      }\n    }\n  ],\n  \"scoring\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"target\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ],\n        \"targets\": [\n          [],\n          []\n        ]\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim1\": \"<string>\",\n          \"nisi_9\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sed__\": \"<string>\",\n          \"consectetur_c3\": \"<string>\",\n          \"eu7_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"output_data_reference\": {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ea3_8\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"evaluations\": [\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"input_target\": \"<string>\",\n        \"metrics_names\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"environment_variables\": {\n      \"Lorem_eb\": \"<string>\",\n      \"culpa_dc3\": \"<string>\"\n    }\n  },\n  \"decision_optimization\": {\n    \"solve_parameters\": {},\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"input_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"url\",\n        \"location\": {\n          \"dolor__d\": \"<string>\",\n          \"reprehenderit59\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"container\",\n        \"location\": {\n          \"Ut_8\": \"<string>\",\n          \"laborum_c\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ],\n    \"output_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [],\n          []\n        ],\n        \"content\": \"<string>\"\n      }\n    ],\n    \"output_data_references\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"connection_asset\",\n        \"location\": {\n          \"aliqua_0\": \"<string>\"\n        },\n        \"connection\": {}\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"data_asset\",\n        \"location\": {\n          \"do03\": \"<string>\"\n        },\n        \"connection\": {}\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the deployment job definitions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?space_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"deployment_job_definitions"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "(Required) The space that contains the resource.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the deployment job definitions for the specified space.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?space_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) The space that contains the resource.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"deployment\": {\n          \"id\": \"<string>\"\n        },\n        \"custom\": {},\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ],\n        \"scoring\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"type\": \"data_asset\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"autea4b\": \"<string>\",\n                \"nisi_f\": \"<string>\",\n                \"nostrud7\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            },\n            {\n              \"type\": \"container\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"aliquip_e5_\": \"<string>\",\n                \"quis08\": \"<string>\",\n                \"reprehenderit_e\": \"<string>\",\n                \"irure_54\": \"<string>\",\n                \"enim_\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            }\n          ],\n          \"output_data_reference\": {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"laborum_9__\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"evaluations\": [\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"environment_variables\": {\n            \"Utaba\": \"<string>\",\n            \"ullamco4_\": \"<string>\"\n          }\n        },\n        \"decision_optimization\": {\n          \"solve_parameters\": {},\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"data_asset\",\n              \"location\": {\n                \"do_46\": \"<string>\",\n                \"ipsum_1\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"connection_asset\",\n              \"location\": {\n                \"officiabb\": \"<string>\",\n                \"sunt_c\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ],\n          \"output_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"output_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"container\",\n              \"location\": {\n                \"laborum_93f\": \"<string>\",\n                \"velit8c\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"container\",\n              \"location\": {\n                \"incididunt__a\": \"<string>\",\n                \"magnad\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ]\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"deployment\": {\n          \"id\": \"<string>\"\n        },\n        \"custom\": {},\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ],\n        \"scoring\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"target\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ],\n              \"targets\": [\n                [],\n                []\n              ]\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"type\": \"connection_asset\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"utca\": \"<string>\",\n                \"dolore_4\": \"<string>\",\n                \"labored\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            },\n            {\n              \"type\": \"connection_asset\",\n              \"id\": \"<string>\",\n              \"connection\": {},\n              \"location\": {\n                \"irureb9c\": \"<string>\",\n                \"commodo_eb\": \"<string>\"\n              },\n              \"schema\": {\n                \"id\": \"<string>\",\n                \"fields\": [],\n                \"name\": \"<string>\",\n                \"type\": \"<string>\"\n              }\n            }\n          ],\n          \"output_data_reference\": {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"minim_d53\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"evaluations\": [\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"input_target\": \"<string>\",\n              \"metrics_names\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ],\n          \"environment_variables\": {\n            \"ipsume\": \"<string>\",\n            \"laboris_6\": \"<string>\"\n          }\n        },\n        \"decision_optimization\": {\n          \"solve_parameters\": {},\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"input_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"url\",\n              \"location\": {\n                \"id2\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"container\",\n              \"location\": {\n                \"consequat_dd\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ],\n          \"output_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [],\n                []\n              ],\n              \"content\": \"<string>\"\n            }\n          ],\n          \"output_data_references\": [\n            {\n              \"id\": \"<string>\",\n              \"type\": \"url\",\n              \"location\": {\n                \"aliquip645\": \"<string>\"\n              },\n              \"connection\": {}\n            },\n            {\n              \"id\": \"<string>\",\n              \"type\": \"connection_asset\",\n              \"location\": {\n                \"exercitation3\": \"<string>\",\n                \"eu9\": \"<string>\",\n                \"nostrud599\": \"<string>\"\n              },\n              \"connection\": {}\n            }\n          ]\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?space_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) The space that contains the resource.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?space_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) The space that contains the resource.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?space_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) The space that contains the resource.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/deployment_job_definitions?space_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"deployment_job_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "(Required) The space that contains the resource.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "experiments",
							"item": [
								{
									"name": "{experiment_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "Create a new experiment revision",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id",
																"revisions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id",
																	"value": "<string>",
																	"description": "(Required) Experiment identifier.\n"
																}
															]
														},
														"description": "Create a new experiment revision.\nThe current metadata and content for\nexperiment_id will be taken and a new revision created.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n"
													},
													"response": [
														{
															"name": "Experiment revision created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new created resource (experiment artifact),\ne.g. `/ml/v4/459afef1-252f-424b-b52d-5cdd98128fa3/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"label_column\": \"<string>\",\n    \"evaluation_definition\": {\n      \"metrics\": [\n        {\n          \"name\": \"<string>\",\n          \"maximize\": \"<boolean>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"maximize\": \"<boolean>\"\n        }\n      ],\n      \"method\": \"multiclass\"\n    },\n    \"training_references\": [\n      {\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters_optimization\": {\n          \"method\": {\n            \"name\": \"random\",\n            \"parameters\": {}\n          },\n          \"hyper_parameters\": [\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters_optimization\": {\n          \"method\": {\n            \"name\": \"hyperband\",\n            \"parameters\": {}\n          },\n          \"hyper_parameters\": [\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            }\n          ]\n        }\n      }\n    ],\n    \"custom\": {\n      \"commodo7e\": 31274023.07940428,\n      \"consequat_f\": true\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Retrieve the experiment revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id",
																"revisions"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "start",
																	"value": "<string>",
																	"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id",
																	"value": "<string>",
																	"description": "(Required) Experiment identifier.\n"
																}
															]
														},
														"description": "Retrieve the experiment revisions.\n"
													},
													"response": [
														{
															"name": "Experiment revisions",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"label_column\": \"<string>\",\n        \"evaluation_definition\": {\n          \"metrics\": [\n            {\n              \"name\": \"<string>\",\n              \"maximize\": \"<boolean>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"maximize\": \"<boolean>\"\n            }\n          ],\n          \"method\": \"multiclass\"\n        },\n        \"training_references\": [\n          {\n            \"pipeline\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"model_type\": \"<string>\",\n              \"data_bindings\": [\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                },\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                }\n              ],\n              \"nodes_parameters\": [\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                },\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                }\n              ],\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              },\n              \"hybrid_pipeline_hardware_specs\": [\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                },\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                }\n              ]\n            },\n            \"model_definition\": {\n              \"id\": \"<string>\"\n            },\n            \"hyper_parameters_optimization\": {\n              \"method\": {\n                \"name\": \"random\",\n                \"parameters\": {}\n              },\n              \"hyper_parameters\": [\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                },\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"pipeline\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"model_type\": \"<string>\",\n              \"data_bindings\": [\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                },\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                }\n              ],\n              \"nodes_parameters\": [\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                },\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                }\n              ],\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              },\n              \"hybrid_pipeline_hardware_specs\": [\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                },\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                }\n              ]\n            },\n            \"model_definition\": {\n              \"id\": \"<string>\"\n            },\n            \"hyper_parameters_optimization\": {\n              \"method\": {\n                \"name\": \"random\",\n                \"parameters\": {}\n              },\n              \"hyper_parameters\": [\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                },\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                }\n              ]\n            }\n          }\n        ],\n        \"custom\": {\n          \"ipsum_6d6\": true\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"label_column\": \"<string>\",\n        \"evaluation_definition\": {\n          \"metrics\": [\n            {\n              \"name\": \"<string>\",\n              \"maximize\": \"<boolean>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"maximize\": \"<boolean>\"\n            }\n          ],\n          \"method\": \"regression\"\n        },\n        \"training_references\": [\n          {\n            \"pipeline\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"model_type\": \"<string>\",\n              \"data_bindings\": [\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                },\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                }\n              ],\n              \"nodes_parameters\": [\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                },\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                }\n              ],\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              },\n              \"hybrid_pipeline_hardware_specs\": [\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                },\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                }\n              ]\n            },\n            \"model_definition\": {\n              \"id\": \"<string>\"\n            },\n            \"hyper_parameters_optimization\": {\n              \"method\": {\n                \"name\": \"random\",\n                \"parameters\": {}\n              },\n              \"hyper_parameters\": [\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                },\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"pipeline\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"model_type\": \"<string>\",\n              \"data_bindings\": [\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                },\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                }\n              ],\n              \"nodes_parameters\": [\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                },\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                }\n              ],\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              },\n              \"hybrid_pipeline_hardware_specs\": [\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                },\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                }\n              ]\n            },\n            \"model_definition\": {\n              \"id\": \"<string>\"\n            },\n            \"hyper_parameters_optimization\": {\n              \"method\": {\n                \"name\": \"bandit\",\n                \"parameters\": {}\n              },\n              \"hyper_parameters\": [\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                },\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                }\n              ]\n            }\n          }\n        ],\n        \"custom\": {\n          \"ullamco_d06\": true,\n          \"ipsum_e85\": \"ad exercitation id\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"experiments",
																		":experiment_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "experiment_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete the experiment",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments",
														":experiment_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "experiment_id",
															"value": "<string>",
															"description": "(Required) Experiment identifier.\n"
														}
													]
												},
												"description": "Delete the experiment with the specified identifier. This will delete all revisions of\nthis experiment as well. For each revision all attachments will also be deleted.\n"
											},
											"response": [
												{
													"name": "Experiment deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the experiment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments",
														":experiment_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "rev",
															"value": "<string>",
															"description": "The revision number of the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "experiment_id",
															"value": "<string>",
															"description": "(Required) Experiment identifier.\n"
														}
													]
												},
												"description": "Retrieve the experiment with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given\nrevision_number record. Either `space_id` or `project_id` has to be provided and is mandatory.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"label_column\": \"<string>\",\n    \"evaluation_definition\": {\n      \"metrics\": [\n        {\n          \"name\": \"<string>\",\n          \"maximize\": \"<boolean>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"maximize\": \"<boolean>\"\n        }\n      ],\n      \"method\": \"multiclass\"\n    },\n    \"training_references\": [\n      {\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters_optimization\": {\n          \"method\": {\n            \"name\": \"random\",\n            \"parameters\": {}\n          },\n          \"hyper_parameters\": [\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters_optimization\": {\n          \"method\": {\n            \"name\": \"hyperband\",\n            \"parameters\": {}\n          },\n          \"hyper_parameters\": [\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            }\n          ]\n        }\n      }\n    ],\n    \"custom\": {\n      \"commodo7e\": 31274023.07940428,\n      \"consequat_f\": true\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the experiment",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments",
														":experiment_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "experiment_id",
															"value": "<string>",
															"description": "(Required) Experiment identifier.\n"
														}
													]
												},
												"description": "Update the experiment with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n"
											},
											"response": [
												{
													"name": "Experiment has been patched successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"label_column\": \"<string>\",\n    \"evaluation_definition\": {\n      \"metrics\": [\n        {\n          \"name\": \"<string>\",\n          \"maximize\": \"<boolean>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"maximize\": \"<boolean>\"\n        }\n      ],\n      \"method\": \"multiclass\"\n    },\n    \"training_references\": [\n      {\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters_optimization\": {\n          \"method\": {\n            \"name\": \"random\",\n            \"parameters\": {}\n          },\n          \"hyper_parameters\": [\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters_optimization\": {\n          \"method\": {\n            \"name\": \"hyperband\",\n            \"parameters\": {}\n          },\n          \"hyper_parameters\": [\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            }\n          ]\n        }\n      }\n    ],\n    \"custom\": {\n      \"commodo7e\": 31274023.07940428,\n      \"consequat_f\": true\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/experiments/:experiment_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"experiments",
																":experiment_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "experiment_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new experiment",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"label_column\": \"<string>\",\n  \"evaluation_definition\": {\n    \"metrics\": [\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      }\n    ],\n    \"method\": \"multiclass\"\n  },\n  \"training_references\": [\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"hyperband\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"rbfopt\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"custom\": {\n    \"Duis17\": false,\n    \"cupidatatff\": 83837155.04817832\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/experiments?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"experiments"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new experiment with the given payload. An experiment represents an asset that captures a set of `pipeline` or `model definition` assets that will be trained at the same time on the same data set.\n"
									},
									"response": [
										{
											"name": "Experiment created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"label_column\": \"<string>\",\n  \"evaluation_definition\": {\n    \"metrics\": [\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      }\n    ],\n    \"method\": \"multiclass\"\n  },\n  \"training_references\": [\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"hyperband\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"rbfopt\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"custom\": {\n    \"Duis17\": false,\n    \"cupidatatff\": 83837155.04817832\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The location of the new experiment artifact,\ne.g. `/ml/v4/experiments/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"label_column\": \"<string>\",\n    \"evaluation_definition\": {\n      \"metrics\": [\n        {\n          \"name\": \"<string>\",\n          \"maximize\": \"<boolean>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"maximize\": \"<boolean>\"\n        }\n      ],\n      \"method\": \"multiclass\"\n    },\n    \"training_references\": [\n      {\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters_optimization\": {\n          \"method\": {\n            \"name\": \"random\",\n            \"parameters\": {}\n          },\n          \"hyper_parameters\": [\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters_optimization\": {\n          \"method\": {\n            \"name\": \"hyperband\",\n            \"parameters\": {}\n          },\n          \"hyper_parameters\": [\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"items\": {\n                \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n              }\n            }\n          ]\n        }\n      }\n    ],\n    \"custom\": {\n      \"commodo7e\": 31274023.07940428,\n      \"consequat_f\": true\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"label_column\": \"<string>\",\n  \"evaluation_definition\": {\n    \"metrics\": [\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      }\n    ],\n    \"method\": \"multiclass\"\n  },\n  \"training_references\": [\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"hyperband\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"rbfopt\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"custom\": {\n    \"Duis17\": false,\n    \"cupidatatff\": 83837155.04817832\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"label_column\": \"<string>\",\n  \"evaluation_definition\": {\n    \"metrics\": [\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      }\n    ],\n    \"method\": \"multiclass\"\n  },\n  \"training_references\": [\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"hyperband\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"rbfopt\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"custom\": {\n    \"Duis17\": false,\n    \"cupidatatff\": 83837155.04817832\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"label_column\": \"<string>\",\n  \"evaluation_definition\": {\n    \"metrics\": [\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      }\n    ],\n    \"method\": \"multiclass\"\n  },\n  \"training_references\": [\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"hyperband\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"rbfopt\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"custom\": {\n    \"Duis17\": false,\n    \"cupidatatff\": 83837155.04817832\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"label_column\": \"<string>\",\n  \"evaluation_definition\": {\n    \"metrics\": [\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"maximize\": \"<boolean>\"\n      }\n    ],\n    \"method\": \"multiclass\"\n  },\n  \"training_references\": [\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"hyperband\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"pipeline\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"model_type\": \"<string>\",\n        \"data_bindings\": [\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          },\n          {\n            \"data_reference_name\": \"<string>\",\n            \"node_id\": \"<string>\"\n          }\n        ],\n        \"nodes_parameters\": [\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          },\n          {\n            \"node_id\": \"<string>\",\n            \"parameters\": {}\n          }\n        ],\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        },\n        \"hybrid_pipeline_hardware_specs\": [\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          },\n          {\n            \"node_runtime_id\": \"<string>\",\n            \"hardware_spec\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"name\": \"<string>\",\n              \"num_nodes\": \"<integer>\"\n            }\n          }\n        ]\n      },\n      \"model_definition\": {\n        \"id\": \"<string>\"\n      },\n      \"hyper_parameters_optimization\": {\n        \"method\": {\n          \"name\": \"rbfopt\",\n          \"parameters\": {}\n        },\n        \"hyper_parameters\": [\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          },\n          {\n            \"name\": \"<string>\",\n            \"items\": {\n              \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"custom\": {\n    \"Duis17\": false,\n    \"cupidatatff\": 83837155.04817832\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the experiments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/experiments?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"experiments"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "project_id",
													"value": "<string>",
													"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the experiments for the specified space or project.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"label_column\": \"<string>\",\n        \"evaluation_definition\": {\n          \"metrics\": [\n            {\n              \"name\": \"<string>\",\n              \"maximize\": \"<boolean>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"maximize\": \"<boolean>\"\n            }\n          ],\n          \"method\": \"multiclass\"\n        },\n        \"training_references\": [\n          {\n            \"pipeline\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"model_type\": \"<string>\",\n              \"data_bindings\": [\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                },\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                }\n              ],\n              \"nodes_parameters\": [\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                },\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                }\n              ],\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              },\n              \"hybrid_pipeline_hardware_specs\": [\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                },\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                }\n              ]\n            },\n            \"model_definition\": {\n              \"id\": \"<string>\"\n            },\n            \"hyper_parameters_optimization\": {\n              \"method\": {\n                \"name\": \"random\",\n                \"parameters\": {}\n              },\n              \"hyper_parameters\": [\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                },\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"pipeline\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"model_type\": \"<string>\",\n              \"data_bindings\": [\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                },\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                }\n              ],\n              \"nodes_parameters\": [\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                },\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                }\n              ],\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              },\n              \"hybrid_pipeline_hardware_specs\": [\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                },\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                }\n              ]\n            },\n            \"model_definition\": {\n              \"id\": \"<string>\"\n            },\n            \"hyper_parameters_optimization\": {\n              \"method\": {\n                \"name\": \"random\",\n                \"parameters\": {}\n              },\n              \"hyper_parameters\": [\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                },\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                }\n              ]\n            }\n          }\n        ],\n        \"custom\": {\n          \"ipsum_6d6\": true\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"label_column\": \"<string>\",\n        \"evaluation_definition\": {\n          \"metrics\": [\n            {\n              \"name\": \"<string>\",\n              \"maximize\": \"<boolean>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"maximize\": \"<boolean>\"\n            }\n          ],\n          \"method\": \"regression\"\n        },\n        \"training_references\": [\n          {\n            \"pipeline\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"model_type\": \"<string>\",\n              \"data_bindings\": [\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                },\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                }\n              ],\n              \"nodes_parameters\": [\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                },\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                }\n              ],\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              },\n              \"hybrid_pipeline_hardware_specs\": [\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                },\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                }\n              ]\n            },\n            \"model_definition\": {\n              \"id\": \"<string>\"\n            },\n            \"hyper_parameters_optimization\": {\n              \"method\": {\n                \"name\": \"random\",\n                \"parameters\": {}\n              },\n              \"hyper_parameters\": [\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                },\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                }\n              ]\n            }\n          },\n          {\n            \"pipeline\": {\n              \"id\": \"<string>\",\n              \"rev\": \"<string>\",\n              \"model_type\": \"<string>\",\n              \"data_bindings\": [\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                },\n                {\n                  \"data_reference_name\": \"<string>\",\n                  \"node_id\": \"<string>\"\n                }\n              ],\n              \"nodes_parameters\": [\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                },\n                {\n                  \"node_id\": \"<string>\",\n                  \"parameters\": {}\n                }\n              ],\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              },\n              \"hybrid_pipeline_hardware_specs\": [\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                },\n                {\n                  \"node_runtime_id\": \"<string>\",\n                  \"hardware_spec\": {\n                    \"id\": \"<string>\",\n                    \"rev\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"num_nodes\": \"<integer>\"\n                  }\n                }\n              ]\n            },\n            \"model_definition\": {\n              \"id\": \"<string>\"\n            },\n            \"hyper_parameters_optimization\": {\n              \"method\": {\n                \"name\": \"bandit\",\n                \"parameters\": {}\n              },\n              \"hyper_parameters\": [\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                },\n                {\n                  \"name\": \"<string>\",\n                  \"items\": {\n                    \"description\": \"An object containing floating point properties 'min_value', 'max_value', 'step', and 'power',\\nor a list of either strings or floating point values.\\n\"\n                  }\n                }\n              ]\n            }\n          }\n        ],\n        \"custom\": {\n          \"ullamco_d06\": true,\n          \"ipsum_e85\": \"ad exercitation id\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/experiments?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"experiments"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "functions",
							"item": [
								{
									"name": "{function_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "Create a new function revision",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id",
																"revisions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id",
																	"value": "<string>",
																	"description": "(Required) Function identifier.\n"
																}
															]
														},
														"description": "Create a new function revision.\nThe current metadata and content for\nfunction_id will be taken and a new revision created.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n"
													},
													"response": [
														{
															"name": "Function revision created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new created resource (function artifact),\ne.g. `/ml/v4/459afef1-252f-424b-b52d-5cdd98128fa3/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"python\",\n    \"sample_scoring_input\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ]\n        }\n      ]\n    },\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"custom\": {\n      \"ipsum3c9\": -72569028.95480204,\n      \"non_a7\": true\n    },\n    \"model_references\": [\n      {\n        \"id\": \"<string>\",\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\",\n        \"rev\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\",\n        \"rev\": \"<string>\"\n      }\n    ]\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Retrieve the function revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id",
																"revisions"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "start",
																	"value": "<string>",
																	"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id",
																	"value": "<string>",
																	"description": "(Required) Function identifier.\n"
																}
															]
														},
														"description": "Retrieve the function revisions.\n"
													},
													"response": [
														{
															"name": "Function revisions",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"type\": \"python\",\n        \"sample_scoring_input\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ]\n            }\n          ]\n        },\n        \"schemas\": {\n          \"input\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"output\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        \"custom\": {\n          \"dolor7\": \"deserunt ad\"\n        },\n        \"model_references\": [\n          {\n            \"id\": \"<string>\",\n            \"space_id\": \"<string>\",\n            \"project_id\": \"<string>\",\n            \"rev\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"space_id\": \"<string>\",\n            \"project_id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        ]\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"type\": \"python\",\n        \"sample_scoring_input\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ]\n            }\n          ]\n        },\n        \"schemas\": {\n          \"input\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"output\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        \"custom\": {\n          \"culpa7\": true,\n          \"Ut_9\": false\n        },\n        \"model_references\": [\n          {\n            \"id\": \"<string>\",\n            \"space_id\": \"<string>\",\n            \"project_id\": \"<string>\",\n            \"rev\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"space_id\": \"<string>\",\n            \"project_id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        ]\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "code",
											"item": [
												{
													"name": "Download the function code",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/zip"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id",
																"code"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id",
																	"value": "<string>",
																	"description": "(Required) Function identifier.\n"
																}
															]
														},
														"description": "Download the function code.\nIt is possible to get the `code` for a given\nrevision of the `function`.\nFunctions expect a zip file that contains a python file     that make up the function. Python functions specify what needs to be run when     the function is deployed and what needs to be run when the scoring function is     called. In other words, you are able to customize what preparation WML does in     the environment when you deploy the function, as well as what steps WML takes to     generate the output when you call the API later on. The function consists of the     outer function (any place that is not within the score function) and the inner     score function. The code that sits in the outer function runs when the function     is deployed, and the environment is then frozen and ready to be used whenever     the online scoring or batch inline job processing API is called. The code that     sits in the inner score function runs when the online scoring or batch inline     job processing API is called, in the environment customized by the outer function.     See [Deploying Python function](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/ml-deploy-py-function.html?context=cpdaas${content_description}audience=wdp) for more details.         This is illustrated in the example below:        <pre> <br />     ...python code used to set up the environment... <br />     <br />     def score(payload): <br />         df_payload = pd.DataFrame(payload[values]) <br />         df_payload.columns = payload[fields] <br />         ... <br />         output = {result : res} <br />         return output <br />     <br />     return score <br />     </pre>\n"
													},
													"response": [
														{
															"name": "OK.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/zip"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/zip"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Upload the function code",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/gzip"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "file",
															"file": {}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id",
																"code"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id",
																	"value": "<string>",
																	"description": "(Required) Function identifier.\n"
																}
															]
														},
														"description": "Upload the function code. Functions expect a zip file that contains a python file     that make up the function. Python functions specify what needs to be run when     the function is deployed and what needs to be run when the scoring function is     called. In other words, you are able to customize what preparation WML does in     the environment when you deploy the function, as well as what steps WML takes to     generate the output when you call the API later on. The function consists of the     outer function (any place that is not within the score function) and the inner     score function. The code that sits in the outer function runs when the function     is deployed, and the environment is then frozen and ready to be used whenever     the online scoring or batch inline job processing API is called. The code that     sits in the inner score function runs when the online scoring or batch inline     job processing API is called, in the environment customized by the outer function.     See [Deploying Python function](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/ml-deploy-py-function.html?context=cpdaas${content_description}audience=wdp) for more details.         This is illustrated in the example below:        <pre> <br />     ...python code used to set up the environment... <br />     <br />     def score(payload): <br />         df_payload = pd.DataFrame(payload[values]) <br />         df_payload.columns = payload[fields] <br />         ... <br />         output = {result : res} <br />         return output <br />     <br />     return score <br />     </pre>\n"
													},
													"response": [
														{
															"name": "Function code uploaded",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new function attachment,\ne.g. `/ml/v4/functions/459afef1-252f-424b-b52d-5cdd98128fa3/code?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"attachment_id\": \"<string>\",\n  \"content_format\": \"<string>\",\n  \"name\": \"<string>\",\n  \"pipeline_node_id\": \"<string>\",\n  \"deployment_id\": \"<string>\",\n  \"persisted\": false\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/functions/:function_id/code?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"functions",
																		":function_id",
																		"code"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "function_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete the function",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions",
														":function_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "function_id",
															"value": "<string>",
															"description": "(Required) Function identifier.\n"
														}
													]
												},
												"description": "Delete the function with the specified identifier. This will delete all revisions of\nthis function as well. For each revision all attachments will also be deleted.\n"
											},
											"response": [
												{
													"name": "Function deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the function",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions",
														":function_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "rev",
															"value": "<string>",
															"description": "The revision number of the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "function_id",
															"value": "<string>",
															"description": "(Required) Function identifier.\n"
														}
													]
												},
												"description": "Retrieve the function with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given\nrevision_number record. Either `space_id` or `project_id` has to be provided and is mandatory.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"python\",\n    \"sample_scoring_input\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ]\n        }\n      ]\n    },\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"custom\": {\n      \"ipsum3c9\": -72569028.95480204,\n      \"non_a7\": true\n    },\n    \"model_references\": [\n      {\n        \"id\": \"<string>\",\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\",\n        \"rev\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\",\n        \"rev\": \"<string>\"\n      }\n    ]\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the function",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions",
														":function_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "function_id",
															"value": "<string>",
															"description": "(Required) Function identifier.\n"
														}
													]
												},
												"description": "Update the function with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n"
											},
											"response": [
												{
													"name": "Function has been patched successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"python\",\n    \"sample_scoring_input\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ]\n        }\n      ]\n    },\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"custom\": {\n      \"ipsum3c9\": -72569028.95480204,\n      \"non_a7\": true\n    },\n    \"model_references\": [\n      {\n        \"id\": \"<string>\",\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\",\n        \"rev\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\",\n        \"rev\": \"<string>\"\n      }\n    ]\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/functions/:function_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"functions",
																":function_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "function_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new function",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"python\",\n  \"sample_scoring_input\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      }\n    ]\n  },\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"custom\": {\n    \"ea_7e\": 11289094.549401745,\n    \"ipsume38\": 53136274\n  },\n  \"model_references\": [\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/functions?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"functions"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new function with the given payload. A function is some code that can be deployed as an online, or batch deployment.\n"
									},
									"response": [
										{
											"name": "Function created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"python\",\n  \"sample_scoring_input\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      }\n    ]\n  },\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"custom\": {\n    \"ea_7e\": 11289094.549401745,\n    \"ipsume38\": 53136274\n  },\n  \"model_references\": [\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The location of the new function artifact,\ne.g. `/ml/v4/functions/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": \"python\",\n    \"sample_scoring_input\": {\n      \"input_data\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"values\": [\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ],\n            [\n              {\n                \"description\": \"The record.\\n\"\n              },\n              {\n                \"description\": \"The record.\\n\"\n              }\n            ]\n          ]\n        }\n      ]\n    },\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"custom\": {\n      \"ipsum3c9\": -72569028.95480204,\n      \"non_a7\": true\n    },\n    \"model_references\": [\n      {\n        \"id\": \"<string>\",\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\",\n        \"rev\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\",\n        \"rev\": \"<string>\"\n      }\n    ]\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"python\",\n  \"sample_scoring_input\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      }\n    ]\n  },\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"custom\": {\n    \"ea_7e\": 11289094.549401745,\n    \"ipsume38\": 53136274\n  },\n  \"model_references\": [\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"python\",\n  \"sample_scoring_input\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      }\n    ]\n  },\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"custom\": {\n    \"ea_7e\": 11289094.549401745,\n    \"ipsume38\": 53136274\n  },\n  \"model_references\": [\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"python\",\n  \"sample_scoring_input\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      }\n    ]\n  },\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"custom\": {\n    \"ea_7e\": 11289094.549401745,\n    \"ipsume38\": 53136274\n  },\n  \"model_references\": [\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"python\",\n  \"sample_scoring_input\": {\n    \"input_data\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"values\": [\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ],\n          [\n            {\n              \"description\": \"The record.\\n\"\n            },\n            {\n              \"description\": \"The record.\\n\"\n            }\n          ]\n        ]\n      }\n    ]\n  },\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"custom\": {\n    \"ea_7e\": 11289094.549401745,\n    \"ipsume38\": 53136274\n  },\n  \"model_references\": [\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"space_id\": \"<string>\",\n      \"project_id\": \"<string>\",\n      \"rev\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the functions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/functions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"functions"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "project_id",
													"value": "<string>",
													"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the functions for the specified space or project.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"type\": \"python\",\n        \"sample_scoring_input\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ]\n            }\n          ]\n        },\n        \"schemas\": {\n          \"input\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"output\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        \"custom\": {\n          \"dolor7\": \"deserunt ad\"\n        },\n        \"model_references\": [\n          {\n            \"id\": \"<string>\",\n            \"space_id\": \"<string>\",\n            \"project_id\": \"<string>\",\n            \"rev\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"space_id\": \"<string>\",\n            \"project_id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        ]\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"type\": \"python\",\n        \"sample_scoring_input\": {\n          \"input_data\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"values\": [\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ],\n                [\n                  {\n                    \"description\": \"The record.\\n\"\n                  },\n                  {\n                    \"description\": \"The record.\\n\"\n                  }\n                ]\n              ]\n            }\n          ]\n        },\n        \"schemas\": {\n          \"input\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"output\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        \"custom\": {\n          \"culpa7\": true,\n          \"Ut_9\": false\n        },\n        \"model_references\": [\n          {\n            \"id\": \"<string>\",\n            \"space_id\": \"<string>\",\n            \"project_id\": \"<string>\",\n            \"rev\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"space_id\": \"<string>\",\n            \"project_id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        ]\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/functions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"functions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "instances",
							"item": [
								{
									"name": "{instance_id}",
									"item": [
										{
											"name": "Retrieve the service instance",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/instances/:instance_id?space_id=<string>&project_id=<string>&consumption_details=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"instances",
														":instance_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "Defines authorization context that allows a space member to perform this operation.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "Defines authorization context that allows a project member to perform this operation.\n"
														},
														{
															"key": "consumption_details",
															"value": "false",
															"description": "Only if `consumption_details` is set to `true` the instance `entity.consumption.details` part is available\nin response.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "instance_id",
															"value": "<string>",
															"description": "(Required) The instance identifier."
														}
													]
												},
												"description": "Retrieve the service instance details. Instances with `plan.version` set to `2` will have complete data.\nInstances with `plan.version` set to `1` will not have the `consumption` section and one should\nrefer to the v3 API usage section.\n"
											},
											"response": [
												{
													"name": "OK.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/instances/:instance_id?space_id=<string>&project_id=<string>&consumption_details=false&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"instances",
																":instance_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a space member to perform this operation.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a project member to perform this operation.\n"
																},
																{
																	"key": "consumption_details",
																	"value": "false",
																	"description": "Only if `consumption_details` is set to `true` the instance `entity.consumption.details` part is available\nin response.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "instance_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Location",
															"value": "<string>",
															"description": {
																"content": "The location of the new created resource.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    }\n  },\n  \"entity\": {\n    \"status\": \"active\",\n    \"service_endpoints\": \"<string>\",\n    \"plan\": {\n      \"id\": \"<string>\",\n      \"name\": \"standard\",\n      \"version\": \"<integer>\"\n    },\n    \"crn\": \"<string>\",\n    \"account\": {\n      \"id\": \"<string>\"\n    },\n    \"consumption\": {\n      \"capacity_unit_hours\": {\n        \"current\": \"<number>\",\n        \"expiration_date\": \"<date>\",\n        \"limit\": \"<double>\"\n      },\n      \"gpu_count\": {\n        \"current\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      },\n      \"do_job_count\": {\n        \"limit\": \"<integer>\"\n      },\n      \"deployment_job_count\": {\n        \"limit\": \"<integer>\"\n      },\n      \"details\": [\n        {\n          \"context\": \"<string>\",\n          \"framework\": \"<string>\",\n          \"capacity_unit_hours\": \"<number>\",\n          \"token_count\": \"<integer>\",\n          \"space_id\": \"<string>\",\n          \"project_id\": \"<string>\"\n        },\n        {\n          \"context\": \"<string>\",\n          \"framework\": \"<string>\",\n          \"capacity_unit_hours\": \"<number>\",\n          \"token_count\": \"<integer>\",\n          \"space_id\": \"<string>\",\n          \"project_id\": \"<string>\"\n        }\n      ],\n      \"token_count\": {\n        \"current\": \"<integer>\",\n        \"limit\": \"<integer>\"\n      }\n    }\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/instances/:instance_id?space_id=<string>&project_id=<string>&consumption_details=false&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"instances",
																":instance_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a space member to perform this operation.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a project member to perform this operation.\n"
																},
																{
																	"key": "consumption_details",
																	"value": "false",
																	"description": "Only if `consumption_details` is set to `true` the instance `entity.consumption.details` part is available\nin response.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "instance_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/instances/:instance_id?space_id=<string>&project_id=<string>&consumption_details=false&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"instances",
																":instance_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a space member to perform this operation.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a project member to perform this operation.\n"
																},
																{
																	"key": "consumption_details",
																	"value": "false",
																	"description": "Only if `consumption_details` is set to `true` the instance `entity.consumption.details` part is available\nin response.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "instance_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/instances/:instance_id?space_id=<string>&project_id=<string>&consumption_details=false&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"instances",
																":instance_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a space member to perform this operation.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a project member to perform this operation.\n"
																},
																{
																	"key": "consumption_details",
																	"value": "false",
																	"description": "Only if `consumption_details` is set to `true` the instance `entity.consumption.details` part is available\nin response.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "instance_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/instances/:instance_id?space_id=<string>&project_id=<string>&consumption_details=false&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"instances",
																":instance_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a space member to perform this operation.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "Defines authorization context that allows a project member to perform this operation.\n"
																},
																{
																	"key": "consumption_details",
																	"value": "false",
																	"description": "Only if `consumption_details` is set to `true` the instance `entity.consumption.details` part is available\nin response.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "instance_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the service instances",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/instances?space_id=<string>,<string>&project_id=<string>,<string>&start=<string>&limit=100&consumption_details=false&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"instances"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>,<string>",
													"description": "Return resources pertaining to any space_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
												},
												{
													"key": "project_id",
													"value": "<string>,<string>",
													"description": "Return resources pertaining to any project_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "consumption_details",
													"value": "false",
													"description": "Only if `consumption_details` is set to `true` each instance `entity.consumption.details` part is available\nin response.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the service instances. Either `space_id` or `project_id` query parameter is mandatory but both can be provided."
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/instances?space_id=<string>,<string>&project_id=<string>,<string>&start=<string>&limit=100&consumption_details=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"instances"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any space_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "project_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any project_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "consumption_details",
															"value": "false",
															"description": "Only if `consumption_details` is set to `true` each instance `entity.consumption.details` part is available\nin response.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        }\n      },\n      \"entity\": {\n        \"status\": \"inactive\",\n        \"service_endpoints\": \"<string>\",\n        \"plan\": {\n          \"id\": \"<string>\",\n          \"name\": \"lite\",\n          \"version\": \"<integer>\"\n        },\n        \"crn\": \"<string>\",\n        \"account\": {\n          \"id\": \"<string>\"\n        },\n        \"consumption\": {\n          \"capacity_unit_hours\": {\n            \"current\": \"<number>\",\n            \"expiration_date\": \"<date>\",\n            \"limit\": \"<double>\"\n          },\n          \"gpu_count\": {\n            \"current\": \"<integer>\",\n            \"limit\": \"<integer>\"\n          },\n          \"do_job_count\": {\n            \"limit\": \"<integer>\"\n          },\n          \"deployment_job_count\": {\n            \"limit\": \"<integer>\"\n          },\n          \"details\": [\n            {\n              \"context\": \"<string>\",\n              \"framework\": \"<string>\",\n              \"capacity_unit_hours\": \"<number>\",\n              \"token_count\": \"<integer>\",\n              \"space_id\": \"<string>\",\n              \"project_id\": \"<string>\"\n            },\n            {\n              \"context\": \"<string>\",\n              \"framework\": \"<string>\",\n              \"capacity_unit_hours\": \"<number>\",\n              \"token_count\": \"<integer>\",\n              \"space_id\": \"<string>\",\n              \"project_id\": \"<string>\"\n            }\n          ],\n          \"token_count\": {\n            \"current\": \"<integer>\",\n            \"limit\": \"<integer>\"\n          }\n        }\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        }\n      },\n      \"entity\": {\n        \"status\": \"inactive\",\n        \"service_endpoints\": \"<string>\",\n        \"plan\": {\n          \"id\": \"<string>\",\n          \"name\": \"standard\",\n          \"version\": \"<integer>\"\n        },\n        \"crn\": \"<string>\",\n        \"account\": {\n          \"id\": \"<string>\"\n        },\n        \"consumption\": {\n          \"capacity_unit_hours\": {\n            \"current\": \"<number>\",\n            \"expiration_date\": \"<date>\",\n            \"limit\": \"<double>\"\n          },\n          \"gpu_count\": {\n            \"current\": \"<integer>\",\n            \"limit\": \"<integer>\"\n          },\n          \"do_job_count\": {\n            \"limit\": \"<integer>\"\n          },\n          \"deployment_job_count\": {\n            \"limit\": \"<integer>\"\n          },\n          \"details\": [\n            {\n              \"context\": \"<string>\",\n              \"framework\": \"<string>\",\n              \"capacity_unit_hours\": \"<number>\",\n              \"token_count\": \"<integer>\",\n              \"space_id\": \"<string>\",\n              \"project_id\": \"<string>\"\n            },\n            {\n              \"context\": \"<string>\",\n              \"framework\": \"<string>\",\n              \"capacity_unit_hours\": \"<number>\",\n              \"token_count\": \"<integer>\",\n              \"space_id\": \"<string>\",\n              \"project_id\": \"<string>\"\n            }\n          ],\n          \"token_count\": {\n            \"current\": \"<integer>\",\n            \"limit\": \"<integer>\"\n          }\n        }\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/instances?space_id=<string>,<string>&project_id=<string>,<string>&start=<string>&limit=100&consumption_details=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"instances"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any space_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "project_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any project_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "consumption_details",
															"value": "false",
															"description": "Only if `consumption_details` is set to `true` each instance `entity.consumption.details` part is available\nin response.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/instances?space_id=<string>,<string>&project_id=<string>,<string>&start=<string>&limit=100&consumption_details=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"instances"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any space_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "project_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any project_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "consumption_details",
															"value": "false",
															"description": "Only if `consumption_details` is set to `true` each instance `entity.consumption.details` part is available\nin response.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/instances?space_id=<string>,<string>&project_id=<string>,<string>&start=<string>&limit=100&consumption_details=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"instances"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any space_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "project_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any project_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "consumption_details",
															"value": "false",
															"description": "Only if `consumption_details` is set to `true` each instance `entity.consumption.details` part is available\nin response.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/instances?space_id=<string>,<string>&project_id=<string>,<string>&start=<string>&limit=100&consumption_details=false&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"instances"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any space_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "project_id",
															"value": "<string>,<string>",
															"description": "Return resources pertaining to any project_id listed.  Either `space_id` or `project_id` query parameter is mandatory but both can be provided.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "consumption_details",
															"value": "false",
															"description": "Only if `consumption_details` is set to `true` each instance `entity.consumption.details` part is available\nin response.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "models",
							"item": [
								{
									"name": "{model_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "Create a new model revision",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id",
																"revisions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id",
																	"value": "<string>",
																	"description": "(Required) Model identifier.\n"
																}
															]
														},
														"description": "Create a new model revision.\nThe current metadata and content for\nmodel_id will be taken and a new revision created.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n"
													},
													"response": [
														{
															"name": "Model revision created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new created resource (model artifact),\ne.g. `/ml/v4/459afef1-252f-424b-b52d-5cdd98128fa3/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"type\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\"\n    },\n    \"hyper_parameters\": {},\n    \"domain\": \"<string>\",\n    \"training_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"anim_4\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"nisi_7\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"occaecata1\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"cupidatat88\": \"<string>\",\n          \"dolor_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"label_column\": \"<string>\",\n    \"transformed_label_column\": \"<string>\",\n    \"size\": {\n      \"in_memory\": \"<number>\",\n      \"content\": \"<number>\"\n    },\n    \"metrics\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"fugiat_91\": \"<number>\",\n          \"adipisicing76\": \"<number>\",\n          \"ut3d1\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"ex_48\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"timeseries_anomaly_prediction\"\n        }\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"quis846\": \"<number>\",\n          \"aliqua_9\": \"<number>\",\n          \"dolor__\": \"<number>\",\n          \"occaecat_7\": \"<number>\",\n          \"dolor599\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"sit_7\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"binary\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"consecteturd8\": -63957223\n    },\n    \"user_defined_objects\": {\n      \"adipisicing9e3\": \"<string>\",\n      \"culpa6\": \"<string>\"\n    },\n    \"hybrid_pipeline_software_specs\": [\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"model_version\": {\n      \"number\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    \"training_id\": \"<string>\",\n    \"data_preprocessing\": [\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"nostrud_dd3\": -26264130.674873337,\n          \"commodo6\": 3616541,\n          \"consequatd8\": true,\n          \"commodo_5d\": false\n        }\n      },\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"Ut_4e\": false\n        }\n      }\n    ],\n    \"training\": {\n      \"id\": \"<string>\",\n      \"base_model\": {\n        \"model_id\": \"<string>\"\n      },\n      \"task_id\": \"<string>\",\n      \"verbalizer\": \"<string>\"\n    },\n    \"content_import_state\": \"failed\"\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Retrieve the model revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id",
																"revisions"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "start",
																	"value": "<string>",
																	"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id",
																	"value": "<string>",
																	"description": "(Required) Model identifier.\n"
																}
															]
														},
														"description": "Retrieve the model revisions.\n"
													},
													"response": [
														{
															"name": "Model revisions",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"type\": \"<string>\",\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters\": {},\n        \"domain\": \"<string>\",\n        \"training_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"magna_b\": \"<string>\",\n              \"Ut546\": \"<string>\",\n              \"irure72\": \"<string>\",\n              \"dolor_d\": \"<string>\",\n              \"consequat4\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"cupidatat__cc\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"adipisicingab\": \"<string>\",\n              \"id23\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"laborisa\": \"<string>\",\n              \"laboris_d1\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"schemas\": {\n          \"input\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"output\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        \"label_column\": \"<string>\",\n        \"transformed_label_column\": \"<string>\",\n        \"size\": {\n          \"in_memory\": \"<number>\",\n          \"content\": \"<number>\"\n        },\n        \"metrics\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"iteration\": \"<integer>\",\n            \"ml_metrics\": {\n              \"Duis18\": \"<number>\"\n            },\n            \"ts_metrics\": {\n              \"training\": {\n                \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n              }\n            },\n            \"tsad_metrics\": {\n              \"iterations\": [\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                },\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                }\n              ],\n              \"agg\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"localized_extreme\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"trend\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"variance\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                },\n                \"f1\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"precision\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"recall\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"roc_auc\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"supporting_rank\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"aggregated_score\": [\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                }\n              ]\n            },\n            \"ml_federated_metrics\": {\n              \"eaf\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              }\n            },\n            \"context\": {\n              \"deployment_id\": \"<string>\",\n              \"intermediate_model\": {\n                \"name\": \"<string>\",\n                \"process\": \"<string>\",\n                \"location\": {\n                  \"pipeline\": \"<string>\",\n                  \"pipeline_model\": \"<string>\",\n                  \"model\": \"<string>\"\n                },\n                \"notebook_location\": \"<string>\",\n                \"sdk_notebook_location\": \"<string>\",\n                \"pipeline_nodes\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"composition_steps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"duration\": \"<integer>\",\n                \"model_asset\": \"<string>\"\n              },\n              \"phase\": \"<string>\",\n              \"step\": {\n                \"name\": \"<string>\",\n                \"id\": \"<string>\",\n                \"started_at\": \"<dateTime>\",\n                \"completed_at\": \"<dateTime>\",\n                \"hyper_parameters\": {},\n                \"data_allocation\": \"<integer>\",\n                \"estimator\": \"<string>\",\n                \"transformer\": \"<string>\",\n                \"score\": \"<number>\"\n              },\n              \"binary_classification\": {\n                \"confusion_matrices\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  }\n                ],\n                \"roc_curves\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                ]\n              },\n              \"multi_class_classification\": {\n                \"one_vs_all\": [\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  },\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  }\n                ],\n                \"one_vs_all_location\": \"<string>\"\n              },\n              \"features_importance\": [\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                },\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                }\n              ],\n              \"schema\": \"<string>\",\n              \"estimators\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"incremental_training\": {\n                \"iteration\": \"<integer>\",\n                \"total_iterations\": \"<integer>\",\n                \"measures_location\": \"<string>\",\n                \"train_batch_samples_count\": \"<integer>\",\n                \"holdout_samples_count\": \"<integer>\",\n                \"early_stop_triggered\": \"<boolean>\"\n              },\n              \"prediction_type\": \"timeseries_anomaly_prediction\"\n            }\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"iteration\": \"<integer>\",\n            \"ml_metrics\": {\n              \"in5\": \"<number>\"\n            },\n            \"ts_metrics\": {\n              \"training\": {\n                \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n              }\n            },\n            \"tsad_metrics\": {\n              \"iterations\": [\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                },\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                }\n              ],\n              \"agg\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"localized_extreme\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"trend\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"variance\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                },\n                \"f1\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"precision\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"recall\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"roc_auc\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"supporting_rank\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"aggregated_score\": [\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                }\n              ]\n            },\n            \"ml_federated_metrics\": {\n              \"anim_52_\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              }\n            },\n            \"context\": {\n              \"deployment_id\": \"<string>\",\n              \"intermediate_model\": {\n                \"name\": \"<string>\",\n                \"process\": \"<string>\",\n                \"location\": {\n                  \"pipeline\": \"<string>\",\n                  \"pipeline_model\": \"<string>\",\n                  \"model\": \"<string>\"\n                },\n                \"notebook_location\": \"<string>\",\n                \"sdk_notebook_location\": \"<string>\",\n                \"pipeline_nodes\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"composition_steps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"duration\": \"<integer>\",\n                \"model_asset\": \"<string>\"\n              },\n              \"phase\": \"<string>\",\n              \"step\": {\n                \"name\": \"<string>\",\n                \"id\": \"<string>\",\n                \"started_at\": \"<dateTime>\",\n                \"completed_at\": \"<dateTime>\",\n                \"hyper_parameters\": {},\n                \"data_allocation\": \"<integer>\",\n                \"estimator\": \"<string>\",\n                \"transformer\": \"<string>\",\n                \"score\": \"<number>\"\n              },\n              \"binary_classification\": {\n                \"confusion_matrices\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  }\n                ],\n                \"roc_curves\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                ]\n              },\n              \"multi_class_classification\": {\n                \"one_vs_all\": [\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  },\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  }\n                ],\n                \"one_vs_all_location\": \"<string>\"\n              },\n              \"features_importance\": [\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                },\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                }\n              ],\n              \"schema\": \"<string>\",\n              \"estimators\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"incremental_training\": {\n                \"iteration\": \"<integer>\",\n                \"total_iterations\": \"<integer>\",\n                \"measures_location\": \"<string>\",\n                \"train_batch_samples_count\": \"<integer>\",\n                \"holdout_samples_count\": \"<integer>\",\n                \"early_stop_triggered\": \"<boolean>\"\n              },\n              \"prediction_type\": \"regression\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"magna_\": false,\n          \"sed9\": false\n        },\n        \"user_defined_objects\": {\n          \"ut_3\": \"<string>\"\n        },\n        \"hybrid_pipeline_software_specs\": [\n          {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"model_version\": {\n          \"number\": \"<string>\",\n          \"tag\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        \"training_id\": \"<string>\",\n        \"data_preprocessing\": [\n          {\n            \"stage\": \"<string>\",\n            \"input\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"output\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"props\": {\n              \"ipsum_d\": \"nostrud magna\",\n              \"ina\": -19014098.828711122\n            }\n          },\n          {\n            \"stage\": \"<string>\",\n            \"input\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"output\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"props\": {\n              \"nisie\": true,\n              \"dolore_f\": \"et dolore ipsum laboris exercitation\"\n            }\n          }\n        ],\n        \"training\": {\n          \"id\": \"<string>\",\n          \"base_model\": {\n            \"model_id\": \"<string>\"\n          },\n          \"task_id\": \"<string>\",\n          \"verbalizer\": \"<string>\"\n        },\n        \"content_import_state\": \"failed\"\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"type\": \"<string>\",\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters\": {},\n        \"domain\": \"<string>\",\n        \"training_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"Excepteur_a\": \"<string>\",\n              \"utf\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"dolore_7\": \"<string>\",\n              \"idf4\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"minim_0\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"velit2\": \"<string>\",\n              \"Excepteur9d\": \"<string>\",\n              \"sunt45\": \"<string>\",\n              \"aliquip_b2b\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"schemas\": {\n          \"input\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"output\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        \"label_column\": \"<string>\",\n        \"transformed_label_column\": \"<string>\",\n        \"size\": {\n          \"in_memory\": \"<number>\",\n          \"content\": \"<number>\"\n        },\n        \"metrics\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"iteration\": \"<integer>\",\n            \"ml_metrics\": {\n              \"consequat33\": \"<number>\",\n              \"velit_\": \"<number>\"\n            },\n            \"ts_metrics\": {\n              \"training\": {\n                \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n              }\n            },\n            \"tsad_metrics\": {\n              \"iterations\": [\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                },\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                }\n              ],\n              \"agg\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"localized_extreme\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"trend\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"variance\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                },\n                \"f1\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"precision\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"recall\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"roc_auc\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"supporting_rank\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"aggregated_score\": [\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                }\n              ]\n            },\n            \"ml_federated_metrics\": {\n              \"proident47b\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              }\n            },\n            \"context\": {\n              \"deployment_id\": \"<string>\",\n              \"intermediate_model\": {\n                \"name\": \"<string>\",\n                \"process\": \"<string>\",\n                \"location\": {\n                  \"pipeline\": \"<string>\",\n                  \"pipeline_model\": \"<string>\",\n                  \"model\": \"<string>\"\n                },\n                \"notebook_location\": \"<string>\",\n                \"sdk_notebook_location\": \"<string>\",\n                \"pipeline_nodes\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"composition_steps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"duration\": \"<integer>\",\n                \"model_asset\": \"<string>\"\n              },\n              \"phase\": \"<string>\",\n              \"step\": {\n                \"name\": \"<string>\",\n                \"id\": \"<string>\",\n                \"started_at\": \"<dateTime>\",\n                \"completed_at\": \"<dateTime>\",\n                \"hyper_parameters\": {},\n                \"data_allocation\": \"<integer>\",\n                \"estimator\": \"<string>\",\n                \"transformer\": \"<string>\",\n                \"score\": \"<number>\"\n              },\n              \"binary_classification\": {\n                \"confusion_matrices\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  }\n                ],\n                \"roc_curves\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                ]\n              },\n              \"multi_class_classification\": {\n                \"one_vs_all\": [\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  },\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  }\n                ],\n                \"one_vs_all_location\": \"<string>\"\n              },\n              \"features_importance\": [\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                },\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                }\n              ],\n              \"schema\": \"<string>\",\n              \"estimators\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"incremental_training\": {\n                \"iteration\": \"<integer>\",\n                \"total_iterations\": \"<integer>\",\n                \"measures_location\": \"<string>\",\n                \"train_batch_samples_count\": \"<integer>\",\n                \"holdout_samples_count\": \"<integer>\",\n                \"early_stop_triggered\": \"<boolean>\"\n              },\n              \"prediction_type\": \"regression\"\n            }\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"iteration\": \"<integer>\",\n            \"ml_metrics\": {\n              \"enim6f\": \"<number>\",\n              \"laborum4\": \"<number>\",\n              \"sed036\": \"<number>\"\n            },\n            \"ts_metrics\": {\n              \"training\": {\n                \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n              }\n            },\n            \"tsad_metrics\": {\n              \"iterations\": [\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                },\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                }\n              ],\n              \"agg\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"localized_extreme\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"trend\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"variance\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                },\n                \"f1\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"precision\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"recall\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"roc_auc\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"supporting_rank\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"aggregated_score\": [\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                }\n              ]\n            },\n            \"ml_federated_metrics\": {\n              \"quiea\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              },\n              \"inb1\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              }\n            },\n            \"context\": {\n              \"deployment_id\": \"<string>\",\n              \"intermediate_model\": {\n                \"name\": \"<string>\",\n                \"process\": \"<string>\",\n                \"location\": {\n                  \"pipeline\": \"<string>\",\n                  \"pipeline_model\": \"<string>\",\n                  \"model\": \"<string>\"\n                },\n                \"notebook_location\": \"<string>\",\n                \"sdk_notebook_location\": \"<string>\",\n                \"pipeline_nodes\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"composition_steps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"duration\": \"<integer>\",\n                \"model_asset\": \"<string>\"\n              },\n              \"phase\": \"<string>\",\n              \"step\": {\n                \"name\": \"<string>\",\n                \"id\": \"<string>\",\n                \"started_at\": \"<dateTime>\",\n                \"completed_at\": \"<dateTime>\",\n                \"hyper_parameters\": {},\n                \"data_allocation\": \"<integer>\",\n                \"estimator\": \"<string>\",\n                \"transformer\": \"<string>\",\n                \"score\": \"<number>\"\n              },\n              \"binary_classification\": {\n                \"confusion_matrices\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  }\n                ],\n                \"roc_curves\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                ]\n              },\n              \"multi_class_classification\": {\n                \"one_vs_all\": [\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  },\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  }\n                ],\n                \"one_vs_all_location\": \"<string>\"\n              },\n              \"features_importance\": [\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                },\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                }\n              ],\n              \"schema\": \"<string>\",\n              \"estimators\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"incremental_training\": {\n                \"iteration\": \"<integer>\",\n                \"total_iterations\": \"<integer>\",\n                \"measures_location\": \"<string>\",\n                \"train_batch_samples_count\": \"<integer>\",\n                \"holdout_samples_count\": \"<integer>\",\n                \"early_stop_triggered\": \"<boolean>\"\n              },\n              \"prediction_type\": \"forecasting\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"id_ac\": \"voluptate Excepteur\"\n        },\n        \"user_defined_objects\": {\n          \"sint_494\": \"<string>\",\n          \"Duise7\": \"<string>\"\n        },\n        \"hybrid_pipeline_software_specs\": [\n          {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"model_version\": {\n          \"number\": \"<string>\",\n          \"tag\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        \"training_id\": \"<string>\",\n        \"data_preprocessing\": [\n          {\n            \"stage\": \"<string>\",\n            \"input\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"output\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"props\": {\n              \"qui__8\": -32278389.123028055\n            }\n          },\n          {\n            \"stage\": \"<string>\",\n            \"input\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"output\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"props\": {\n              \"quif49\": -38799025.28712007,\n              \"velit8_\": 20479197.283153996\n            }\n          }\n        ],\n        \"training\": {\n          \"id\": \"<string>\",\n          \"base_model\": {\n            \"model_id\": \"<string>\"\n          },\n          \"task_id\": \"<string>\",\n          \"verbalizer\": \"<string>\"\n        },\n        \"content_import_state\": \"completed\"\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "content",
											"item": [
												{
													"name": "{attachment_id}",
													"item": [
														{
															"name": "Delete the model content",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content",
																		":attachment_id"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id",
																			"value": "<string>",
																			"description": "(Required) Model identifier.\n"
																		},
																		{
																			"key": "attachment_id",
																			"value": "<string>",
																			"description": "(Required) Identifier for the attachment for resources that support separate content.\n"
																		}
																	]
																},
																"description": "Delete the content for the specified model.\n"
															},
															"response": [
																{
																	"name": "Model content deleted",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Bad request, the response body should contain the reason.\n",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "Unauthorized.\n",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "The specified resource was not found.\n",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Download the model content",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/zip"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content",
																		":attachment_id"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id",
																			"value": "<string>",
																			"description": "(Required) Model identifier.\n"
																		},
																		{
																			"key": "attachment_id",
																			"value": "<string>",
																			"description": "(Required) Identifier for the attachment for resources that support separate content.\n"
																		}
																	]
																},
																"description": "Download the model content.\n"
															},
															"response": [
																{
																	"name": "Downloaded",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/zip"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "rev",
																					"value": "<string>",
																					"description": "The revision number of the resource.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"utc\": -92224786,\n  \"dolore56\": \"magna labori\",\n  \"do81\": -76793528.26278341,\n  \"cupidatat_0a\": true\n}"
																},
																{
																	"name": "Bad request, the response body should contain the reason.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "rev",
																					"value": "<string>",
																					"description": "The revision number of the resource.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "Unauthorized.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "rev",
																					"value": "<string>",
																					"description": "The revision number of the resource.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "rev",
																					"value": "<string>",
																					"description": "The revision number of the resource.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "The specified resource was not found.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/ml/v4/models/:model_id/content/:attachment_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"ml",
																				"v4",
																				"models",
																				":model_id",
																				"content",
																				":attachment_id"
																			],
																			"query": [
																				{
																					"key": "space_id",
																					"value": "<string>",
																					"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "project_id",
																					"value": "<string>",
																					"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																				},
																				{
																					"key": "rev",
																					"value": "<string>",
																					"description": "The revision number of the resource.\n"
																				},
																				{
																					"key": "version",
																					"value": "<date>",
																					"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "model_id"
																				},
																				{
																					"key": "attachment_id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Retrieve the model content metadata list",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?space_id=<string>&project_id=<string>&rev=<string>&name=<string>&content_format=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id",
																"content"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "List only attachments with the given name.\n"
																},
																{
																	"key": "content_format",
																	"value": "<string>",
																	"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id",
																	"value": "<string>",
																	"description": "(Required) Model identifier.\n"
																}
															]
														},
														"description": "Retrieve the content metadata list for the specified model attachments.\n"
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?space_id=<string>&project_id=<string>&rev=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "List only attachments with the given name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"total_count\": \"<integer>\",\n  \"attachments\": [\n    {\n      \"attachment_id\": \"<string>\",\n      \"content_format\": \"<string>\",\n      \"name\": \"<string>\",\n      \"pipeline_node_id\": \"<string>\",\n      \"deployment_id\": \"<string>\",\n      \"persisted\": false\n    },\n    {\n      \"attachment_id\": \"<string>\",\n      \"content_format\": \"<string>\",\n      \"name\": \"<string>\",\n      \"pipeline_node_id\": \"<string>\",\n      \"deployment_id\": \"<string>\",\n      \"persisted\": false\n    }\n  ]\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?space_id=<string>&project_id=<string>&rev=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "List only attachments with the given name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?space_id=<string>&project_id=<string>&rev=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "List only attachments with the given name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?space_id=<string>&project_id=<string>&rev=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "List only attachments with the given name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?space_id=<string>&project_id=<string>&rev=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "List only attachments with the given name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Upload the model content",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?content_format=<string>&space_id=<string>&project_id=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id",
																"content"
															],
															"query": [
																{
																	"key": "content_format",
																	"value": "<string>",
																	"description": "(Required) This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "pipeline_node_id",
																	"value": "<string>",
																	"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																},
																{
																	"key": "deployment_id",
																	"value": "<string>",
																	"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																},
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "Provide the name of the attachment.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id",
																	"value": "<string>",
																	"description": "(Required) Model identifier.\n"
																}
															]
														},
														"description": "Upload the content for the specified model.\n"
													},
													"response": [
														{
															"name": "Model content uploaded",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"utc\": -92224786,\n  \"dolore56\": \"magna labori\",\n  \"do81\": -76793528.26278341,\n  \"cupidatat_0a\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?content_format=<string>&space_id=<string>&project_id=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "(Required) This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Provide the name of the attachment.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new model attachment,\nfor example `/ml/v4/models/459afef1-252f-424b-b52d-5cdd98128fa3/content/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"attachment_id\": \"<string>\",\n  \"content_format\": \"<string>\",\n  \"name\": \"<string>\",\n  \"pipeline_node_id\": \"<string>\",\n  \"deployment_id\": \"<string>\",\n  \"persisted\": false\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"utc\": -92224786,\n  \"dolore56\": \"magna labori\",\n  \"do81\": -76793528.26278341,\n  \"cupidatat_0a\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?content_format=<string>&space_id=<string>&project_id=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "(Required) This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Provide the name of the attachment.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"utc\": -92224786,\n  \"dolore56\": \"magna labori\",\n  \"do81\": -76793528.26278341,\n  \"cupidatat_0a\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?content_format=<string>&space_id=<string>&project_id=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "(Required) This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Provide the name of the attachment.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"utc\": -92224786,\n  \"dolore56\": \"magna labori\",\n  \"do81\": -76793528.26278341,\n  \"cupidatat_0a\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?content_format=<string>&space_id=<string>&project_id=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "(Required) This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Provide the name of the attachment.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"utc\": -92224786,\n  \"dolore56\": \"magna labori\",\n  \"do81\": -76793528.26278341,\n  \"cupidatat_0a\": true\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/content?content_format=<string>&space_id=<string>&project_id=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"content"
																	],
																	"query": [
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "(Required) This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Provide the name of the attachment.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "download",
											"item": [
												{
													"name": "Download the model content that matches a certain criteria",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/zip"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id/download?space_id=<string>&project_id=<string>&rev=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&content_format=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id",
																"download"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "pipeline_node_id",
																	"value": "<string>",
																	"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																},
																{
																	"key": "deployment_id",
																	"value": "<string>",
																	"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																},
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "Match an attachment with this name.\n"
																},
																{
																	"key": "content_format",
																	"value": "<string>",
																	"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id",
																	"value": "<string>",
																	"description": "(Required) Model identifier.\n"
																}
															]
														},
														"description": "Download the model content identified by the provided criteria.\nIf more than one attachment is found for the given filter then a\n`400` error is returned. If there are no attachments that match the\nfilter then a `404` error is returned. If there are no filters then,\nif there is a single attachment, the attachment content will\nbe returned otherwise a `400` or `404` error will be returned as\ndescribed above.\nThis method is just a shortcut for getting the attachment metadata\nand then downloading by attachment id.\n"
													},
													"response": [
														{
															"name": "Downloaded",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/zip"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/download?space_id=<string>&project_id=<string>&rev=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"download"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Match an attachment with this name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"utc\": -92224786,\n  \"dolore56\": \"magna labori\",\n  \"do81\": -76793528.26278341,\n  \"cupidatat_0a\": true\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/download?space_id=<string>&project_id=<string>&rev=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"download"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Match an attachment with this name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/download?space_id=<string>&project_id=<string>&rev=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"download"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Match an attachment with this name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/download?space_id=<string>&project_id=<string>&rev=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"download"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Match an attachment with this name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/models/:model_id/download?space_id=<string>&project_id=<string>&rev=<string>&pipeline_node_id=<string>&deployment_id=<string>&name=<string>&content_format=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"models",
																		":model_id",
																		"download"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "pipeline_node_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `pipeline_node_id`, this is only relevant\nif `content_format` is `pipeline-node`.\n"
																		},
																		{
																			"key": "deployment_id",
																			"value": "<string>",
																			"description": "Returns only resources that match this `deployment_id`, this is only relevant\nif `content_format` is `coreml`.\n"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Match an attachment with this name.\n"
																		},
																		{
																			"key": "content_format",
																			"value": "<string>",
																			"description": "This is the format of the content.\nAny value can be used for the\nformat and is there to be able to easily find content by format.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete the model",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models",
														":model_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "model_id",
															"value": "<string>",
															"description": "(Required) Model identifier.\n"
														}
													]
												},
												"description": "Delete the model with the specified identifier. This will delete all revisions of\nthis model as well. For each revision all attachments will also be deleted.\n"
											},
											"response": [
												{
													"name": "Model deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the model",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models",
														":model_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "rev",
															"value": "<string>",
															"description": "The revision number of the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "model_id",
															"value": "<string>",
															"description": "(Required) Model identifier.\n"
														}
													]
												},
												"description": "Retrieve the model with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given\nrevision_number record. Either `space_id` or `project_id` has to be provided and is mandatory.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"type\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\"\n    },\n    \"hyper_parameters\": {},\n    \"domain\": \"<string>\",\n    \"training_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"anim_4\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"nisi_7\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"occaecata1\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"cupidatat88\": \"<string>\",\n          \"dolor_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"label_column\": \"<string>\",\n    \"transformed_label_column\": \"<string>\",\n    \"size\": {\n      \"in_memory\": \"<number>\",\n      \"content\": \"<number>\"\n    },\n    \"metrics\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"fugiat_91\": \"<number>\",\n          \"adipisicing76\": \"<number>\",\n          \"ut3d1\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"ex_48\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"timeseries_anomaly_prediction\"\n        }\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"quis846\": \"<number>\",\n          \"aliqua_9\": \"<number>\",\n          \"dolor__\": \"<number>\",\n          \"occaecat_7\": \"<number>\",\n          \"dolor599\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"sit_7\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"binary\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"consecteturd8\": -63957223\n    },\n    \"user_defined_objects\": {\n      \"adipisicing9e3\": \"<string>\",\n      \"culpa6\": \"<string>\"\n    },\n    \"hybrid_pipeline_software_specs\": [\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"model_version\": {\n      \"number\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    \"training_id\": \"<string>\",\n    \"data_preprocessing\": [\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"nostrud_dd3\": -26264130.674873337,\n          \"commodo6\": 3616541,\n          \"consequatd8\": true,\n          \"commodo_5d\": false\n        }\n      },\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"Ut_4e\": false\n        }\n      }\n    ],\n    \"training\": {\n      \"id\": \"<string>\",\n      \"base_model\": {\n        \"model_id\": \"<string>\"\n      },\n      \"task_id\": \"<string>\",\n      \"verbalizer\": \"<string>\"\n    },\n    \"content_import_state\": \"failed\"\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the model",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models",
														":model_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "model_id",
															"value": "<string>",
															"description": "(Required) Model identifier.\n"
														}
													]
												},
												"description": "Update the model with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n- `/software_spec` (operation `replace` only)\n- `/model_version` (operation `add` and `replace` only)\n"
											},
											"response": [
												{
													"name": "Model has been patched successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"type\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\"\n    },\n    \"hyper_parameters\": {},\n    \"domain\": \"<string>\",\n    \"training_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"anim_4\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"nisi_7\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"occaecata1\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"cupidatat88\": \"<string>\",\n          \"dolor_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"label_column\": \"<string>\",\n    \"transformed_label_column\": \"<string>\",\n    \"size\": {\n      \"in_memory\": \"<number>\",\n      \"content\": \"<number>\"\n    },\n    \"metrics\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"fugiat_91\": \"<number>\",\n          \"adipisicing76\": \"<number>\",\n          \"ut3d1\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"ex_48\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"timeseries_anomaly_prediction\"\n        }\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"quis846\": \"<number>\",\n          \"aliqua_9\": \"<number>\",\n          \"dolor__\": \"<number>\",\n          \"occaecat_7\": \"<number>\",\n          \"dolor599\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"sit_7\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"binary\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"consecteturd8\": -63957223\n    },\n    \"user_defined_objects\": {\n      \"adipisicing9e3\": \"<string>\",\n      \"culpa6\": \"<string>\"\n    },\n    \"hybrid_pipeline_software_specs\": [\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"model_version\": {\n      \"number\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    \"training_id\": \"<string>\",\n    \"data_preprocessing\": [\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"nostrud_dd3\": -26264130.674873337,\n          \"commodo6\": 3616541,\n          \"consequatd8\": true,\n          \"commodo_5d\": false\n        }\n      },\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"Ut_4e\": false\n        }\n      }\n    ],\n    \"training\": {\n      \"id\": \"<string>\",\n      \"base_model\": {\n        \"model_id\": \"<string>\"\n      },\n      \"task_id\": \"<string>\",\n      \"verbalizer\": \"<string>\"\n    },\n    \"content_import_state\": \"failed\"\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/models/:model_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"models",
																":model_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new model",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\"\n  },\n  \"hyper_parameters\": {},\n  \"domain\": \"<string>\",\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"elit_a94\": \"<string>\",\n        \"enim_43_\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"pariatur8\": \"<string>\",\n        \"adipisicing_4\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ut5\": \"<string>\",\n        \"cillum_1f\": \"<string>\",\n        \"deseruntb5\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"amet_f8\": \"<string>\",\n        \"nisi_96_\": \"<string>\",\n        \"nisie2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"label_column\": \"<string>\",\n  \"transformed_label_column\": \"<string>\",\n  \"size\": {\n    \"in_memory\": \"<number>\",\n    \"content\": \"<number>\"\n  },\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"dolor_bc\": \"<number>\",\n        \"inf\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"labore_5a1\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"regression\"\n      }\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"ullamco_277\": \"<number>\",\n        \"in8\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"commodo39\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"magna52\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"velitca6\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"binary\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"proident__32\": -75833936,\n    \"nulla93_\": -46972408.39247438\n  },\n  \"user_defined_objects\": {\n    \"in0\": \"<string>\"\n  },\n  \"hybrid_pipeline_software_specs\": [\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"model_version\": {\n    \"number\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"training_id\": \"<string>\",\n  \"data_preprocessing\": [\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"nulla3\": 66288863.856476784,\n        \"este86\": -63825909\n      }\n    },\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"sunt_c6\": 39470723.869252264,\n        \"in_00\": false\n      }\n    }\n  ],\n  \"training\": {\n    \"id\": \"<string>\",\n    \"base_model\": {\n      \"model_id\": \"<string>\"\n    },\n    \"task_id\": \"<string>\",\n    \"verbalizer\": \"<string>\"\n  },\n  \"content_location\": {\n    \"contents\": [\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      },\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      }\n    ],\n    \"type\": \"connection_asset\",\n    \"connection\": {\n      \"id_b67\": \"<string>\",\n      \"amet8\": \"<string>\"\n    },\n    \"location\": {\n      \"velitb5\": \"<string>\",\n      \"Excepteur32\": \"<string>\",\n      \"proident_07\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/models?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"models"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new model with the given payload. A model represents a machine learning model asset.\nIf a `202` status is returned then the model will be ready when the\n`content_import_state` in the model\nstatus (/ml/v4/models/{model_id}) is `completed`.\nIf `content_import_state` is not used then a `201` status is returned.\n"
									},
									"response": [
										{
											"name": "Model created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\"\n  },\n  \"hyper_parameters\": {},\n  \"domain\": \"<string>\",\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"elit_a94\": \"<string>\",\n        \"enim_43_\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"pariatur8\": \"<string>\",\n        \"adipisicing_4\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ut5\": \"<string>\",\n        \"cillum_1f\": \"<string>\",\n        \"deseruntb5\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"amet_f8\": \"<string>\",\n        \"nisi_96_\": \"<string>\",\n        \"nisie2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"label_column\": \"<string>\",\n  \"transformed_label_column\": \"<string>\",\n  \"size\": {\n    \"in_memory\": \"<number>\",\n    \"content\": \"<number>\"\n  },\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"dolor_bc\": \"<number>\",\n        \"inf\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"labore_5a1\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"regression\"\n      }\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"ullamco_277\": \"<number>\",\n        \"in8\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"commodo39\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"magna52\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"velitca6\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"binary\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"proident__32\": -75833936,\n    \"nulla93_\": -46972408.39247438\n  },\n  \"user_defined_objects\": {\n    \"in0\": \"<string>\"\n  },\n  \"hybrid_pipeline_software_specs\": [\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"model_version\": {\n    \"number\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"training_id\": \"<string>\",\n  \"data_preprocessing\": [\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"nulla3\": 66288863.856476784,\n        \"este86\": -63825909\n      }\n    },\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"sunt_c6\": 39470723.869252264,\n        \"in_00\": false\n      }\n    }\n  ],\n  \"training\": {\n    \"id\": \"<string>\",\n    \"base_model\": {\n      \"model_id\": \"<string>\"\n    },\n    \"task_id\": \"<string>\",\n    \"verbalizer\": \"<string>\"\n  },\n  \"content_location\": {\n    \"contents\": [\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      },\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      }\n    ],\n    \"type\": \"connection_asset\",\n    \"connection\": {\n      \"id_b67\": \"<string>\",\n      \"amet8\": \"<string>\"\n    },\n    \"location\": {\n      \"velitb5\": \"<string>\",\n      \"Excepteur32\": \"<string>\",\n      \"proident_07\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The location of the new model artifact,\ne.g. `/ml/v4/models/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"type\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\"\n    },\n    \"hyper_parameters\": {},\n    \"domain\": \"<string>\",\n    \"training_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"anim_4\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"nisi_7\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"occaecata1\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"cupidatat88\": \"<string>\",\n          \"dolor_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"label_column\": \"<string>\",\n    \"transformed_label_column\": \"<string>\",\n    \"size\": {\n      \"in_memory\": \"<number>\",\n      \"content\": \"<number>\"\n    },\n    \"metrics\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"fugiat_91\": \"<number>\",\n          \"adipisicing76\": \"<number>\",\n          \"ut3d1\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"ex_48\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"timeseries_anomaly_prediction\"\n        }\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"quis846\": \"<number>\",\n          \"aliqua_9\": \"<number>\",\n          \"dolor__\": \"<number>\",\n          \"occaecat_7\": \"<number>\",\n          \"dolor599\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"sit_7\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"binary\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"consecteturd8\": -63957223\n    },\n    \"user_defined_objects\": {\n      \"adipisicing9e3\": \"<string>\",\n      \"culpa6\": \"<string>\"\n    },\n    \"hybrid_pipeline_software_specs\": [\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"model_version\": {\n      \"number\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    \"training_id\": \"<string>\",\n    \"data_preprocessing\": [\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"nostrud_dd3\": -26264130.674873337,\n          \"commodo6\": 3616541,\n          \"consequatd8\": true,\n          \"commodo_5d\": false\n        }\n      },\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"Ut_4e\": false\n        }\n      }\n    ],\n    \"training\": {\n      \"id\": \"<string>\",\n      \"base_model\": {\n        \"model_id\": \"<string>\"\n      },\n      \"task_id\": \"<string>\",\n      \"verbalizer\": \"<string>\"\n    },\n    \"content_import_state\": \"failed\"\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Model accepted, this is returned in the case that `content_location` was provided\nin the request entity and so the model was created but the attachments are still being uploaded.\nIn this case the model will not be ready until the `content_import_state` in",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\"\n  },\n  \"hyper_parameters\": {},\n  \"domain\": \"<string>\",\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"elit_a94\": \"<string>\",\n        \"enim_43_\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"pariatur8\": \"<string>\",\n        \"adipisicing_4\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ut5\": \"<string>\",\n        \"cillum_1f\": \"<string>\",\n        \"deseruntb5\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"amet_f8\": \"<string>\",\n        \"nisi_96_\": \"<string>\",\n        \"nisie2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"label_column\": \"<string>\",\n  \"transformed_label_column\": \"<string>\",\n  \"size\": {\n    \"in_memory\": \"<number>\",\n    \"content\": \"<number>\"\n  },\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"dolor_bc\": \"<number>\",\n        \"inf\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"labore_5a1\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"regression\"\n      }\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"ullamco_277\": \"<number>\",\n        \"in8\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"commodo39\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"magna52\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"velitca6\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"binary\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"proident__32\": -75833936,\n    \"nulla93_\": -46972408.39247438\n  },\n  \"user_defined_objects\": {\n    \"in0\": \"<string>\"\n  },\n  \"hybrid_pipeline_software_specs\": [\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"model_version\": {\n    \"number\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"training_id\": \"<string>\",\n  \"data_preprocessing\": [\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"nulla3\": 66288863.856476784,\n        \"este86\": -63825909\n      }\n    },\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"sunt_c6\": 39470723.869252264,\n        \"in_00\": false\n      }\n    }\n  ],\n  \"training\": {\n    \"id\": \"<string>\",\n    \"base_model\": {\n      \"model_id\": \"<string>\"\n    },\n    \"task_id\": \"<string>\",\n    \"verbalizer\": \"<string>\"\n  },\n  \"content_location\": {\n    \"contents\": [\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      },\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      }\n    ],\n    \"type\": \"connection_asset\",\n    \"connection\": {\n      \"id_b67\": \"<string>\",\n      \"amet8\": \"<string>\"\n    },\n    \"location\": {\n      \"velitb5\": \"<string>\",\n      \"Excepteur32\": \"<string>\",\n      \"proident_07\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"type\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\"\n    },\n    \"hyper_parameters\": {},\n    \"domain\": \"<string>\",\n    \"training_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"anim_4\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"nisi_7\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"occaecata1\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"data_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"cupidatat88\": \"<string>\",\n          \"dolor_\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"schemas\": {\n      \"input\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"output\": [\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      ]\n    },\n    \"label_column\": \"<string>\",\n    \"transformed_label_column\": \"<string>\",\n    \"size\": {\n      \"in_memory\": \"<number>\",\n      \"content\": \"<number>\"\n    },\n    \"metrics\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"fugiat_91\": \"<number>\",\n          \"adipisicing76\": \"<number>\",\n          \"ut3d1\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"ex_48\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"timeseries_anomaly_prediction\"\n        }\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"quis846\": \"<number>\",\n          \"aliqua_9\": \"<number>\",\n          \"dolor__\": \"<number>\",\n          \"occaecat_7\": \"<number>\",\n          \"dolor599\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"sit_7\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"binary\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"consecteturd8\": -63957223\n    },\n    \"user_defined_objects\": {\n      \"adipisicing9e3\": \"<string>\",\n      \"culpa6\": \"<string>\"\n    },\n    \"hybrid_pipeline_software_specs\": [\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"model_version\": {\n      \"number\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    \"training_id\": \"<string>\",\n    \"data_preprocessing\": [\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"nostrud_dd3\": -26264130.674873337,\n          \"commodo6\": 3616541,\n          \"consequatd8\": true,\n          \"commodo_5d\": false\n        }\n      },\n      {\n        \"stage\": \"<string>\",\n        \"input\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"output\": {\n          \"rows\": \"<integer>\",\n          \"columns\": \"<integer>\"\n        },\n        \"props\": {\n          \"Ut_4e\": false\n        }\n      }\n    ],\n    \"training\": {\n      \"id\": \"<string>\",\n      \"base_model\": {\n        \"model_id\": \"<string>\"\n      },\n      \"task_id\": \"<string>\",\n      \"verbalizer\": \"<string>\"\n    },\n    \"content_import_state\": \"failed\"\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\"\n  },\n  \"hyper_parameters\": {},\n  \"domain\": \"<string>\",\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"elit_a94\": \"<string>\",\n        \"enim_43_\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"pariatur8\": \"<string>\",\n        \"adipisicing_4\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ut5\": \"<string>\",\n        \"cillum_1f\": \"<string>\",\n        \"deseruntb5\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"amet_f8\": \"<string>\",\n        \"nisi_96_\": \"<string>\",\n        \"nisie2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"label_column\": \"<string>\",\n  \"transformed_label_column\": \"<string>\",\n  \"size\": {\n    \"in_memory\": \"<number>\",\n    \"content\": \"<number>\"\n  },\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"dolor_bc\": \"<number>\",\n        \"inf\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"labore_5a1\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"regression\"\n      }\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"ullamco_277\": \"<number>\",\n        \"in8\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"commodo39\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"magna52\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"velitca6\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"binary\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"proident__32\": -75833936,\n    \"nulla93_\": -46972408.39247438\n  },\n  \"user_defined_objects\": {\n    \"in0\": \"<string>\"\n  },\n  \"hybrid_pipeline_software_specs\": [\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"model_version\": {\n    \"number\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"training_id\": \"<string>\",\n  \"data_preprocessing\": [\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"nulla3\": 66288863.856476784,\n        \"este86\": -63825909\n      }\n    },\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"sunt_c6\": 39470723.869252264,\n        \"in_00\": false\n      }\n    }\n  ],\n  \"training\": {\n    \"id\": \"<string>\",\n    \"base_model\": {\n      \"model_id\": \"<string>\"\n    },\n    \"task_id\": \"<string>\",\n    \"verbalizer\": \"<string>\"\n  },\n  \"content_location\": {\n    \"contents\": [\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      },\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      }\n    ],\n    \"type\": \"connection_asset\",\n    \"connection\": {\n      \"id_b67\": \"<string>\",\n      \"amet8\": \"<string>\"\n    },\n    \"location\": {\n      \"velitb5\": \"<string>\",\n      \"Excepteur32\": \"<string>\",\n      \"proident_07\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\"\n  },\n  \"hyper_parameters\": {},\n  \"domain\": \"<string>\",\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"elit_a94\": \"<string>\",\n        \"enim_43_\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"pariatur8\": \"<string>\",\n        \"adipisicing_4\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ut5\": \"<string>\",\n        \"cillum_1f\": \"<string>\",\n        \"deseruntb5\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"amet_f8\": \"<string>\",\n        \"nisi_96_\": \"<string>\",\n        \"nisie2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"label_column\": \"<string>\",\n  \"transformed_label_column\": \"<string>\",\n  \"size\": {\n    \"in_memory\": \"<number>\",\n    \"content\": \"<number>\"\n  },\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"dolor_bc\": \"<number>\",\n        \"inf\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"labore_5a1\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"regression\"\n      }\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"ullamco_277\": \"<number>\",\n        \"in8\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"commodo39\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"magna52\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"velitca6\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"binary\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"proident__32\": -75833936,\n    \"nulla93_\": -46972408.39247438\n  },\n  \"user_defined_objects\": {\n    \"in0\": \"<string>\"\n  },\n  \"hybrid_pipeline_software_specs\": [\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"model_version\": {\n    \"number\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"training_id\": \"<string>\",\n  \"data_preprocessing\": [\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"nulla3\": 66288863.856476784,\n        \"este86\": -63825909\n      }\n    },\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"sunt_c6\": 39470723.869252264,\n        \"in_00\": false\n      }\n    }\n  ],\n  \"training\": {\n    \"id\": \"<string>\",\n    \"base_model\": {\n      \"model_id\": \"<string>\"\n    },\n    \"task_id\": \"<string>\",\n    \"verbalizer\": \"<string>\"\n  },\n  \"content_location\": {\n    \"contents\": [\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      },\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      }\n    ],\n    \"type\": \"connection_asset\",\n    \"connection\": {\n      \"id_b67\": \"<string>\",\n      \"amet8\": \"<string>\"\n    },\n    \"location\": {\n      \"velitb5\": \"<string>\",\n      \"Excepteur32\": \"<string>\",\n      \"proident_07\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\"\n  },\n  \"hyper_parameters\": {},\n  \"domain\": \"<string>\",\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"elit_a94\": \"<string>\",\n        \"enim_43_\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"pariatur8\": \"<string>\",\n        \"adipisicing_4\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ut5\": \"<string>\",\n        \"cillum_1f\": \"<string>\",\n        \"deseruntb5\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"amet_f8\": \"<string>\",\n        \"nisi_96_\": \"<string>\",\n        \"nisie2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"label_column\": \"<string>\",\n  \"transformed_label_column\": \"<string>\",\n  \"size\": {\n    \"in_memory\": \"<number>\",\n    \"content\": \"<number>\"\n  },\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"dolor_bc\": \"<number>\",\n        \"inf\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"labore_5a1\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"regression\"\n      }\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"ullamco_277\": \"<number>\",\n        \"in8\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"commodo39\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"magna52\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"velitca6\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"binary\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"proident__32\": -75833936,\n    \"nulla93_\": -46972408.39247438\n  },\n  \"user_defined_objects\": {\n    \"in0\": \"<string>\"\n  },\n  \"hybrid_pipeline_software_specs\": [\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"model_version\": {\n    \"number\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"training_id\": \"<string>\",\n  \"data_preprocessing\": [\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"nulla3\": 66288863.856476784,\n        \"este86\": -63825909\n      }\n    },\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"sunt_c6\": 39470723.869252264,\n        \"in_00\": false\n      }\n    }\n  ],\n  \"training\": {\n    \"id\": \"<string>\",\n    \"base_model\": {\n      \"model_id\": \"<string>\"\n    },\n    \"task_id\": \"<string>\",\n    \"verbalizer\": \"<string>\"\n  },\n  \"content_location\": {\n    \"contents\": [\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      },\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      }\n    ],\n    \"type\": \"connection_asset\",\n    \"connection\": {\n      \"id_b67\": \"<string>\",\n      \"amet8\": \"<string>\"\n    },\n    \"location\": {\n      \"velitb5\": \"<string>\",\n      \"Excepteur32\": \"<string>\",\n      \"proident_07\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\"\n  },\n  \"hyper_parameters\": {},\n  \"domain\": \"<string>\",\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"elit_a94\": \"<string>\",\n        \"enim_43_\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"pariatur8\": \"<string>\",\n        \"adipisicing_4\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"ut5\": \"<string>\",\n        \"cillum_1f\": \"<string>\",\n        \"deseruntb5\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"amet_f8\": \"<string>\",\n        \"nisi_96_\": \"<string>\",\n        \"nisie2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"schemas\": {\n    \"input\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"output\": [\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ]\n  },\n  \"label_column\": \"<string>\",\n  \"transformed_label_column\": \"<string>\",\n  \"size\": {\n    \"in_memory\": \"<number>\",\n    \"content\": \"<number>\"\n  },\n  \"metrics\": [\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"dolor_bc\": \"<number>\",\n        \"inf\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"labore_5a1\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"regression\"\n      }\n    },\n    {\n      \"timestamp\": \"<dateTime>\",\n      \"iteration\": \"<integer>\",\n      \"ml_metrics\": {\n        \"ullamco_277\": \"<number>\",\n        \"in8\": \"<number>\"\n      },\n      \"ts_metrics\": {\n        \"training\": {\n          \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n        }\n      },\n      \"tsad_metrics\": {\n        \"iterations\": [\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          },\n          {\n            \"average_precision\": {\n              \"localized_extreme\": \"<number>\",\n              \"level_shift\": \"<number>\",\n              \"variance\": \"<number>\",\n              \"trend\": \"<number>\"\n            },\n            \"roc_auc\": {},\n            \"f1\": {},\n            \"precision\": {},\n            \"recall\": {}\n          }\n        ],\n        \"agg\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"localized_extreme\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"trend\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            \"variance\": {\n              \"mean\": \"<number>\",\n              \"range\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          },\n          \"f1\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"precision\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"recall\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          },\n          \"roc_auc\": {\n            \"level_shift\": {},\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"supporting_rank\": {\n          \"average_precision\": {\n            \"level_shift\": {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            \"localized_extreme\": {},\n            \"trend\": {},\n            \"variance\": {}\n          }\n        },\n        \"aggregated_score\": [\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          },\n          {\n            \"p1\": \"<number>\",\n            \"p2\": \"<number>\",\n            \"p3\": \"<number>\",\n            \"p4\": \"<number>\",\n            \"p5\": \"<number>\",\n            \"p6\": \"<number>\"\n          }\n        ]\n      },\n      \"ml_federated_metrics\": {\n        \"commodo39\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"magna52\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        },\n        \"velitca6\": {\n          \"remote_training_systems\": [\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"local\": \"<number>\",\n              \"fused\": \"<number>\"\n            }\n          ],\n          \"global\": \"<number>\"\n        }\n      },\n      \"context\": {\n        \"deployment_id\": \"<string>\",\n        \"intermediate_model\": {\n          \"name\": \"<string>\",\n          \"process\": \"<string>\",\n          \"location\": {\n            \"pipeline\": \"<string>\",\n            \"pipeline_model\": \"<string>\",\n            \"model\": \"<string>\"\n          },\n          \"notebook_location\": \"<string>\",\n          \"sdk_notebook_location\": \"<string>\",\n          \"pipeline_nodes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"composition_steps\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"duration\": \"<integer>\",\n          \"model_asset\": \"<string>\"\n        },\n        \"phase\": \"<string>\",\n        \"step\": {\n          \"name\": \"<string>\",\n          \"id\": \"<string>\",\n          \"started_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"hyper_parameters\": {},\n          \"data_allocation\": \"<integer>\",\n          \"estimator\": \"<string>\",\n          \"transformer\": \"<string>\",\n          \"score\": \"<number>\"\n        },\n        \"binary_classification\": {\n          \"confusion_matrices\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tp\": \"<integer>\",\n              \"tn\": \"<integer>\",\n              \"fp\": \"<integer>\",\n              \"fn\": \"<integer>\"\n            }\n          ],\n          \"roc_curves\": [\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            },\n            {\n              \"true_class\": \"<string>\",\n              \"tpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"fpr\": [\n                \"<number>\",\n                \"<number>\"\n              ],\n              \"thresholds\": [\n                \"<number>\",\n                \"<number>\"\n              ]\n            }\n          ]\n        },\n        \"multi_class_classification\": {\n          \"one_vs_all\": [\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            },\n            {\n              \"class\": \"<string>\",\n              \"confusion_matrix\": {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              \"roc_curve\": {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"confusion_matrix_location\": \"<string>\",\n              \"roc_curve_location\": \"<string>\"\n            }\n          ],\n          \"one_vs_all_location\": \"<string>\"\n        },\n        \"features_importance\": [\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          },\n          {\n            \"stage\": \"<string>\",\n            \"computation_type\": \"<string>\",\n            \"features\": {}\n          }\n        ],\n        \"schema\": \"<string>\",\n        \"estimators\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_training\": {\n          \"iteration\": \"<integer>\",\n          \"total_iterations\": \"<integer>\",\n          \"measures_location\": \"<string>\",\n          \"train_batch_samples_count\": \"<integer>\",\n          \"holdout_samples_count\": \"<integer>\",\n          \"early_stop_triggered\": \"<boolean>\"\n        },\n        \"prediction_type\": \"binary\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"proident__32\": -75833936,\n    \"nulla93_\": -46972408.39247438\n  },\n  \"user_defined_objects\": {\n    \"in0\": \"<string>\"\n  },\n  \"hybrid_pipeline_software_specs\": [\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"model_version\": {\n    \"number\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"training_id\": \"<string>\",\n  \"data_preprocessing\": [\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"nulla3\": 66288863.856476784,\n        \"este86\": -63825909\n      }\n    },\n    {\n      \"stage\": \"<string>\",\n      \"input\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"output\": {\n        \"rows\": \"<integer>\",\n        \"columns\": \"<integer>\"\n      },\n      \"props\": {\n        \"sunt_c6\": 39470723.869252264,\n        \"in_00\": false\n      }\n    }\n  ],\n  \"training\": {\n    \"id\": \"<string>\",\n    \"base_model\": {\n      \"model_id\": \"<string>\"\n    },\n    \"task_id\": \"<string>\",\n    \"verbalizer\": \"<string>\"\n  },\n  \"content_location\": {\n    \"contents\": [\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      },\n      {\n        \"content_format\": \"<string>\",\n        \"location\": \"<string>\",\n        \"file_name\": \"<string>\",\n        \"pipeline_node_id\": \"<string>\",\n        \"deployment_id\": \"<string>\"\n      }\n    ],\n    \"type\": \"connection_asset\",\n    \"connection\": {\n      \"id_b67\": \"<string>\",\n      \"amet8\": \"<string>\"\n    },\n    \"location\": {\n      \"velitb5\": \"<string>\",\n      \"Excepteur32\": \"<string>\",\n      \"proident_07\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the models",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/models?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"models"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "project_id",
													"value": "<string>",
													"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the models for the specified space or project.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"type\": \"<string>\",\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters\": {},\n        \"domain\": \"<string>\",\n        \"training_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"magna_b\": \"<string>\",\n              \"Ut546\": \"<string>\",\n              \"irure72\": \"<string>\",\n              \"dolor_d\": \"<string>\",\n              \"consequat4\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"cupidatat__cc\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"adipisicingab\": \"<string>\",\n              \"id23\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"laborisa\": \"<string>\",\n              \"laboris_d1\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"schemas\": {\n          \"input\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"output\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        \"label_column\": \"<string>\",\n        \"transformed_label_column\": \"<string>\",\n        \"size\": {\n          \"in_memory\": \"<number>\",\n          \"content\": \"<number>\"\n        },\n        \"metrics\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"iteration\": \"<integer>\",\n            \"ml_metrics\": {\n              \"Duis18\": \"<number>\"\n            },\n            \"ts_metrics\": {\n              \"training\": {\n                \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n              }\n            },\n            \"tsad_metrics\": {\n              \"iterations\": [\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                },\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                }\n              ],\n              \"agg\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"localized_extreme\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"trend\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"variance\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                },\n                \"f1\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"precision\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"recall\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"roc_auc\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"supporting_rank\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"aggregated_score\": [\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                }\n              ]\n            },\n            \"ml_federated_metrics\": {\n              \"eaf\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              }\n            },\n            \"context\": {\n              \"deployment_id\": \"<string>\",\n              \"intermediate_model\": {\n                \"name\": \"<string>\",\n                \"process\": \"<string>\",\n                \"location\": {\n                  \"pipeline\": \"<string>\",\n                  \"pipeline_model\": \"<string>\",\n                  \"model\": \"<string>\"\n                },\n                \"notebook_location\": \"<string>\",\n                \"sdk_notebook_location\": \"<string>\",\n                \"pipeline_nodes\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"composition_steps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"duration\": \"<integer>\",\n                \"model_asset\": \"<string>\"\n              },\n              \"phase\": \"<string>\",\n              \"step\": {\n                \"name\": \"<string>\",\n                \"id\": \"<string>\",\n                \"started_at\": \"<dateTime>\",\n                \"completed_at\": \"<dateTime>\",\n                \"hyper_parameters\": {},\n                \"data_allocation\": \"<integer>\",\n                \"estimator\": \"<string>\",\n                \"transformer\": \"<string>\",\n                \"score\": \"<number>\"\n              },\n              \"binary_classification\": {\n                \"confusion_matrices\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  }\n                ],\n                \"roc_curves\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                ]\n              },\n              \"multi_class_classification\": {\n                \"one_vs_all\": [\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  },\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  }\n                ],\n                \"one_vs_all_location\": \"<string>\"\n              },\n              \"features_importance\": [\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                },\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                }\n              ],\n              \"schema\": \"<string>\",\n              \"estimators\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"incremental_training\": {\n                \"iteration\": \"<integer>\",\n                \"total_iterations\": \"<integer>\",\n                \"measures_location\": \"<string>\",\n                \"train_batch_samples_count\": \"<integer>\",\n                \"holdout_samples_count\": \"<integer>\",\n                \"early_stop_triggered\": \"<boolean>\"\n              },\n              \"prediction_type\": \"timeseries_anomaly_prediction\"\n            }\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"iteration\": \"<integer>\",\n            \"ml_metrics\": {\n              \"in5\": \"<number>\"\n            },\n            \"ts_metrics\": {\n              \"training\": {\n                \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n              }\n            },\n            \"tsad_metrics\": {\n              \"iterations\": [\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                },\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                }\n              ],\n              \"agg\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"localized_extreme\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"trend\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"variance\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                },\n                \"f1\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"precision\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"recall\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"roc_auc\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"supporting_rank\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"aggregated_score\": [\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                }\n              ]\n            },\n            \"ml_federated_metrics\": {\n              \"anim_52_\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              }\n            },\n            \"context\": {\n              \"deployment_id\": \"<string>\",\n              \"intermediate_model\": {\n                \"name\": \"<string>\",\n                \"process\": \"<string>\",\n                \"location\": {\n                  \"pipeline\": \"<string>\",\n                  \"pipeline_model\": \"<string>\",\n                  \"model\": \"<string>\"\n                },\n                \"notebook_location\": \"<string>\",\n                \"sdk_notebook_location\": \"<string>\",\n                \"pipeline_nodes\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"composition_steps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"duration\": \"<integer>\",\n                \"model_asset\": \"<string>\"\n              },\n              \"phase\": \"<string>\",\n              \"step\": {\n                \"name\": \"<string>\",\n                \"id\": \"<string>\",\n                \"started_at\": \"<dateTime>\",\n                \"completed_at\": \"<dateTime>\",\n                \"hyper_parameters\": {},\n                \"data_allocation\": \"<integer>\",\n                \"estimator\": \"<string>\",\n                \"transformer\": \"<string>\",\n                \"score\": \"<number>\"\n              },\n              \"binary_classification\": {\n                \"confusion_matrices\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  }\n                ],\n                \"roc_curves\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                ]\n              },\n              \"multi_class_classification\": {\n                \"one_vs_all\": [\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  },\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  }\n                ],\n                \"one_vs_all_location\": \"<string>\"\n              },\n              \"features_importance\": [\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                },\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                }\n              ],\n              \"schema\": \"<string>\",\n              \"estimators\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"incremental_training\": {\n                \"iteration\": \"<integer>\",\n                \"total_iterations\": \"<integer>\",\n                \"measures_location\": \"<string>\",\n                \"train_batch_samples_count\": \"<integer>\",\n                \"holdout_samples_count\": \"<integer>\",\n                \"early_stop_triggered\": \"<boolean>\"\n              },\n              \"prediction_type\": \"regression\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"magna_\": false,\n          \"sed9\": false\n        },\n        \"user_defined_objects\": {\n          \"ut_3\": \"<string>\"\n        },\n        \"hybrid_pipeline_software_specs\": [\n          {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"model_version\": {\n          \"number\": \"<string>\",\n          \"tag\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        \"training_id\": \"<string>\",\n        \"data_preprocessing\": [\n          {\n            \"stage\": \"<string>\",\n            \"input\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"output\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"props\": {\n              \"ipsum_d\": \"nostrud magna\",\n              \"ina\": -19014098.828711122\n            }\n          },\n          {\n            \"stage\": \"<string>\",\n            \"input\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"output\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"props\": {\n              \"nisie\": true,\n              \"dolore_f\": \"et dolore ipsum laboris exercitation\"\n            }\n          }\n        ],\n        \"training\": {\n          \"id\": \"<string>\",\n          \"base_model\": {\n            \"model_id\": \"<string>\"\n          },\n          \"task_id\": \"<string>\",\n          \"verbalizer\": \"<string>\"\n        },\n        \"content_import_state\": \"failed\"\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"type\": \"<string>\",\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\"\n        },\n        \"hyper_parameters\": {},\n        \"domain\": \"<string>\",\n        \"training_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"Excepteur_a\": \"<string>\",\n              \"utf\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"dolore_7\": \"<string>\",\n              \"idf4\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"minim_0\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"velit2\": \"<string>\",\n              \"Excepteur9d\": \"<string>\",\n              \"sunt45\": \"<string>\",\n              \"aliquip_b2b\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"schemas\": {\n          \"input\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"output\": [\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          ]\n        },\n        \"label_column\": \"<string>\",\n        \"transformed_label_column\": \"<string>\",\n        \"size\": {\n          \"in_memory\": \"<number>\",\n          \"content\": \"<number>\"\n        },\n        \"metrics\": [\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"iteration\": \"<integer>\",\n            \"ml_metrics\": {\n              \"consequat33\": \"<number>\",\n              \"velit_\": \"<number>\"\n            },\n            \"ts_metrics\": {\n              \"training\": {\n                \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n              }\n            },\n            \"tsad_metrics\": {\n              \"iterations\": [\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                },\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                }\n              ],\n              \"agg\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"localized_extreme\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"trend\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"variance\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                },\n                \"f1\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"precision\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"recall\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"roc_auc\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"supporting_rank\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"aggregated_score\": [\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                }\n              ]\n            },\n            \"ml_federated_metrics\": {\n              \"proident47b\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              }\n            },\n            \"context\": {\n              \"deployment_id\": \"<string>\",\n              \"intermediate_model\": {\n                \"name\": \"<string>\",\n                \"process\": \"<string>\",\n                \"location\": {\n                  \"pipeline\": \"<string>\",\n                  \"pipeline_model\": \"<string>\",\n                  \"model\": \"<string>\"\n                },\n                \"notebook_location\": \"<string>\",\n                \"sdk_notebook_location\": \"<string>\",\n                \"pipeline_nodes\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"composition_steps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"duration\": \"<integer>\",\n                \"model_asset\": \"<string>\"\n              },\n              \"phase\": \"<string>\",\n              \"step\": {\n                \"name\": \"<string>\",\n                \"id\": \"<string>\",\n                \"started_at\": \"<dateTime>\",\n                \"completed_at\": \"<dateTime>\",\n                \"hyper_parameters\": {},\n                \"data_allocation\": \"<integer>\",\n                \"estimator\": \"<string>\",\n                \"transformer\": \"<string>\",\n                \"score\": \"<number>\"\n              },\n              \"binary_classification\": {\n                \"confusion_matrices\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  }\n                ],\n                \"roc_curves\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                ]\n              },\n              \"multi_class_classification\": {\n                \"one_vs_all\": [\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  },\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  }\n                ],\n                \"one_vs_all_location\": \"<string>\"\n              },\n              \"features_importance\": [\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                },\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                }\n              ],\n              \"schema\": \"<string>\",\n              \"estimators\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"incremental_training\": {\n                \"iteration\": \"<integer>\",\n                \"total_iterations\": \"<integer>\",\n                \"measures_location\": \"<string>\",\n                \"train_batch_samples_count\": \"<integer>\",\n                \"holdout_samples_count\": \"<integer>\",\n                \"early_stop_triggered\": \"<boolean>\"\n              },\n              \"prediction_type\": \"regression\"\n            }\n          },\n          {\n            \"timestamp\": \"<dateTime>\",\n            \"iteration\": \"<integer>\",\n            \"ml_metrics\": {\n              \"enim6f\": \"<number>\",\n              \"laborum4\": \"<number>\",\n              \"sed036\": \"<number>\"\n            },\n            \"ts_metrics\": {\n              \"training\": {\n                \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n              }\n            },\n            \"tsad_metrics\": {\n              \"iterations\": [\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                },\n                {\n                  \"average_precision\": {\n                    \"localized_extreme\": \"<number>\",\n                    \"level_shift\": \"<number>\",\n                    \"variance\": \"<number>\",\n                    \"trend\": \"<number>\"\n                  },\n                  \"roc_auc\": {},\n                  \"f1\": {},\n                  \"precision\": {},\n                  \"recall\": {}\n                }\n              ],\n              \"agg\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"localized_extreme\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"trend\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"variance\": {\n                    \"mean\": \"<number>\",\n                    \"range\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                },\n                \"f1\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"precision\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"recall\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                },\n                \"roc_auc\": {\n                  \"level_shift\": {},\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"supporting_rank\": {\n                \"average_precision\": {\n                  \"level_shift\": {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  \"localized_extreme\": {},\n                  \"trend\": {},\n                  \"variance\": {}\n                }\n              },\n              \"aggregated_score\": [\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                }\n              ]\n            },\n            \"ml_federated_metrics\": {\n              \"quiea\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              },\n              \"inb1\": {\n                \"remote_training_systems\": [\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  },\n                  {\n                    \"id\": \"<string>\",\n                    \"local\": \"<number>\",\n                    \"fused\": \"<number>\"\n                  }\n                ],\n                \"global\": \"<number>\"\n              }\n            },\n            \"context\": {\n              \"deployment_id\": \"<string>\",\n              \"intermediate_model\": {\n                \"name\": \"<string>\",\n                \"process\": \"<string>\",\n                \"location\": {\n                  \"pipeline\": \"<string>\",\n                  \"pipeline_model\": \"<string>\",\n                  \"model\": \"<string>\"\n                },\n                \"notebook_location\": \"<string>\",\n                \"sdk_notebook_location\": \"<string>\",\n                \"pipeline_nodes\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"composition_steps\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"duration\": \"<integer>\",\n                \"model_asset\": \"<string>\"\n              },\n              \"phase\": \"<string>\",\n              \"step\": {\n                \"name\": \"<string>\",\n                \"id\": \"<string>\",\n                \"started_at\": \"<dateTime>\",\n                \"completed_at\": \"<dateTime>\",\n                \"hyper_parameters\": {},\n                \"data_allocation\": \"<integer>\",\n                \"estimator\": \"<string>\",\n                \"transformer\": \"<string>\",\n                \"score\": \"<number>\"\n              },\n              \"binary_classification\": {\n                \"confusion_matrices\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  }\n                ],\n                \"roc_curves\": [\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  }\n                ]\n              },\n              \"multi_class_classification\": {\n                \"one_vs_all\": [\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  },\n                  {\n                    \"class\": \"<string>\",\n                    \"confusion_matrix\": {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    \"roc_curve\": {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"confusion_matrix_location\": \"<string>\",\n                    \"roc_curve_location\": \"<string>\"\n                  }\n                ],\n                \"one_vs_all_location\": \"<string>\"\n              },\n              \"features_importance\": [\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                },\n                {\n                  \"stage\": \"<string>\",\n                  \"computation_type\": \"<string>\",\n                  \"features\": {}\n                }\n              ],\n              \"schema\": \"<string>\",\n              \"estimators\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"incremental_training\": {\n                \"iteration\": \"<integer>\",\n                \"total_iterations\": \"<integer>\",\n                \"measures_location\": \"<string>\",\n                \"train_batch_samples_count\": \"<integer>\",\n                \"holdout_samples_count\": \"<integer>\",\n                \"early_stop_triggered\": \"<boolean>\"\n              },\n              \"prediction_type\": \"forecasting\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"id_ac\": \"voluptate Excepteur\"\n        },\n        \"user_defined_objects\": {\n          \"sint_494\": \"<string>\",\n          \"Duise7\": \"<string>\"\n        },\n        \"hybrid_pipeline_software_specs\": [\n          {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"model_version\": {\n          \"number\": \"<string>\",\n          \"tag\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        \"training_id\": \"<string>\",\n        \"data_preprocessing\": [\n          {\n            \"stage\": \"<string>\",\n            \"input\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"output\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"props\": {\n              \"qui__8\": -32278389.123028055\n            }\n          },\n          {\n            \"stage\": \"<string>\",\n            \"input\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"output\": {\n              \"rows\": \"<integer>\",\n              \"columns\": \"<integer>\"\n            },\n            \"props\": {\n              \"quif49\": -38799025.28712007,\n              \"velit8_\": 20479197.283153996\n            }\n          }\n        ],\n        \"training\": {\n          \"id\": \"<string>\",\n          \"base_model\": {\n            \"model_id\": \"<string>\"\n          },\n          \"task_id\": \"<string>\",\n          \"verbalizer\": \"<string>\"\n        },\n        \"content_import_state\": \"completed\"\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/models?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"models"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "model_definitions",
							"item": [
								{
									"name": "{model_definition_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "Create a new model definition revision",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id",
																"revisions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id",
																	"value": "<string>",
																	"description": "(Required) Model definition identifier.\n"
																}
															]
														},
														"description": "Create a new model definition revision.\nThe current metadata and content for\nmodel_definition_id will be taken and a new revision created.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n"
													},
													"response": [
														{
															"name": "Model definition revision created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new created resource (model definition artifact),\ne.g. `/ml/v4/459afef1-252f-424b-b52d-5cdd98128fa3/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"version\": \"<string>\",\n    \"platform\": {\n      \"name\": \"<string>\",\n      \"versions\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"command\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"custom\": {\n      \"ullamco_a2b\": \"enim aliqua consequat exercitation\"\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Retrieve the model definition revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id",
																"revisions"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "start",
																	"value": "<string>",
																	"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id",
																	"value": "<string>",
																	"description": "(Required) Model definition identifier.\n"
																}
															]
														},
														"description": "Retrieve the model definition revisions.\n"
													},
													"response": [
														{
															"name": "Model definition revisions",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"version\": \"<string>\",\n        \"platform\": {\n          \"name\": \"<string>\",\n          \"versions\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"command\": \"<string>\",\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"custom\": {\n          \"cilluma7\": 58791953,\n          \"exb6d\": \"ullamco exercitation\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"version\": \"<string>\",\n        \"platform\": {\n          \"name\": \"<string>\",\n          \"versions\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"command\": \"<string>\",\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"custom\": {\n          \"mollit987\": 1105926,\n          \"voluptate__02\": 88618597.01891261\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "model",
											"item": [
												{
													"name": "Delete the model definition",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id",
																	"value": "<string>",
																	"description": "(Required) Model definition identifier.\n"
																}
															]
														},
														"description": "Delete the model definition with the specified identifier. This will delete all revisions of\nthis model definition as well. For each revision all attachments will also be deleted.\n"
													},
													"response": [
														{
															"name": "Model definition deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Download the model definition model",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/zip"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id",
																"model"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id",
																	"value": "<string>",
																	"description": "(Required) Model definition identifier.\n"
																}
															]
														},
														"description": "Download the model definition model.\nIt is possible to get the `model` for a given\nrevision of the `model definition`.\nModel definitions for Deep Learning accept a zip file that contains one or more     python files organized in any directory structure.\n"
													},
													"response": [
														{
															"name": "OK.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/zip"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/zip"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "rev",
																			"value": "<string>",
																			"description": "The revision number of the resource.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Upload the model definition model",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/gzip"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "file",
															"file": {}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id",
																"model"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id",
																	"value": "<string>",
																	"description": "(Required) Model definition identifier.\n"
																}
															]
														},
														"description": "Upload the model definition model. Model definitions for Deep Learning accept a zip file that contains one or more     python files organized in any directory structure.\n"
													},
													"response": [
														{
															"name": "Model definition model uploaded",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new model definition attachment,\ne.g. `/ml/v4/model_definitions/459afef1-252f-424b-b52d-5cdd98128fa3/model?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"attachment_id\": \"<string>\",\n  \"content_format\": \"<string>\",\n  \"name\": \"<string>\",\n  \"pipeline_node_id\": \"<string>\",\n  \"deployment_id\": \"<string>\",\n  \"persisted\": false\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/gzip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id/model?space_id=<string>&project_id=<string>&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"model_definitions",
																		":model_definition_id",
																		"model"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "model_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve the model definition",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions",
														":model_definition_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "rev",
															"value": "<string>",
															"description": "The revision number of the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "model_definition_id",
															"value": "<string>",
															"description": "(Required) Model definition identifier.\n"
														}
													]
												},
												"description": "Retrieve the model definition with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given\nrevision_number record. Either `space_id` or `project_id` has to be provided and is mandatory.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"version\": \"<string>\",\n    \"platform\": {\n      \"name\": \"<string>\",\n      \"versions\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"command\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"custom\": {\n      \"ullamco_a2b\": \"enim aliqua consequat exercitation\"\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the model definition",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions",
														":model_definition_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "model_definition_id",
															"value": "<string>",
															"description": "(Required) Model definition identifier.\n"
														}
													]
												},
												"description": "Update the model definition with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n"
											},
											"response": [
												{
													"name": "Model definition has been patched successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"version\": \"<string>\",\n    \"platform\": {\n      \"name\": \"<string>\",\n      \"versions\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"command\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"custom\": {\n      \"ullamco_a2b\": \"enim aliqua consequat exercitation\"\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/model_definitions/:model_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"model_definitions",
																":model_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "model_definition_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new model definition",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"platform\": {\n    \"name\": \"<string>\",\n    \"versions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"version\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"command\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"custom\": {\n    \"in20\": -16263547.604144663,\n    \"idf7\": \"vol\",\n    \"fugiat_edd\": \"in\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/model_definitions?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"model_definitions"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new model definition with the given payload. A model definition represents the code that is used to train one or more models.\n"
									},
									"response": [
										{
											"name": "Model definition created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"platform\": {\n    \"name\": \"<string>\",\n    \"versions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"version\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"command\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"custom\": {\n    \"in20\": -16263547.604144663,\n    \"idf7\": \"vol\",\n    \"fugiat_edd\": \"in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The location of the new model definition artifact,\ne.g. `/ml/v4/model_definitions/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"version\": \"<string>\",\n    \"platform\": {\n      \"name\": \"<string>\",\n      \"versions\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"command\": \"<string>\",\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"custom\": {\n      \"ullamco_a2b\": \"enim aliqua consequat exercitation\"\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"platform\": {\n    \"name\": \"<string>\",\n    \"versions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"version\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"command\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"custom\": {\n    \"in20\": -16263547.604144663,\n    \"idf7\": \"vol\",\n    \"fugiat_edd\": \"in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"platform\": {\n    \"name\": \"<string>\",\n    \"versions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"version\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"command\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"custom\": {\n    \"in20\": -16263547.604144663,\n    \"idf7\": \"vol\",\n    \"fugiat_edd\": \"in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"platform\": {\n    \"name\": \"<string>\",\n    \"versions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"version\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"command\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"custom\": {\n    \"in20\": -16263547.604144663,\n    \"idf7\": \"vol\",\n    \"fugiat_edd\": \"in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"platform\": {\n    \"name\": \"<string>\",\n    \"versions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"version\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"command\": \"<string>\",\n  \"software_spec\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"custom\": {\n    \"in20\": -16263547.604144663,\n    \"idf7\": \"vol\",\n    \"fugiat_edd\": \"in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the model definitions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/model_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"model_definitions"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "project_id",
													"value": "<string>",
													"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the model definitions for the specified space or project.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"version\": \"<string>\",\n        \"platform\": {\n          \"name\": \"<string>\",\n          \"versions\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"command\": \"<string>\",\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"custom\": {\n          \"cilluma7\": 58791953,\n          \"exb6d\": \"ullamco exercitation\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"version\": \"<string>\",\n        \"platform\": {\n          \"name\": \"<string>\",\n          \"versions\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"command\": \"<string>\",\n        \"software_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"custom\": {\n          \"mollit987\": 1105926,\n          \"voluptate__02\": 88618597.01891261\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/model_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"model_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "pipelines",
							"item": [
								{
									"name": "{pipeline_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "Create a new pipeline revision",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id",
																"revisions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id",
																	"value": "<string>",
																	"description": "(Required) Pipeline identifier.\n"
																}
															]
														},
														"description": "Create a new pipeline revision.\nThe current metadata and content for\npipeline_id will be taken and a new revision created.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n"
													},
													"response": [
														{
															"name": "Pipeline revision created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new created resource (pipeline artifact),\ne.g. `/ml/v4/459afef1-252f-424b-b52d-5cdd98128fa3/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"document\": {},\n    \"custom\": {\n      \"voluptate_f5e\": -37342443,\n      \"cillum91d\": \"cupidatat ipsum nostrud\"\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Retrieve the pipeline revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id",
																"revisions"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "start",
																	"value": "<string>",
																	"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id",
																	"value": "<string>",
																	"description": "(Required) Pipeline identifier.\n"
																}
															]
														},
														"description": "Retrieve the pipeline revisions.\n"
													},
													"response": [
														{
															"name": "Pipeline revisions",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"document\": {},\n        \"custom\": {\n          \"ullamcoa67\": -24205472,\n          \"consectetur2a\": \"ullamco nostrud pariatur\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"document\": {},\n        \"custom\": {\n          \"Excepteur___\": 37777135.18234599,\n          \"ipsumee7\": \"eu in est sunt\",\n          \"utb\": 2161013\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"pipelines",
																		":pipeline_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete the pipeline",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines",
														":pipeline_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "pipeline_id",
															"value": "<string>",
															"description": "(Required) Pipeline identifier.\n"
														}
													]
												},
												"description": "Delete the pipeline with the specified identifier. This will delete all revisions of\nthis pipeline as well. For each revision all attachments will also be deleted.\n"
											},
											"response": [
												{
													"name": "Pipeline deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the pipeline",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines",
														":pipeline_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "rev",
															"value": "<string>",
															"description": "The revision number of the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "pipeline_id",
															"value": "<string>",
															"description": "(Required) Pipeline identifier.\n"
														}
													]
												},
												"description": "Retrieve the pipeline with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given\nrevision_number record. Either `space_id` or `project_id` has to be provided and is mandatory.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"document\": {},\n    \"custom\": {\n      \"voluptate_f5e\": -37342443,\n      \"cillum91d\": \"cupidatat ipsum nostrud\"\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the pipeline",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines",
														":pipeline_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "pipeline_id",
															"value": "<string>",
															"description": "(Required) Pipeline identifier.\n"
														}
													]
												},
												"description": "Update the pipeline with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n"
											},
											"response": [
												{
													"name": "Pipeline has been patched successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"document\": {},\n    \"custom\": {\n      \"voluptate_f5e\": -37342443,\n      \"cillum91d\": \"cupidatat ipsum nostrud\"\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/pipelines/:pipeline_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"pipelines",
																":pipeline_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "pipeline_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new pipeline",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"document\": {},\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {\n    \"occaecat_1\": 91115581.97166187,\n    \"exercitation_623\": true,\n    \"pariatur7\": false\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/pipelines?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"pipelines"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new pipeline with the given payload. A pipeline represents a hybrid-pipeline, as a JSON document, that is used to train one or more models.\n"
									},
									"response": [
										{
											"name": "Pipeline created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"document\": {},\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {\n    \"occaecat_1\": 91115581.97166187,\n    \"exercitation_623\": true,\n    \"pariatur7\": false\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The location of the new pipeline artifact,\ne.g. `/ml/v4/pipelines/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"document\": {},\n    \"custom\": {\n      \"voluptate_f5e\": -37342443,\n      \"cillum91d\": \"cupidatat ipsum nostrud\"\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"document\": {},\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {\n    \"occaecat_1\": 91115581.97166187,\n    \"exercitation_623\": true,\n    \"pariatur7\": false\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"document\": {},\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {\n    \"occaecat_1\": 91115581.97166187,\n    \"exercitation_623\": true,\n    \"pariatur7\": false\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"document\": {},\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {\n    \"occaecat_1\": 91115581.97166187,\n    \"exercitation_623\": true,\n    \"pariatur7\": false\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"document\": {},\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"custom\": {\n    \"occaecat_1\": 91115581.97166187,\n    \"exercitation_623\": true,\n    \"pariatur7\": false\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the pipelines",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/pipelines?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"pipelines"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "project_id",
													"value": "<string>",
													"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the pipelines for the specified space or project.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"document\": {},\n        \"custom\": {\n          \"ullamcoa67\": -24205472,\n          \"consectetur2a\": \"ullamco nostrud pariatur\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"document\": {},\n        \"custom\": {\n          \"Excepteur___\": 37777135.18234599,\n          \"ipsumee7\": \"eu in est sunt\",\n          \"utb\": 2161013\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/pipelines?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"pipelines"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "remote_training_systems",
							"item": [
								{
									"name": "{remote_training_system_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "Create a new remote training system revision",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id",
																"revisions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id",
																	"value": "<string>",
																	"description": "(Required) Remote training system identifier.\n"
																}
															]
														},
														"description": "Create a new remote training system revision.\nThe current metadata and content for\nremote_training_system_id will be taken and a new revision created.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n"
													},
													"response": [
														{
															"name": "Remote training system revision created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new created resource (remote training system artifact),\ne.g. `/ml/v4/459afef1-252f-424b-b52d-5cdd98128fa3/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"allowed_identities\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"user\",\n        \"allowed_ips\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"user\",\n        \"allowed_ips\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\",\n      \"region\": \"<string>\"\n    },\n    \"remote_admin\": {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"custom\": {\n      \"sunt_5\": true,\n      \"adipisicing512\": \"in id\",\n      \"laboreba\": 13759254.41564174\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Retrieve the remote training system revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id",
																"revisions"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "start",
																	"value": "<string>",
																	"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id",
																	"value": "<string>",
																	"description": "(Required) Remote training system identifier.\n"
																}
															]
														},
														"description": "Retrieve the remote training system revisions.\n"
													},
													"response": [
														{
															"name": "Remote training system revisions",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"allowed_identities\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"user\",\n            \"allowed_ips\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"service\",\n            \"allowed_ips\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ],\n        \"organization\": {\n          \"name\": \"<string>\",\n          \"region\": \"<string>\"\n        },\n        \"remote_admin\": {\n          \"name\": \"<string>\",\n          \"email\": \"<string>\"\n        },\n        \"custom\": {\n          \"veniam_5\": \"ut qui\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"allowed_identities\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"user\",\n            \"allowed_ips\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"user\",\n            \"allowed_ips\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ],\n        \"organization\": {\n          \"name\": \"<string>\",\n          \"region\": \"<string>\"\n        },\n        \"remote_admin\": {\n          \"name\": \"<string>\",\n          \"email\": \"<string>\"\n        },\n        \"custom\": {\n          \"cupidatat_c\": false\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"remote_training_systems",
																		":remote_training_system_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "remote_training_system_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete the remote training system",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems",
														":remote_training_system_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "remote_training_system_id",
															"value": "<string>",
															"description": "(Required) Remote training system identifier.\n"
														}
													]
												},
												"description": "Delete the remote training system with the specified identifier. This will delete all revisions of\nthis remote training system as well. For each revision all attachments will also be deleted.\n"
											},
											"response": [
												{
													"name": "Remote training system deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the remote training system",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems",
														":remote_training_system_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "rev",
															"value": "<string>",
															"description": "The revision number of the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "remote_training_system_id",
															"value": "<string>",
															"description": "(Required) Remote training system identifier.\n"
														}
													]
												},
												"description": "Retrieve the remote training system with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given\nrevision_number record. Either `space_id` or `project_id` has to be provided and is mandatory.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"allowed_identities\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"user\",\n        \"allowed_ips\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"user\",\n        \"allowed_ips\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\",\n      \"region\": \"<string>\"\n    },\n    \"remote_admin\": {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"custom\": {\n      \"sunt_5\": true,\n      \"adipisicing512\": \"in id\",\n      \"laboreba\": 13759254.41564174\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the remote training system",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems",
														":remote_training_system_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "remote_training_system_id",
															"value": "<string>",
															"description": "(Required) Remote training system identifier.\n"
														}
													]
												},
												"description": "Update the remote training system with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n- `/organization`\n- `/allowed_identities`\n- `/remote_admin`\n"
											},
											"response": [
												{
													"name": "Remote training system has been patched successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"allowed_identities\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"user\",\n        \"allowed_ips\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"user\",\n        \"allowed_ips\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\",\n      \"region\": \"<string>\"\n    },\n    \"remote_admin\": {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"custom\": {\n      \"sunt_5\": true,\n      \"adipisicing512\": \"in id\",\n      \"laboreba\": 13759254.41564174\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/remote_training_systems/:remote_training_system_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"remote_training_systems",
																":remote_training_system_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "remote_training_system_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new remote training system",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowed_identities\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"organization\": {\n    \"name\": \"<string>\",\n    \"region\": \"<string>\"\n  },\n  \"remote_admin\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"custom\": {\n    \"Ut_0f\": 63767435.5217008,\n    \"sed_df\": -57307234.870867684,\n    \"exercitation30\": \"aute sint ut quis\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/remote_training_systems?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"remote_training_systems"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new remote training system with the given payload. A remote training system represents a remote system used by Federated Learning. This definition is necessary to control who can register to a federated learning job.\n"
									},
									"response": [
										{
											"name": "Remote training system created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_identities\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"organization\": {\n    \"name\": \"<string>\",\n    \"region\": \"<string>\"\n  },\n  \"remote_admin\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"custom\": {\n    \"Ut_0f\": 63767435.5217008,\n    \"sed_df\": -57307234.870867684,\n    \"exercitation30\": \"aute sint ut quis\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The location of the new remote training system artifact,\ne.g. `/ml/v4/remote_training_systems/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"allowed_identities\": [\n      {\n        \"id\": \"<string>\",\n        \"type\": \"user\",\n        \"allowed_ips\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"type\": \"user\",\n        \"allowed_ips\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\",\n      \"region\": \"<string>\"\n    },\n    \"remote_admin\": {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    \"custom\": {\n      \"sunt_5\": true,\n      \"adipisicing512\": \"in id\",\n      \"laboreba\": 13759254.41564174\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_identities\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"organization\": {\n    \"name\": \"<string>\",\n    \"region\": \"<string>\"\n  },\n  \"remote_admin\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"custom\": {\n    \"Ut_0f\": 63767435.5217008,\n    \"sed_df\": -57307234.870867684,\n    \"exercitation30\": \"aute sint ut quis\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_identities\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"organization\": {\n    \"name\": \"<string>\",\n    \"region\": \"<string>\"\n  },\n  \"remote_admin\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"custom\": {\n    \"Ut_0f\": 63767435.5217008,\n    \"sed_df\": -57307234.870867684,\n    \"exercitation30\": \"aute sint ut quis\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_identities\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"organization\": {\n    \"name\": \"<string>\",\n    \"region\": \"<string>\"\n  },\n  \"remote_admin\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"custom\": {\n    \"Ut_0f\": 63767435.5217008,\n    \"sed_df\": -57307234.870867684,\n    \"exercitation30\": \"aute sint ut quis\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_identities\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"service\",\n      \"allowed_ips\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"name\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"organization\": {\n    \"name\": \"<string>\",\n    \"region\": \"<string>\"\n  },\n  \"remote_admin\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"custom\": {\n    \"Ut_0f\": 63767435.5217008,\n    \"sed_df\": -57307234.870867684,\n    \"exercitation30\": \"aute sint ut quis\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the remote training systems",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/remote_training_systems?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"remote_training_systems"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "project_id",
													"value": "<string>",
													"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the remote training systems for the specified space or project.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"allowed_identities\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"user\",\n            \"allowed_ips\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"service\",\n            \"allowed_ips\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ],\n        \"organization\": {\n          \"name\": \"<string>\",\n          \"region\": \"<string>\"\n        },\n        \"remote_admin\": {\n          \"name\": \"<string>\",\n          \"email\": \"<string>\"\n        },\n        \"custom\": {\n          \"veniam_5\": \"ut qui\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"allowed_identities\": [\n          {\n            \"id\": \"<string>\",\n            \"type\": \"user\",\n            \"allowed_ips\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          },\n          {\n            \"id\": \"<string>\",\n            \"type\": \"user\",\n            \"allowed_ips\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        ],\n        \"organization\": {\n          \"name\": \"<string>\",\n          \"region\": \"<string>\"\n        },\n        \"remote_admin\": {\n          \"name\": \"<string>\",\n          \"email\": \"<string>\"\n        },\n        \"custom\": {\n          \"cupidatat_c\": false\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/remote_training_systems?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"remote_training_systems"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "trainings",
							"item": [
								{
									"name": "{training_id}",
									"item": [
										{
											"name": "Cancel the training",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?hard_delete=<boolean>&version=<date>&space_id=<string>&project_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings",
														":training_id"
													],
													"query": [
														{
															"key": "hard_delete",
															"value": "<boolean>",
															"description": "Set to true in order to also delete the job metadata information."
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														},
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														}
													],
													"variable": [
														{
															"key": "training_id",
															"value": "<string>",
															"description": "(Required) The training identifier."
														}
													]
												},
												"description": "Cancel the specified training and remove it.\n"
											},
											"response": [
												{
													"name": "Training cancelled.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?hard_delete=<boolean>&version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?hard_delete=<boolean>&version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?hard_delete=<boolean>&version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?hard_delete=<boolean>&version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?hard_delete=<boolean>&version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "hard_delete",
																	"value": "<boolean>",
																	"description": "Set to true in order to also delete the job metadata information."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve the training",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?version=<date>&space_id=<string>&project_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings",
														":training_id"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														},
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														}
													],
													"variable": [
														{
															"key": "training_id",
															"value": "<string>",
															"description": "(Required) The training identifier."
														}
													]
												},
												"description": "Retrieve the training with the specified identifier. This call supports Web-Socket upgrade.\nHowever in order to preserve bandwidth, web-socket messages are not context complete.\nMeaning that a single web-socket message only reflects a message or metric happening in the\ncontext of a training job or sub-job (in case of experiment trainings or HPO/AutoML trainings). Hence the metadata property of a\nweb-socket message contains a parent with the href information of the parent job that triggered this particular job.\nAlso the metrics will be provided as they arrive from the backend runtime, and not as a cumulative list.\nIn order to get the full view of the running training job the caller should do a regular GET call.\n"
											},
											"response": [
												{
													"name": "In case of web socket upgrade, the service messages emitted have the following shape.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Switching Protocols",
													"code": 101,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"state\": \"running\",\n    \"running_at\": \"<dateTime>\",\n    \"completed_at\": \"<dateTime>\",\n    \"iteration\": \"<number>\",\n    \"total_iterations\": \"<number>\",\n    \"compute_usage_metrics\": {\n      \"timestamp\": \"<dateTime>\",\n      \"gpu_count\": \"<number>\",\n      \"gpus\": [\n        {\n          \"type\": \"<string>\",\n          \"memory\": {\n            \"measure\": \"<string>\",\n            \"value\": \"<double>\"\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"memory\": {\n            \"measure\": \"<string>\",\n            \"value\": \"<double>\"\n          }\n        }\n      ]\n    },\n    \"hpo\": {\n      \"hyper_parameters\": {},\n      \"node_id\": \"<string>\"\n    },\n    \"federated_learning_info\": {\n      \"aggregator\": {\n        \"connection\": {\n          \"host\": \"<string>\",\n          \"port\": \"<number>\",\n          \"endpoint\": \"<string>\",\n          \"protocol\": \"wss\",\n          \"headers\": {}\n        }\n      },\n      \"remote_training_systems\": [\n        {\n          \"states\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"state\": \"<string>\",\n            \"registration_log\": [\n              {\n                \"timestamp\": \"<dateTime>\",\n                \"event\": \"<string>\"\n              },\n              {\n                \"timestamp\": \"<dateTime>\",\n                \"event\": \"<string>\"\n              }\n            ]\n          }\n        },\n        {\n          \"states\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"state\": \"<string>\",\n            \"registration_log\": [\n              {\n                \"timestamp\": \"<dateTime>\",\n                \"event\": \"<string>\"\n              },\n              {\n                \"timestamp\": \"<dateTime>\",\n                \"event\": \"<string>\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"message\": {\n      \"level\": \"<string>\",\n      \"text\": \"<string>\"\n    },\n    \"metrics\": [\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"velit_230\": \"<number>\",\n          \"enimdd2\": \"<number>\",\n          \"este\": \"<number>\",\n          \"consectetura\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"ipsum_b\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"timeseries_anomaly_prediction\"\n        }\n      },\n      {\n        \"timestamp\": \"<dateTime>\",\n        \"iteration\": \"<integer>\",\n        \"ml_metrics\": {\n          \"non87_\": \"<number>\",\n          \"quis0e\": \"<number>\",\n          \"dolor3d\": \"<number>\"\n        },\n        \"ts_metrics\": {\n          \"training\": {\n            \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n          }\n        },\n        \"tsad_metrics\": {\n          \"iterations\": [\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            },\n            {\n              \"average_precision\": {\n                \"localized_extreme\": \"<number>\",\n                \"level_shift\": \"<number>\",\n                \"variance\": \"<number>\",\n                \"trend\": \"<number>\"\n              },\n              \"roc_auc\": {},\n              \"f1\": {},\n              \"precision\": {},\n              \"recall\": {}\n            }\n          ],\n          \"agg\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"localized_extreme\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"trend\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              \"variance\": {\n                \"mean\": \"<number>\",\n                \"range\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            },\n            \"f1\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"precision\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"recall\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            },\n            \"roc_auc\": {\n              \"level_shift\": {},\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"supporting_rank\": {\n            \"average_precision\": {\n              \"level_shift\": {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              \"localized_extreme\": {},\n              \"trend\": {},\n              \"variance\": {}\n            }\n          },\n          \"aggregated_score\": [\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            },\n            {\n              \"p1\": \"<number>\",\n              \"p2\": \"<number>\",\n              \"p3\": \"<number>\",\n              \"p4\": \"<number>\",\n              \"p5\": \"<number>\",\n              \"p6\": \"<number>\"\n            }\n          ]\n        },\n        \"ml_federated_metrics\": {\n          \"tempor4b0\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          },\n          \"magnaf02\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          },\n          \"consequat6\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          },\n          \"eu_d86\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"local\": \"<number>\",\n                \"fused\": \"<number>\"\n              }\n            ],\n            \"global\": \"<number>\"\n          }\n        },\n        \"context\": {\n          \"deployment_id\": \"<string>\",\n          \"intermediate_model\": {\n            \"name\": \"<string>\",\n            \"process\": \"<string>\",\n            \"location\": {\n              \"pipeline\": \"<string>\",\n              \"pipeline_model\": \"<string>\",\n              \"model\": \"<string>\"\n            },\n            \"notebook_location\": \"<string>\",\n            \"sdk_notebook_location\": \"<string>\",\n            \"pipeline_nodes\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"composition_steps\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"duration\": \"<integer>\",\n            \"model_asset\": \"<string>\"\n          },\n          \"phase\": \"<string>\",\n          \"step\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\",\n            \"started_at\": \"<dateTime>\",\n            \"completed_at\": \"<dateTime>\",\n            \"hyper_parameters\": {},\n            \"data_allocation\": \"<integer>\",\n            \"estimator\": \"<string>\",\n            \"transformer\": \"<string>\",\n            \"score\": \"<number>\"\n          },\n          \"binary_classification\": {\n            \"confusion_matrices\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tp\": \"<integer>\",\n                \"tn\": \"<integer>\",\n                \"fp\": \"<integer>\",\n                \"fn\": \"<integer>\"\n              }\n            ],\n            \"roc_curves\": [\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              },\n              {\n                \"true_class\": \"<string>\",\n                \"tpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"fpr\": [\n                  \"<number>\",\n                  \"<number>\"\n                ],\n                \"thresholds\": [\n                  \"<number>\",\n                  \"<number>\"\n                ]\n              }\n            ]\n          },\n          \"multi_class_classification\": {\n            \"one_vs_all\": [\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              },\n              {\n                \"class\": \"<string>\",\n                \"confusion_matrix\": {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                \"roc_curve\": {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"confusion_matrix_location\": \"<string>\",\n                \"roc_curve_location\": \"<string>\"\n              }\n            ],\n            \"one_vs_all_location\": \"<string>\"\n          },\n          \"features_importance\": [\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            },\n            {\n              \"stage\": \"<string>\",\n              \"computation_type\": \"<string>\",\n              \"features\": {}\n            }\n          ],\n          \"schema\": \"<string>\",\n          \"estimators\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"incremental_training\": {\n            \"iteration\": \"<integer>\",\n            \"total_iterations\": \"<integer>\",\n            \"measures_location\": \"<string>\",\n            \"train_batch_samples_count\": \"<integer>\",\n            \"holdout_samples_count\": \"<integer>\",\n            \"early_stop_triggered\": \"<boolean>\"\n          },\n          \"prediction_type\": \"binary\"\n        }\n      }\n    ],\n    \"failure\": {\n      \"trace\": \"<string>\",\n      \"errors\": [\n        {\n          \"code\": \"<string>\",\n          \"message\": \"<string>\",\n          \"more_info\": \"<string>\"\n        },\n        {\n          \"code\": \"<string>\",\n          \"message\": \"<string>\",\n          \"more_info\": \"<string>\"\n        }\n      ]\n    }\n  }\n}"
												},
												{
													"name": "OK.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"results_reference\": {\n      \"type\": \"data_asset\",\n      \"location\": {\n        \"dolor_3\": \"<string>\",\n        \"commodo_71\": \"<string>\",\n        \"magna_0f9\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"connection\": {}\n    },\n    \"experiment\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"data_bindings\": [\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        },\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        }\n      ],\n      \"nodes_parameters\": [\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        },\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        }\n      ],\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"hybrid_pipeline_hardware_specs\": [\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        },\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        }\n      ]\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"command\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"federated_learning\": {\n      \"remote_training\": {\n        \"remote_training_systems\": [\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          }\n        ],\n        \"quorum\": \"<double>\",\n        \"max_timeout\": \"<integer>\"\n      },\n      \"fusion_type\": \"spahm\",\n      \"model\": {\n        \"type\": \"tensorflow\",\n        \"spec\": {\n          \"href\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        },\n        \"model_file\": \"<string>\"\n      },\n      \"rounds\": \"<integer>\",\n      \"termination_predicate\": \"<string>\",\n      \"epochs\": \"<integer>\",\n      \"optimizer\": {\n        \"name\": \"<string>\",\n        \"spec\": {}\n      },\n      \"loss\": \"<string>\",\n      \"metrics\": \"<string>\",\n      \"max_depth\": \"<integer>\",\n      \"learning_rate\": \"<double>\",\n      \"l2_regularization\": \"<double>\",\n      \"max_bins\": \"<integer>\",\n      \"max_leaf_nodes\": \"<integer>\",\n      \"min_samples_leaf\": \"<integer>\",\n      \"random_state\": \"<integer>\",\n      \"verbose\": \"<boolean>\",\n      \"num_classes\": \"<integer>\",\n      \"byzantine_threshold\": \"<integer>\",\n      \"sigma\": \"<double>\",\n      \"sigma0\": \"<double>\",\n      \"gamma\": \"<double>\",\n      \"iters\": \"<integer>\",\n      \"save_intermediate_models\": \"<boolean>\",\n      \"crypto\": {\n        \"cipher_spec\": \"encryption_level_2\"\n      },\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<string>\",\n      \"log_level\": \"critical\",\n      \"sketch_accuracy_vs_privacy\": 0.01\n    },\n    \"training_data_references\": [\n      {\n        \"type\": \"connection_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"cillum_9\": \"<string>\",\n          \"enim_3\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sedb\": \"<string>\",\n          \"labore_24\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim_81_\": \"<string>\",\n          \"in0ed\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"in7c\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"sint_9f\": \"Lorem deserunt irure aute\",\n      \"incididunt_b44\": 41323566\n    },\n    \"status\": {\n      \"state\": \"storing\",\n      \"running_at\": \"<dateTime>\",\n      \"completed_at\": \"<dateTime>\",\n      \"iteration\": \"<number>\",\n      \"total_iterations\": \"<number>\",\n      \"compute_usage_metrics\": {\n        \"timestamp\": \"<dateTime>\",\n        \"gpu_count\": \"<number>\",\n        \"gpus\": [\n          {\n            \"type\": \"<string>\",\n            \"memory\": {\n              \"measure\": \"<string>\",\n              \"value\": \"<double>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"memory\": {\n              \"measure\": \"<string>\",\n              \"value\": \"<double>\"\n            }\n          }\n        ]\n      },\n      \"hpo\": {\n        \"hyper_parameters\": {},\n        \"node_id\": \"<string>\"\n      },\n      \"federated_learning_info\": {\n        \"aggregator\": {\n          \"connection\": {\n            \"host\": \"<string>\",\n            \"port\": \"<number>\",\n            \"endpoint\": \"<string>\",\n            \"protocol\": \"wss\",\n            \"headers\": {}\n          }\n        },\n        \"remote_training_systems\": [\n          {\n            \"states\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"state\": \"<string>\",\n              \"registration_log\": [\n                {\n                  \"timestamp\": \"<dateTime>\",\n                  \"event\": \"<string>\"\n                },\n                {\n                  \"timestamp\": \"<dateTime>\",\n                  \"event\": \"<string>\"\n                }\n              ]\n            }\n          },\n          {\n            \"states\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"state\": \"<string>\",\n              \"registration_log\": [\n                {\n                  \"timestamp\": \"<dateTime>\",\n                  \"event\": \"<string>\"\n                },\n                {\n                  \"timestamp\": \"<dateTime>\",\n                  \"event\": \"<string>\"\n                }\n              ]\n            }\n          }\n        ]\n      },\n      \"message\": {\n        \"level\": \"<string>\",\n        \"text\": \"<string>\"\n      },\n      \"metrics\": [\n        {\n          \"timestamp\": \"<dateTime>\",\n          \"iteration\": \"<integer>\",\n          \"ml_metrics\": {\n            \"in_83e\": \"<number>\"\n          },\n          \"ts_metrics\": {\n            \"training\": {\n              \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n            }\n          },\n          \"tsad_metrics\": {\n            \"iterations\": [\n              {\n                \"average_precision\": {\n                  \"localized_extreme\": \"<number>\",\n                  \"level_shift\": \"<number>\",\n                  \"variance\": \"<number>\",\n                  \"trend\": \"<number>\"\n                },\n                \"roc_auc\": {},\n                \"f1\": {},\n                \"precision\": {},\n                \"recall\": {}\n              },\n              {\n                \"average_precision\": {\n                  \"localized_extreme\": \"<number>\",\n                  \"level_shift\": \"<number>\",\n                  \"variance\": \"<number>\",\n                  \"trend\": \"<number>\"\n                },\n                \"roc_auc\": {},\n                \"f1\": {},\n                \"precision\": {},\n                \"recall\": {}\n              }\n            ],\n            \"agg\": {\n              \"average_precision\": {\n                \"level_shift\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"localized_extreme\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"trend\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"variance\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                }\n              },\n              \"f1\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"precision\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"recall\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"roc_auc\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              }\n            },\n            \"supporting_rank\": {\n              \"average_precision\": {\n                \"level_shift\": {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              }\n            },\n            \"aggregated_score\": [\n              {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              }\n            ]\n          },\n          \"ml_federated_metrics\": {\n            \"officia_76\": {\n              \"remote_training_systems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                },\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                }\n              ],\n              \"global\": \"<number>\"\n            },\n            \"consequat_19\": {\n              \"remote_training_systems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                },\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                }\n              ],\n              \"global\": \"<number>\"\n            },\n            \"eiusmod_9\": {\n              \"remote_training_systems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                },\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                }\n              ],\n              \"global\": \"<number>\"\n            }\n          },\n          \"context\": {\n            \"deployment_id\": \"<string>\",\n            \"intermediate_model\": {\n              \"name\": \"<string>\",\n              \"process\": \"<string>\",\n              \"location\": {\n                \"pipeline\": \"<string>\",\n                \"pipeline_model\": \"<string>\",\n                \"model\": \"<string>\"\n              },\n              \"notebook_location\": \"<string>\",\n              \"sdk_notebook_location\": \"<string>\",\n              \"pipeline_nodes\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"composition_steps\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"duration\": \"<integer>\",\n              \"model_asset\": \"<string>\"\n            },\n            \"phase\": \"<string>\",\n            \"step\": {\n              \"name\": \"<string>\",\n              \"id\": \"<string>\",\n              \"started_at\": \"<dateTime>\",\n              \"completed_at\": \"<dateTime>\",\n              \"hyper_parameters\": {},\n              \"data_allocation\": \"<integer>\",\n              \"estimator\": \"<string>\",\n              \"transformer\": \"<string>\",\n              \"score\": \"<number>\"\n            },\n            \"binary_classification\": {\n              \"confusion_matrices\": [\n                {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                }\n              ],\n              \"roc_curves\": [\n                {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                }\n              ]\n            },\n            \"multi_class_classification\": {\n              \"one_vs_all\": [\n                {\n                  \"class\": \"<string>\",\n                  \"confusion_matrix\": {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  \"roc_curve\": {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"confusion_matrix_location\": \"<string>\",\n                  \"roc_curve_location\": \"<string>\"\n                },\n                {\n                  \"class\": \"<string>\",\n                  \"confusion_matrix\": {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  \"roc_curve\": {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"confusion_matrix_location\": \"<string>\",\n                  \"roc_curve_location\": \"<string>\"\n                }\n              ],\n              \"one_vs_all_location\": \"<string>\"\n            },\n            \"features_importance\": [\n              {\n                \"stage\": \"<string>\",\n                \"computation_type\": \"<string>\",\n                \"features\": {}\n              },\n              {\n                \"stage\": \"<string>\",\n                \"computation_type\": \"<string>\",\n                \"features\": {}\n              }\n            ],\n            \"schema\": \"<string>\",\n            \"estimators\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"incremental_training\": {\n              \"iteration\": \"<integer>\",\n              \"total_iterations\": \"<integer>\",\n              \"measures_location\": \"<string>\",\n              \"train_batch_samples_count\": \"<integer>\",\n              \"holdout_samples_count\": \"<integer>\",\n              \"early_stop_triggered\": \"<boolean>\"\n            },\n            \"prediction_type\": \"regression\"\n          }\n        },\n        {\n          \"timestamp\": \"<dateTime>\",\n          \"iteration\": \"<integer>\",\n          \"ml_metrics\": {\n            \"id_2_\": \"<number>\",\n            \"elit__c\": \"<number>\"\n          },\n          \"ts_metrics\": {\n            \"training\": {\n              \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n            }\n          },\n          \"tsad_metrics\": {\n            \"iterations\": [\n              {\n                \"average_precision\": {\n                  \"localized_extreme\": \"<number>\",\n                  \"level_shift\": \"<number>\",\n                  \"variance\": \"<number>\",\n                  \"trend\": \"<number>\"\n                },\n                \"roc_auc\": {},\n                \"f1\": {},\n                \"precision\": {},\n                \"recall\": {}\n              },\n              {\n                \"average_precision\": {\n                  \"localized_extreme\": \"<number>\",\n                  \"level_shift\": \"<number>\",\n                  \"variance\": \"<number>\",\n                  \"trend\": \"<number>\"\n                },\n                \"roc_auc\": {},\n                \"f1\": {},\n                \"precision\": {},\n                \"recall\": {}\n              }\n            ],\n            \"agg\": {\n              \"average_precision\": {\n                \"level_shift\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"localized_extreme\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"trend\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"variance\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                }\n              },\n              \"f1\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"precision\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"recall\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"roc_auc\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              }\n            },\n            \"supporting_rank\": {\n              \"average_precision\": {\n                \"level_shift\": {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              }\n            },\n            \"aggregated_score\": [\n              {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              }\n            ]\n          },\n          \"ml_federated_metrics\": {\n            \"sint_4\": {\n              \"remote_training_systems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                },\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                }\n              ],\n              \"global\": \"<number>\"\n            }\n          },\n          \"context\": {\n            \"deployment_id\": \"<string>\",\n            \"intermediate_model\": {\n              \"name\": \"<string>\",\n              \"process\": \"<string>\",\n              \"location\": {\n                \"pipeline\": \"<string>\",\n                \"pipeline_model\": \"<string>\",\n                \"model\": \"<string>\"\n              },\n              \"notebook_location\": \"<string>\",\n              \"sdk_notebook_location\": \"<string>\",\n              \"pipeline_nodes\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"composition_steps\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"duration\": \"<integer>\",\n              \"model_asset\": \"<string>\"\n            },\n            \"phase\": \"<string>\",\n            \"step\": {\n              \"name\": \"<string>\",\n              \"id\": \"<string>\",\n              \"started_at\": \"<dateTime>\",\n              \"completed_at\": \"<dateTime>\",\n              \"hyper_parameters\": {},\n              \"data_allocation\": \"<integer>\",\n              \"estimator\": \"<string>\",\n              \"transformer\": \"<string>\",\n              \"score\": \"<number>\"\n            },\n            \"binary_classification\": {\n              \"confusion_matrices\": [\n                {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                }\n              ],\n              \"roc_curves\": [\n                {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                }\n              ]\n            },\n            \"multi_class_classification\": {\n              \"one_vs_all\": [\n                {\n                  \"class\": \"<string>\",\n                  \"confusion_matrix\": {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  \"roc_curve\": {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"confusion_matrix_location\": \"<string>\",\n                  \"roc_curve_location\": \"<string>\"\n                },\n                {\n                  \"class\": \"<string>\",\n                  \"confusion_matrix\": {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  \"roc_curve\": {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"confusion_matrix_location\": \"<string>\",\n                  \"roc_curve_location\": \"<string>\"\n                }\n              ],\n              \"one_vs_all_location\": \"<string>\"\n            },\n            \"features_importance\": [\n              {\n                \"stage\": \"<string>\",\n                \"computation_type\": \"<string>\",\n                \"features\": {}\n              },\n              {\n                \"stage\": \"<string>\",\n                \"computation_type\": \"<string>\",\n                \"features\": {}\n              }\n            ],\n            \"schema\": \"<string>\",\n            \"estimators\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"incremental_training\": {\n              \"iteration\": \"<integer>\",\n              \"total_iterations\": \"<integer>\",\n              \"measures_location\": \"<string>\",\n              \"train_batch_samples_count\": \"<integer>\",\n              \"holdout_samples_count\": \"<integer>\",\n              \"early_stop_triggered\": \"<boolean>\"\n            },\n            \"prediction_type\": \"forecasting\"\n          }\n        }\n      ],\n      \"failure\": {\n        \"trace\": \"<string>\",\n        \"errors\": [\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          }\n        ]\n      }\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/trainings/:training_id?version=<date>&space_id=<string>&project_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"trainings",
																":training_id"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																},
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																}
															],
															"variable": [
																{
																	"key": "training_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new WML training",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"results_reference\": {\n    \"type\": \"container\",\n    \"location\": {\n      \"commodo_d\": \"<string>\",\n      \"ut_998\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"avg\",\n    \"model\": {\n      \"type\": \"keras\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"error\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"culpa718\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"qui_9\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"reprehenderit80b\": \"<string>\",\n        \"Lorem__2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"essee\": \"<string>\",\n        \"officiae8f\": \"<string>\",\n        \"exd2\": \"<string>\",\n        \"exa\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sunt_6\": -53430316.03584398\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/trainings?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"trainings"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new WML training.\n"
									},
									"response": [
										{
											"name": "The training job has been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"results_reference\": {\n    \"type\": \"container\",\n    \"location\": {\n      \"commodo_d\": \"<string>\",\n      \"ut_998\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"avg\",\n    \"model\": {\n      \"type\": \"keras\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"error\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"culpa718\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"qui_9\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"reprehenderit80b\": \"<string>\",\n        \"Lorem__2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"essee\": \"<string>\",\n        \"officiae8f\": \"<string>\",\n        \"exd2\": \"<string>\",\n        \"exa\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sunt_6\": -53430316.03584398\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"results_reference\": {\n      \"type\": \"data_asset\",\n      \"location\": {\n        \"dolor_3\": \"<string>\",\n        \"commodo_71\": \"<string>\",\n        \"magna_0f9\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"connection\": {}\n    },\n    \"experiment\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"data_bindings\": [\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        },\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        }\n      ],\n      \"nodes_parameters\": [\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        },\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        }\n      ],\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"hybrid_pipeline_hardware_specs\": [\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        },\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        }\n      ]\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"command\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"federated_learning\": {\n      \"remote_training\": {\n        \"remote_training_systems\": [\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          }\n        ],\n        \"quorum\": \"<double>\",\n        \"max_timeout\": \"<integer>\"\n      },\n      \"fusion_type\": \"spahm\",\n      \"model\": {\n        \"type\": \"tensorflow\",\n        \"spec\": {\n          \"href\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        },\n        \"model_file\": \"<string>\"\n      },\n      \"rounds\": \"<integer>\",\n      \"termination_predicate\": \"<string>\",\n      \"epochs\": \"<integer>\",\n      \"optimizer\": {\n        \"name\": \"<string>\",\n        \"spec\": {}\n      },\n      \"loss\": \"<string>\",\n      \"metrics\": \"<string>\",\n      \"max_depth\": \"<integer>\",\n      \"learning_rate\": \"<double>\",\n      \"l2_regularization\": \"<double>\",\n      \"max_bins\": \"<integer>\",\n      \"max_leaf_nodes\": \"<integer>\",\n      \"min_samples_leaf\": \"<integer>\",\n      \"random_state\": \"<integer>\",\n      \"verbose\": \"<boolean>\",\n      \"num_classes\": \"<integer>\",\n      \"byzantine_threshold\": \"<integer>\",\n      \"sigma\": \"<double>\",\n      \"sigma0\": \"<double>\",\n      \"gamma\": \"<double>\",\n      \"iters\": \"<integer>\",\n      \"save_intermediate_models\": \"<boolean>\",\n      \"crypto\": {\n        \"cipher_spec\": \"encryption_level_2\"\n      },\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<string>\",\n      \"log_level\": \"critical\",\n      \"sketch_accuracy_vs_privacy\": 0.01\n    },\n    \"training_data_references\": [\n      {\n        \"type\": \"connection_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"cillum_9\": \"<string>\",\n          \"enim_3\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"sedb\": \"<string>\",\n          \"labore_24\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"enim_81_\": \"<string>\",\n          \"in0ed\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"in7c\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"sint_9f\": \"Lorem deserunt irure aute\",\n      \"incididunt_b44\": 41323566\n    },\n    \"status\": {\n      \"state\": \"storing\",\n      \"running_at\": \"<dateTime>\",\n      \"completed_at\": \"<dateTime>\",\n      \"iteration\": \"<number>\",\n      \"total_iterations\": \"<number>\",\n      \"compute_usage_metrics\": {\n        \"timestamp\": \"<dateTime>\",\n        \"gpu_count\": \"<number>\",\n        \"gpus\": [\n          {\n            \"type\": \"<string>\",\n            \"memory\": {\n              \"measure\": \"<string>\",\n              \"value\": \"<double>\"\n            }\n          },\n          {\n            \"type\": \"<string>\",\n            \"memory\": {\n              \"measure\": \"<string>\",\n              \"value\": \"<double>\"\n            }\n          }\n        ]\n      },\n      \"hpo\": {\n        \"hyper_parameters\": {},\n        \"node_id\": \"<string>\"\n      },\n      \"federated_learning_info\": {\n        \"aggregator\": {\n          \"connection\": {\n            \"host\": \"<string>\",\n            \"port\": \"<number>\",\n            \"endpoint\": \"<string>\",\n            \"protocol\": \"wss\",\n            \"headers\": {}\n          }\n        },\n        \"remote_training_systems\": [\n          {\n            \"states\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"state\": \"<string>\",\n              \"registration_log\": [\n                {\n                  \"timestamp\": \"<dateTime>\",\n                  \"event\": \"<string>\"\n                },\n                {\n                  \"timestamp\": \"<dateTime>\",\n                  \"event\": \"<string>\"\n                }\n              ]\n            }\n          },\n          {\n            \"states\": {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"state\": \"<string>\",\n              \"registration_log\": [\n                {\n                  \"timestamp\": \"<dateTime>\",\n                  \"event\": \"<string>\"\n                },\n                {\n                  \"timestamp\": \"<dateTime>\",\n                  \"event\": \"<string>\"\n                }\n              ]\n            }\n          }\n        ]\n      },\n      \"message\": {\n        \"level\": \"<string>\",\n        \"text\": \"<string>\"\n      },\n      \"metrics\": [\n        {\n          \"timestamp\": \"<dateTime>\",\n          \"iteration\": \"<integer>\",\n          \"ml_metrics\": {\n            \"in_83e\": \"<number>\"\n          },\n          \"ts_metrics\": {\n            \"training\": {\n              \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n            }\n          },\n          \"tsad_metrics\": {\n            \"iterations\": [\n              {\n                \"average_precision\": {\n                  \"localized_extreme\": \"<number>\",\n                  \"level_shift\": \"<number>\",\n                  \"variance\": \"<number>\",\n                  \"trend\": \"<number>\"\n                },\n                \"roc_auc\": {},\n                \"f1\": {},\n                \"precision\": {},\n                \"recall\": {}\n              },\n              {\n                \"average_precision\": {\n                  \"localized_extreme\": \"<number>\",\n                  \"level_shift\": \"<number>\",\n                  \"variance\": \"<number>\",\n                  \"trend\": \"<number>\"\n                },\n                \"roc_auc\": {},\n                \"f1\": {},\n                \"precision\": {},\n                \"recall\": {}\n              }\n            ],\n            \"agg\": {\n              \"average_precision\": {\n                \"level_shift\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"localized_extreme\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"trend\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"variance\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                }\n              },\n              \"f1\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"precision\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"recall\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"roc_auc\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              }\n            },\n            \"supporting_rank\": {\n              \"average_precision\": {\n                \"level_shift\": {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              }\n            },\n            \"aggregated_score\": [\n              {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              }\n            ]\n          },\n          \"ml_federated_metrics\": {\n            \"officia_76\": {\n              \"remote_training_systems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                },\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                }\n              ],\n              \"global\": \"<number>\"\n            },\n            \"consequat_19\": {\n              \"remote_training_systems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                },\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                }\n              ],\n              \"global\": \"<number>\"\n            },\n            \"eiusmod_9\": {\n              \"remote_training_systems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                },\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                }\n              ],\n              \"global\": \"<number>\"\n            }\n          },\n          \"context\": {\n            \"deployment_id\": \"<string>\",\n            \"intermediate_model\": {\n              \"name\": \"<string>\",\n              \"process\": \"<string>\",\n              \"location\": {\n                \"pipeline\": \"<string>\",\n                \"pipeline_model\": \"<string>\",\n                \"model\": \"<string>\"\n              },\n              \"notebook_location\": \"<string>\",\n              \"sdk_notebook_location\": \"<string>\",\n              \"pipeline_nodes\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"composition_steps\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"duration\": \"<integer>\",\n              \"model_asset\": \"<string>\"\n            },\n            \"phase\": \"<string>\",\n            \"step\": {\n              \"name\": \"<string>\",\n              \"id\": \"<string>\",\n              \"started_at\": \"<dateTime>\",\n              \"completed_at\": \"<dateTime>\",\n              \"hyper_parameters\": {},\n              \"data_allocation\": \"<integer>\",\n              \"estimator\": \"<string>\",\n              \"transformer\": \"<string>\",\n              \"score\": \"<number>\"\n            },\n            \"binary_classification\": {\n              \"confusion_matrices\": [\n                {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                }\n              ],\n              \"roc_curves\": [\n                {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                }\n              ]\n            },\n            \"multi_class_classification\": {\n              \"one_vs_all\": [\n                {\n                  \"class\": \"<string>\",\n                  \"confusion_matrix\": {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  \"roc_curve\": {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"confusion_matrix_location\": \"<string>\",\n                  \"roc_curve_location\": \"<string>\"\n                },\n                {\n                  \"class\": \"<string>\",\n                  \"confusion_matrix\": {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  \"roc_curve\": {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"confusion_matrix_location\": \"<string>\",\n                  \"roc_curve_location\": \"<string>\"\n                }\n              ],\n              \"one_vs_all_location\": \"<string>\"\n            },\n            \"features_importance\": [\n              {\n                \"stage\": \"<string>\",\n                \"computation_type\": \"<string>\",\n                \"features\": {}\n              },\n              {\n                \"stage\": \"<string>\",\n                \"computation_type\": \"<string>\",\n                \"features\": {}\n              }\n            ],\n            \"schema\": \"<string>\",\n            \"estimators\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"incremental_training\": {\n              \"iteration\": \"<integer>\",\n              \"total_iterations\": \"<integer>\",\n              \"measures_location\": \"<string>\",\n              \"train_batch_samples_count\": \"<integer>\",\n              \"holdout_samples_count\": \"<integer>\",\n              \"early_stop_triggered\": \"<boolean>\"\n            },\n            \"prediction_type\": \"regression\"\n          }\n        },\n        {\n          \"timestamp\": \"<dateTime>\",\n          \"iteration\": \"<integer>\",\n          \"ml_metrics\": {\n            \"id_2_\": \"<number>\",\n            \"elit__c\": \"<number>\"\n          },\n          \"ts_metrics\": {\n            \"training\": {\n              \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n            }\n          },\n          \"tsad_metrics\": {\n            \"iterations\": [\n              {\n                \"average_precision\": {\n                  \"localized_extreme\": \"<number>\",\n                  \"level_shift\": \"<number>\",\n                  \"variance\": \"<number>\",\n                  \"trend\": \"<number>\"\n                },\n                \"roc_auc\": {},\n                \"f1\": {},\n                \"precision\": {},\n                \"recall\": {}\n              },\n              {\n                \"average_precision\": {\n                  \"localized_extreme\": \"<number>\",\n                  \"level_shift\": \"<number>\",\n                  \"variance\": \"<number>\",\n                  \"trend\": \"<number>\"\n                },\n                \"roc_auc\": {},\n                \"f1\": {},\n                \"precision\": {},\n                \"recall\": {}\n              }\n            ],\n            \"agg\": {\n              \"average_precision\": {\n                \"level_shift\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"localized_extreme\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"trend\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                \"variance\": {\n                  \"mean\": \"<number>\",\n                  \"range\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                }\n              },\n              \"f1\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"precision\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"recall\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              },\n              \"roc_auc\": {\n                \"level_shift\": {},\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              }\n            },\n            \"supporting_rank\": {\n              \"average_precision\": {\n                \"level_shift\": {\n                  \"p1\": \"<number>\",\n                  \"p2\": \"<number>\",\n                  \"p3\": \"<number>\",\n                  \"p4\": \"<number>\",\n                  \"p5\": \"<number>\",\n                  \"p6\": \"<number>\"\n                },\n                \"localized_extreme\": {},\n                \"trend\": {},\n                \"variance\": {}\n              }\n            },\n            \"aggregated_score\": [\n              {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              },\n              {\n                \"p1\": \"<number>\",\n                \"p2\": \"<number>\",\n                \"p3\": \"<number>\",\n                \"p4\": \"<number>\",\n                \"p5\": \"<number>\",\n                \"p6\": \"<number>\"\n              }\n            ]\n          },\n          \"ml_federated_metrics\": {\n            \"sint_4\": {\n              \"remote_training_systems\": [\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                },\n                {\n                  \"id\": \"<string>\",\n                  \"local\": \"<number>\",\n                  \"fused\": \"<number>\"\n                }\n              ],\n              \"global\": \"<number>\"\n            }\n          },\n          \"context\": {\n            \"deployment_id\": \"<string>\",\n            \"intermediate_model\": {\n              \"name\": \"<string>\",\n              \"process\": \"<string>\",\n              \"location\": {\n                \"pipeline\": \"<string>\",\n                \"pipeline_model\": \"<string>\",\n                \"model\": \"<string>\"\n              },\n              \"notebook_location\": \"<string>\",\n              \"sdk_notebook_location\": \"<string>\",\n              \"pipeline_nodes\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"composition_steps\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"duration\": \"<integer>\",\n              \"model_asset\": \"<string>\"\n            },\n            \"phase\": \"<string>\",\n            \"step\": {\n              \"name\": \"<string>\",\n              \"id\": \"<string>\",\n              \"started_at\": \"<dateTime>\",\n              \"completed_at\": \"<dateTime>\",\n              \"hyper_parameters\": {},\n              \"data_allocation\": \"<integer>\",\n              \"estimator\": \"<string>\",\n              \"transformer\": \"<string>\",\n              \"score\": \"<number>\"\n            },\n            \"binary_classification\": {\n              \"confusion_matrices\": [\n                {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                },\n                {\n                  \"true_class\": \"<string>\",\n                  \"tp\": \"<integer>\",\n                  \"tn\": \"<integer>\",\n                  \"fp\": \"<integer>\",\n                  \"fn\": \"<integer>\"\n                }\n              ],\n              \"roc_curves\": [\n                {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                },\n                {\n                  \"true_class\": \"<string>\",\n                  \"tpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"fpr\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ],\n                  \"thresholds\": [\n                    \"<number>\",\n                    \"<number>\"\n                  ]\n                }\n              ]\n            },\n            \"multi_class_classification\": {\n              \"one_vs_all\": [\n                {\n                  \"class\": \"<string>\",\n                  \"confusion_matrix\": {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  \"roc_curve\": {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"confusion_matrix_location\": \"<string>\",\n                  \"roc_curve_location\": \"<string>\"\n                },\n                {\n                  \"class\": \"<string>\",\n                  \"confusion_matrix\": {\n                    \"true_class\": \"<string>\",\n                    \"tp\": \"<integer>\",\n                    \"tn\": \"<integer>\",\n                    \"fp\": \"<integer>\",\n                    \"fn\": \"<integer>\"\n                  },\n                  \"roc_curve\": {\n                    \"true_class\": \"<string>\",\n                    \"tpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"fpr\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ],\n                    \"thresholds\": [\n                      \"<number>\",\n                      \"<number>\"\n                    ]\n                  },\n                  \"confusion_matrix_location\": \"<string>\",\n                  \"roc_curve_location\": \"<string>\"\n                }\n              ],\n              \"one_vs_all_location\": \"<string>\"\n            },\n            \"features_importance\": [\n              {\n                \"stage\": \"<string>\",\n                \"computation_type\": \"<string>\",\n                \"features\": {}\n              },\n              {\n                \"stage\": \"<string>\",\n                \"computation_type\": \"<string>\",\n                \"features\": {}\n              }\n            ],\n            \"schema\": \"<string>\",\n            \"estimators\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"incremental_training\": {\n              \"iteration\": \"<integer>\",\n              \"total_iterations\": \"<integer>\",\n              \"measures_location\": \"<string>\",\n              \"train_batch_samples_count\": \"<integer>\",\n              \"holdout_samples_count\": \"<integer>\",\n              \"early_stop_triggered\": \"<boolean>\"\n            },\n            \"prediction_type\": \"forecasting\"\n          }\n        }\n      ],\n      \"failure\": {\n        \"trace\": \"<string>\",\n        \"errors\": [\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          },\n          {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\",\n            \"more_info\": \"<string>\"\n          }\n        ]\n      }\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"results_reference\": {\n    \"type\": \"container\",\n    \"location\": {\n      \"commodo_d\": \"<string>\",\n      \"ut_998\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"avg\",\n    \"model\": {\n      \"type\": \"keras\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"error\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"culpa718\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"qui_9\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"reprehenderit80b\": \"<string>\",\n        \"Lorem__2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"essee\": \"<string>\",\n        \"officiae8f\": \"<string>\",\n        \"exd2\": \"<string>\",\n        \"exa\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sunt_6\": -53430316.03584398\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"results_reference\": {\n    \"type\": \"container\",\n    \"location\": {\n      \"commodo_d\": \"<string>\",\n      \"ut_998\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"avg\",\n    \"model\": {\n      \"type\": \"keras\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"error\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"culpa718\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"qui_9\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"reprehenderit80b\": \"<string>\",\n        \"Lorem__2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"essee\": \"<string>\",\n        \"officiae8f\": \"<string>\",\n        \"exd2\": \"<string>\",\n        \"exa\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sunt_6\": -53430316.03584398\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"results_reference\": {\n    \"type\": \"container\",\n    \"location\": {\n      \"commodo_d\": \"<string>\",\n      \"ut_998\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"avg\",\n    \"model\": {\n      \"type\": \"keras\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"error\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"culpa718\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"qui_9\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"reprehenderit80b\": \"<string>\",\n        \"Lorem__2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"essee\": \"<string>\",\n        \"officiae8f\": \"<string>\",\n        \"exd2\": \"<string>\",\n        \"exa\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sunt_6\": -53430316.03584398\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"results_reference\": {\n    \"type\": \"container\",\n    \"location\": {\n      \"commodo_d\": \"<string>\",\n      \"ut_998\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"avg\",\n    \"model\": {\n      \"type\": \"keras\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"error\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"culpa718\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"qui_9\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"reprehenderit80b\": \"<string>\",\n        \"Lorem__2\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"essee\": \"<string>\",\n        \"officiae8f\": \"<string>\",\n        \"exd2\": \"<string>\",\n        \"exa\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sunt_6\": -53430316.03584398\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the list of trainings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/trainings?start=<string>&limit=100&total_count=<boolean>&tag.value=<string>&type=<string>&state=<string>&space_id=<string>&project_id=<string>&parent_id=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"trainings"
											],
											"query": [
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user. It is generated by the service and it is set in the href available in the `next` field."
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. Default value is 100. Max value is 200."
												},
												{
													"key": "total_count",
													"value": "<boolean>",
													"description": "Compute the total count. May have performance impact."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag value."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter based on 'pipeline' or 'experiment' trainings. Example: `type=pipeline`. If not provided, returns all the trainings.\n"
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Filter based on on the training job state: queued, running, completed, failed etc.\n"
												},
												{
													"key": "space_id",
													"value": "<string>",
													"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "project_id",
													"value": "<string>",
													"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "parent_id",
													"value": "<string>",
													"description": "Return the training jobs that are sub-jobs of this parent_id job. The parent_id can be the experiment job ID.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the list of trainings for the specified space or project.\n"
									},
									"response": [
										{
											"name": "OK.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?start=<string>&limit=100&total_count=<boolean>&tag.value=<string>&type=<string>&state=<string>&space_id=<string>&project_id=<string>&parent_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user. It is generated by the service and it is set in the href available in the `next` field."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. Default value is 100. Max value is 200."
														},
														{
															"key": "total_count",
															"value": "<boolean>",
															"description": "Compute the total count. May have performance impact."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag value."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter based on 'pipeline' or 'experiment' trainings. Example: `type=pipeline`. If not provided, returns all the trainings.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the training job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "parent_id",
															"value": "<string>",
															"description": "Return the training jobs that are sub-jobs of this parent_id job. The parent_id can be the experiment job ID.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"results_reference\": {\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"pariatur0ac\": \"<string>\",\n            \"consequat__2\": \"<string>\",\n            \"anim_c93\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"connection\": {}\n        },\n        \"experiment\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"command\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"federated_learning\": {\n          \"remote_training\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              }\n            ],\n            \"quorum\": \"<double>\",\n            \"max_timeout\": \"<integer>\"\n          },\n          \"fusion_type\": \"avg\",\n          \"model\": {\n            \"type\": \"tensorflow_classifier\",\n            \"spec\": {\n              \"href\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\"\n              }\n            },\n            \"model_file\": \"<string>\"\n          },\n          \"rounds\": \"<integer>\",\n          \"termination_predicate\": \"<string>\",\n          \"epochs\": \"<integer>\",\n          \"optimizer\": {\n            \"name\": \"<string>\",\n            \"spec\": {}\n          },\n          \"loss\": \"<string>\",\n          \"metrics\": \"<string>\",\n          \"max_depth\": \"<integer>\",\n          \"learning_rate\": \"<double>\",\n          \"l2_regularization\": \"<double>\",\n          \"max_bins\": \"<integer>\",\n          \"max_leaf_nodes\": \"<integer>\",\n          \"min_samples_leaf\": \"<integer>\",\n          \"random_state\": \"<integer>\",\n          \"verbose\": \"<boolean>\",\n          \"num_classes\": \"<integer>\",\n          \"byzantine_threshold\": \"<integer>\",\n          \"sigma\": \"<double>\",\n          \"sigma0\": \"<double>\",\n          \"gamma\": \"<double>\",\n          \"iters\": \"<integer>\",\n          \"save_intermediate_models\": \"<boolean>\",\n          \"crypto\": {\n            \"cipher_spec\": \"encryption_level_2\"\n          },\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"version\": \"<string>\",\n          \"log_level\": \"critical\",\n          \"sketch_accuracy_vs_privacy\": 0.01\n        },\n        \"training_data_references\": [\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"qui_\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"est_f\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"fugiat5a\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"doloreb67\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"officia__6c\": true\n        },\n        \"status\": {\n          \"state\": \"completed\",\n          \"running_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"iteration\": \"<number>\",\n          \"total_iterations\": \"<number>\",\n          \"compute_usage_metrics\": {\n            \"timestamp\": \"<dateTime>\",\n            \"gpu_count\": \"<number>\",\n            \"gpus\": [\n              {\n                \"type\": \"<string>\",\n                \"memory\": {\n                  \"measure\": \"<string>\",\n                  \"value\": \"<double>\"\n                }\n              },\n              {\n                \"type\": \"<string>\",\n                \"memory\": {\n                  \"measure\": \"<string>\",\n                  \"value\": \"<double>\"\n                }\n              }\n            ]\n          },\n          \"hpo\": {\n            \"hyper_parameters\": {},\n            \"node_id\": \"<string>\"\n          },\n          \"federated_learning_info\": {\n            \"aggregator\": {\n              \"connection\": {\n                \"host\": \"<string>\",\n                \"port\": \"<number>\",\n                \"endpoint\": \"<string>\",\n                \"protocol\": \"wss\",\n                \"headers\": {}\n              }\n            },\n            \"remote_training_systems\": [\n              {\n                \"states\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"state\": \"<string>\",\n                  \"registration_log\": [\n                    {\n                      \"timestamp\": \"<dateTime>\",\n                      \"event\": \"<string>\"\n                    },\n                    {\n                      \"timestamp\": \"<dateTime>\",\n                      \"event\": \"<string>\"\n                    }\n                  ]\n                }\n              },\n              {\n                \"states\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"state\": \"<string>\",\n                  \"registration_log\": [\n                    {\n                      \"timestamp\": \"<dateTime>\",\n                      \"event\": \"<string>\"\n                    },\n                    {\n                      \"timestamp\": \"<dateTime>\",\n                      \"event\": \"<string>\"\n                    }\n                  ]\n                }\n              }\n            ]\n          },\n          \"message\": {\n            \"level\": \"<string>\",\n            \"text\": \"<string>\"\n          },\n          \"metrics\": [\n            {\n              \"timestamp\": \"<dateTime>\",\n              \"iteration\": \"<integer>\",\n              \"ml_metrics\": {\n                \"enim8__\": \"<number>\",\n                \"pariatur7__\": \"<number>\",\n                \"ipsum_20f\": \"<number>\",\n                \"ida1c\": \"<number>\",\n                \"do_755\": \"<number>\"\n              },\n              \"ts_metrics\": {\n                \"training\": {\n                  \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n                }\n              },\n              \"tsad_metrics\": {\n                \"iterations\": [\n                  {\n                    \"average_precision\": {\n                      \"localized_extreme\": \"<number>\",\n                      \"level_shift\": \"<number>\",\n                      \"variance\": \"<number>\",\n                      \"trend\": \"<number>\"\n                    },\n                    \"roc_auc\": {},\n                    \"f1\": {},\n                    \"precision\": {},\n                    \"recall\": {}\n                  },\n                  {\n                    \"average_precision\": {\n                      \"localized_extreme\": \"<number>\",\n                      \"level_shift\": \"<number>\",\n                      \"variance\": \"<number>\",\n                      \"trend\": \"<number>\"\n                    },\n                    \"roc_auc\": {},\n                    \"f1\": {},\n                    \"precision\": {},\n                    \"recall\": {}\n                  }\n                ],\n                \"agg\": {\n                  \"average_precision\": {\n                    \"level_shift\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"localized_extreme\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"trend\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"variance\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    }\n                  },\n                  \"f1\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"precision\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"recall\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"roc_auc\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  }\n                },\n                \"supporting_rank\": {\n                  \"average_precision\": {\n                    \"level_shift\": {\n                      \"p1\": \"<number>\",\n                      \"p2\": \"<number>\",\n                      \"p3\": \"<number>\",\n                      \"p4\": \"<number>\",\n                      \"p5\": \"<number>\",\n                      \"p6\": \"<number>\"\n                    },\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  }\n                },\n                \"aggregated_score\": [\n                  {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  }\n                ]\n              },\n              \"ml_federated_metrics\": {\n                \"reprehenderit_9\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                },\n                \"minim_5a\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                },\n                \"velit2e\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                },\n                \"irure_e7\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                },\n                \"in_49\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                }\n              },\n              \"context\": {\n                \"deployment_id\": \"<string>\",\n                \"intermediate_model\": {\n                  \"name\": \"<string>\",\n                  \"process\": \"<string>\",\n                  \"location\": {\n                    \"pipeline\": \"<string>\",\n                    \"pipeline_model\": \"<string>\",\n                    \"model\": \"<string>\"\n                  },\n                  \"notebook_location\": \"<string>\",\n                  \"sdk_notebook_location\": \"<string>\",\n                  \"pipeline_nodes\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"composition_steps\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"duration\": \"<integer>\",\n                  \"model_asset\": \"<string>\"\n                },\n                \"phase\": \"<string>\",\n                \"step\": {\n                  \"name\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"started_at\": \"<dateTime>\",\n                  \"completed_at\": \"<dateTime>\",\n                  \"hyper_parameters\": {},\n                  \"data_allocation\": \"<integer>\",\n                  \"estimator\": \"<string>\",\n                  \"transformer\": \"<string>\",\n                  \"score\": \"<number>\"\n                },\n                \"binary_classification\": {\n                  \"confusion_matrices\": [\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    }\n                  ],\n                  \"roc_curves\": [\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    }\n                  ]\n                },\n                \"multi_class_classification\": {\n                  \"one_vs_all\": [\n                    {\n                      \"class\": \"<string>\",\n                      \"confusion_matrix\": {\n                        \"true_class\": \"<string>\",\n                        \"tp\": \"<integer>\",\n                        \"tn\": \"<integer>\",\n                        \"fp\": \"<integer>\",\n                        \"fn\": \"<integer>\"\n                      },\n                      \"roc_curve\": {\n                        \"true_class\": \"<string>\",\n                        \"tpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"fpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"thresholds\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ]\n                      },\n                      \"confusion_matrix_location\": \"<string>\",\n                      \"roc_curve_location\": \"<string>\"\n                    },\n                    {\n                      \"class\": \"<string>\",\n                      \"confusion_matrix\": {\n                        \"true_class\": \"<string>\",\n                        \"tp\": \"<integer>\",\n                        \"tn\": \"<integer>\",\n                        \"fp\": \"<integer>\",\n                        \"fn\": \"<integer>\"\n                      },\n                      \"roc_curve\": {\n                        \"true_class\": \"<string>\",\n                        \"tpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"fpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"thresholds\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ]\n                      },\n                      \"confusion_matrix_location\": \"<string>\",\n                      \"roc_curve_location\": \"<string>\"\n                    }\n                  ],\n                  \"one_vs_all_location\": \"<string>\"\n                },\n                \"features_importance\": [\n                  {\n                    \"stage\": \"<string>\",\n                    \"computation_type\": \"<string>\",\n                    \"features\": {}\n                  },\n                  {\n                    \"stage\": \"<string>\",\n                    \"computation_type\": \"<string>\",\n                    \"features\": {}\n                  }\n                ],\n                \"schema\": \"<string>\",\n                \"estimators\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"incremental_training\": {\n                  \"iteration\": \"<integer>\",\n                  \"total_iterations\": \"<integer>\",\n                  \"measures_location\": \"<string>\",\n                  \"train_batch_samples_count\": \"<integer>\",\n                  \"holdout_samples_count\": \"<integer>\",\n                  \"early_stop_triggered\": \"<boolean>\"\n                },\n                \"prediction_type\": \"regression\"\n              }\n            },\n            {\n              \"timestamp\": \"<dateTime>\",\n              \"iteration\": \"<integer>\",\n              \"ml_metrics\": {\n                \"dolor_8a\": \"<number>\",\n                \"dolor_5\": \"<number>\"\n              },\n              \"ts_metrics\": {\n                \"training\": {\n                  \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n                }\n              },\n              \"tsad_metrics\": {\n                \"iterations\": [\n                  {\n                    \"average_precision\": {\n                      \"localized_extreme\": \"<number>\",\n                      \"level_shift\": \"<number>\",\n                      \"variance\": \"<number>\",\n                      \"trend\": \"<number>\"\n                    },\n                    \"roc_auc\": {},\n                    \"f1\": {},\n                    \"precision\": {},\n                    \"recall\": {}\n                  },\n                  {\n                    \"average_precision\": {\n                      \"localized_extreme\": \"<number>\",\n                      \"level_shift\": \"<number>\",\n                      \"variance\": \"<number>\",\n                      \"trend\": \"<number>\"\n                    },\n                    \"roc_auc\": {},\n                    \"f1\": {},\n                    \"precision\": {},\n                    \"recall\": {}\n                  }\n                ],\n                \"agg\": {\n                  \"average_precision\": {\n                    \"level_shift\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"localized_extreme\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"trend\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"variance\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    }\n                  },\n                  \"f1\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"precision\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"recall\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"roc_auc\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  }\n                },\n                \"supporting_rank\": {\n                  \"average_precision\": {\n                    \"level_shift\": {\n                      \"p1\": \"<number>\",\n                      \"p2\": \"<number>\",\n                      \"p3\": \"<number>\",\n                      \"p4\": \"<number>\",\n                      \"p5\": \"<number>\",\n                      \"p6\": \"<number>\"\n                    },\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  }\n                },\n                \"aggregated_score\": [\n                  {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  }\n                ]\n              },\n              \"ml_federated_metrics\": {\n                \"Duis_5\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                }\n              },\n              \"context\": {\n                \"deployment_id\": \"<string>\",\n                \"intermediate_model\": {\n                  \"name\": \"<string>\",\n                  \"process\": \"<string>\",\n                  \"location\": {\n                    \"pipeline\": \"<string>\",\n                    \"pipeline_model\": \"<string>\",\n                    \"model\": \"<string>\"\n                  },\n                  \"notebook_location\": \"<string>\",\n                  \"sdk_notebook_location\": \"<string>\",\n                  \"pipeline_nodes\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"composition_steps\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"duration\": \"<integer>\",\n                  \"model_asset\": \"<string>\"\n                },\n                \"phase\": \"<string>\",\n                \"step\": {\n                  \"name\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"started_at\": \"<dateTime>\",\n                  \"completed_at\": \"<dateTime>\",\n                  \"hyper_parameters\": {},\n                  \"data_allocation\": \"<integer>\",\n                  \"estimator\": \"<string>\",\n                  \"transformer\": \"<string>\",\n                  \"score\": \"<number>\"\n                },\n                \"binary_classification\": {\n                  \"confusion_matrices\": [\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    }\n                  ],\n                  \"roc_curves\": [\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    }\n                  ]\n                },\n                \"multi_class_classification\": {\n                  \"one_vs_all\": [\n                    {\n                      \"class\": \"<string>\",\n                      \"confusion_matrix\": {\n                        \"true_class\": \"<string>\",\n                        \"tp\": \"<integer>\",\n                        \"tn\": \"<integer>\",\n                        \"fp\": \"<integer>\",\n                        \"fn\": \"<integer>\"\n                      },\n                      \"roc_curve\": {\n                        \"true_class\": \"<string>\",\n                        \"tpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"fpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"thresholds\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ]\n                      },\n                      \"confusion_matrix_location\": \"<string>\",\n                      \"roc_curve_location\": \"<string>\"\n                    },\n                    {\n                      \"class\": \"<string>\",\n                      \"confusion_matrix\": {\n                        \"true_class\": \"<string>\",\n                        \"tp\": \"<integer>\",\n                        \"tn\": \"<integer>\",\n                        \"fp\": \"<integer>\",\n                        \"fn\": \"<integer>\"\n                      },\n                      \"roc_curve\": {\n                        \"true_class\": \"<string>\",\n                        \"tpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"fpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"thresholds\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ]\n                      },\n                      \"confusion_matrix_location\": \"<string>\",\n                      \"roc_curve_location\": \"<string>\"\n                    }\n                  ],\n                  \"one_vs_all_location\": \"<string>\"\n                },\n                \"features_importance\": [\n                  {\n                    \"stage\": \"<string>\",\n                    \"computation_type\": \"<string>\",\n                    \"features\": {}\n                  },\n                  {\n                    \"stage\": \"<string>\",\n                    \"computation_type\": \"<string>\",\n                    \"features\": {}\n                  }\n                ],\n                \"schema\": \"<string>\",\n                \"estimators\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"incremental_training\": {\n                  \"iteration\": \"<integer>\",\n                  \"total_iterations\": \"<integer>\",\n                  \"measures_location\": \"<string>\",\n                  \"train_batch_samples_count\": \"<integer>\",\n                  \"holdout_samples_count\": \"<integer>\",\n                  \"early_stop_triggered\": \"<boolean>\"\n                },\n                \"prediction_type\": \"binary\"\n              }\n            }\n          ],\n          \"failure\": {\n            \"trace\": \"<string>\",\n            \"errors\": [\n              {\n                \"code\": \"<string>\",\n                \"message\": \"<string>\",\n                \"more_info\": \"<string>\"\n              },\n              {\n                \"code\": \"<string>\",\n                \"message\": \"<string>\",\n                \"more_info\": \"<string>\"\n              }\n            ]\n          }\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"results_reference\": {\n          \"type\": \"connection_asset\",\n          \"location\": {\n            \"non28_\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"connection\": {}\n        },\n        \"experiment\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"command\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"federated_learning\": {\n          \"remote_training\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              }\n            ],\n            \"quorum\": \"<double>\",\n            \"max_timeout\": \"<integer>\"\n          },\n          \"fusion_type\": \"iter_avg\",\n          \"model\": {\n            \"type\": \"dt\",\n            \"spec\": {\n              \"href\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\"\n              }\n            },\n            \"model_file\": \"<string>\"\n          },\n          \"rounds\": \"<integer>\",\n          \"termination_predicate\": \"<string>\",\n          \"epochs\": \"<integer>\",\n          \"optimizer\": {\n            \"name\": \"<string>\",\n            \"spec\": {}\n          },\n          \"loss\": \"<string>\",\n          \"metrics\": \"<string>\",\n          \"max_depth\": \"<integer>\",\n          \"learning_rate\": \"<double>\",\n          \"l2_regularization\": \"<double>\",\n          \"max_bins\": \"<integer>\",\n          \"max_leaf_nodes\": \"<integer>\",\n          \"min_samples_leaf\": \"<integer>\",\n          \"random_state\": \"<integer>\",\n          \"verbose\": \"<boolean>\",\n          \"num_classes\": \"<integer>\",\n          \"byzantine_threshold\": \"<integer>\",\n          \"sigma\": \"<double>\",\n          \"sigma0\": \"<double>\",\n          \"gamma\": \"<double>\",\n          \"iters\": \"<integer>\",\n          \"save_intermediate_models\": \"<boolean>\",\n          \"crypto\": {\n            \"cipher_spec\": \"encryption_level_1\"\n          },\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"version\": \"<string>\",\n          \"log_level\": \"debug\",\n          \"sketch_accuracy_vs_privacy\": 0.01\n        },\n        \"training_data_references\": [\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"Utce3\": \"<string>\",\n              \"mollitc_\": \"<string>\",\n              \"ut_2\": \"<string>\",\n              \"Excepteur_0\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"ullamcoa65\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"et0\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"url\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"ut_4\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"est_76\": -10083866.017019272,\n          \"laboris97\": false,\n          \"Lorem0\": \"ut anim pari\"\n        },\n        \"status\": {\n          \"state\": \"completed\",\n          \"running_at\": \"<dateTime>\",\n          \"completed_at\": \"<dateTime>\",\n          \"iteration\": \"<number>\",\n          \"total_iterations\": \"<number>\",\n          \"compute_usage_metrics\": {\n            \"timestamp\": \"<dateTime>\",\n            \"gpu_count\": \"<number>\",\n            \"gpus\": [\n              {\n                \"type\": \"<string>\",\n                \"memory\": {\n                  \"measure\": \"<string>\",\n                  \"value\": \"<double>\"\n                }\n              },\n              {\n                \"type\": \"<string>\",\n                \"memory\": {\n                  \"measure\": \"<string>\",\n                  \"value\": \"<double>\"\n                }\n              }\n            ]\n          },\n          \"hpo\": {\n            \"hyper_parameters\": {},\n            \"node_id\": \"<string>\"\n          },\n          \"federated_learning_info\": {\n            \"aggregator\": {\n              \"connection\": {\n                \"host\": \"<string>\",\n                \"port\": \"<number>\",\n                \"endpoint\": \"<string>\",\n                \"protocol\": \"wss\",\n                \"headers\": {}\n              }\n            },\n            \"remote_training_systems\": [\n              {\n                \"states\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"state\": \"<string>\",\n                  \"registration_log\": [\n                    {\n                      \"timestamp\": \"<dateTime>\",\n                      \"event\": \"<string>\"\n                    },\n                    {\n                      \"timestamp\": \"<dateTime>\",\n                      \"event\": \"<string>\"\n                    }\n                  ]\n                }\n              },\n              {\n                \"states\": {\n                  \"id\": \"<string>\",\n                  \"name\": \"<string>\",\n                  \"state\": \"<string>\",\n                  \"registration_log\": [\n                    {\n                      \"timestamp\": \"<dateTime>\",\n                      \"event\": \"<string>\"\n                    },\n                    {\n                      \"timestamp\": \"<dateTime>\",\n                      \"event\": \"<string>\"\n                    }\n                  ]\n                }\n              }\n            ]\n          },\n          \"message\": {\n            \"level\": \"<string>\",\n            \"text\": \"<string>\"\n          },\n          \"metrics\": [\n            {\n              \"timestamp\": \"<dateTime>\",\n              \"iteration\": \"<integer>\",\n              \"ml_metrics\": {\n                \"commodo_d24\": \"<number>\",\n                \"cupidatat18\": \"<number>\",\n                \"consectetur62a\": \"<number>\"\n              },\n              \"ts_metrics\": {\n                \"training\": {\n                  \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n                }\n              },\n              \"tsad_metrics\": {\n                \"iterations\": [\n                  {\n                    \"average_precision\": {\n                      \"localized_extreme\": \"<number>\",\n                      \"level_shift\": \"<number>\",\n                      \"variance\": \"<number>\",\n                      \"trend\": \"<number>\"\n                    },\n                    \"roc_auc\": {},\n                    \"f1\": {},\n                    \"precision\": {},\n                    \"recall\": {}\n                  },\n                  {\n                    \"average_precision\": {\n                      \"localized_extreme\": \"<number>\",\n                      \"level_shift\": \"<number>\",\n                      \"variance\": \"<number>\",\n                      \"trend\": \"<number>\"\n                    },\n                    \"roc_auc\": {},\n                    \"f1\": {},\n                    \"precision\": {},\n                    \"recall\": {}\n                  }\n                ],\n                \"agg\": {\n                  \"average_precision\": {\n                    \"level_shift\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"localized_extreme\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"trend\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"variance\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    }\n                  },\n                  \"f1\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"precision\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"recall\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"roc_auc\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  }\n                },\n                \"supporting_rank\": {\n                  \"average_precision\": {\n                    \"level_shift\": {\n                      \"p1\": \"<number>\",\n                      \"p2\": \"<number>\",\n                      \"p3\": \"<number>\",\n                      \"p4\": \"<number>\",\n                      \"p5\": \"<number>\",\n                      \"p6\": \"<number>\"\n                    },\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  }\n                },\n                \"aggregated_score\": [\n                  {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  }\n                ]\n              },\n              \"ml_federated_metrics\": {\n                \"in9a\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                },\n                \"labore_e\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                },\n                \"esse_d\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                }\n              },\n              \"context\": {\n                \"deployment_id\": \"<string>\",\n                \"intermediate_model\": {\n                  \"name\": \"<string>\",\n                  \"process\": \"<string>\",\n                  \"location\": {\n                    \"pipeline\": \"<string>\",\n                    \"pipeline_model\": \"<string>\",\n                    \"model\": \"<string>\"\n                  },\n                  \"notebook_location\": \"<string>\",\n                  \"sdk_notebook_location\": \"<string>\",\n                  \"pipeline_nodes\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"composition_steps\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"duration\": \"<integer>\",\n                  \"model_asset\": \"<string>\"\n                },\n                \"phase\": \"<string>\",\n                \"step\": {\n                  \"name\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"started_at\": \"<dateTime>\",\n                  \"completed_at\": \"<dateTime>\",\n                  \"hyper_parameters\": {},\n                  \"data_allocation\": \"<integer>\",\n                  \"estimator\": \"<string>\",\n                  \"transformer\": \"<string>\",\n                  \"score\": \"<number>\"\n                },\n                \"binary_classification\": {\n                  \"confusion_matrices\": [\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    }\n                  ],\n                  \"roc_curves\": [\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    }\n                  ]\n                },\n                \"multi_class_classification\": {\n                  \"one_vs_all\": [\n                    {\n                      \"class\": \"<string>\",\n                      \"confusion_matrix\": {\n                        \"true_class\": \"<string>\",\n                        \"tp\": \"<integer>\",\n                        \"tn\": \"<integer>\",\n                        \"fp\": \"<integer>\",\n                        \"fn\": \"<integer>\"\n                      },\n                      \"roc_curve\": {\n                        \"true_class\": \"<string>\",\n                        \"tpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"fpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"thresholds\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ]\n                      },\n                      \"confusion_matrix_location\": \"<string>\",\n                      \"roc_curve_location\": \"<string>\"\n                    },\n                    {\n                      \"class\": \"<string>\",\n                      \"confusion_matrix\": {\n                        \"true_class\": \"<string>\",\n                        \"tp\": \"<integer>\",\n                        \"tn\": \"<integer>\",\n                        \"fp\": \"<integer>\",\n                        \"fn\": \"<integer>\"\n                      },\n                      \"roc_curve\": {\n                        \"true_class\": \"<string>\",\n                        \"tpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"fpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"thresholds\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ]\n                      },\n                      \"confusion_matrix_location\": \"<string>\",\n                      \"roc_curve_location\": \"<string>\"\n                    }\n                  ],\n                  \"one_vs_all_location\": \"<string>\"\n                },\n                \"features_importance\": [\n                  {\n                    \"stage\": \"<string>\",\n                    \"computation_type\": \"<string>\",\n                    \"features\": {}\n                  },\n                  {\n                    \"stage\": \"<string>\",\n                    \"computation_type\": \"<string>\",\n                    \"features\": {}\n                  }\n                ],\n                \"schema\": \"<string>\",\n                \"estimators\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"incremental_training\": {\n                  \"iteration\": \"<integer>\",\n                  \"total_iterations\": \"<integer>\",\n                  \"measures_location\": \"<string>\",\n                  \"train_batch_samples_count\": \"<integer>\",\n                  \"holdout_samples_count\": \"<integer>\",\n                  \"early_stop_triggered\": \"<boolean>\"\n                },\n                \"prediction_type\": \"regression\"\n              }\n            },\n            {\n              \"timestamp\": \"<dateTime>\",\n              \"iteration\": \"<integer>\",\n              \"ml_metrics\": {\n                \"add\": \"<number>\"\n              },\n              \"ts_metrics\": {\n                \"training\": {\n                  \"neg_symmetric_mean_absolute_percentage_error\": \"<number>\"\n                }\n              },\n              \"tsad_metrics\": {\n                \"iterations\": [\n                  {\n                    \"average_precision\": {\n                      \"localized_extreme\": \"<number>\",\n                      \"level_shift\": \"<number>\",\n                      \"variance\": \"<number>\",\n                      \"trend\": \"<number>\"\n                    },\n                    \"roc_auc\": {},\n                    \"f1\": {},\n                    \"precision\": {},\n                    \"recall\": {}\n                  },\n                  {\n                    \"average_precision\": {\n                      \"localized_extreme\": \"<number>\",\n                      \"level_shift\": \"<number>\",\n                      \"variance\": \"<number>\",\n                      \"trend\": \"<number>\"\n                    },\n                    \"roc_auc\": {},\n                    \"f1\": {},\n                    \"precision\": {},\n                    \"recall\": {}\n                  }\n                ],\n                \"agg\": {\n                  \"average_precision\": {\n                    \"level_shift\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"localized_extreme\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"trend\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    \"variance\": {\n                      \"mean\": \"<number>\",\n                      \"range\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    }\n                  },\n                  \"f1\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"precision\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"recall\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  },\n                  \"roc_auc\": {\n                    \"level_shift\": {},\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  }\n                },\n                \"supporting_rank\": {\n                  \"average_precision\": {\n                    \"level_shift\": {\n                      \"p1\": \"<number>\",\n                      \"p2\": \"<number>\",\n                      \"p3\": \"<number>\",\n                      \"p4\": \"<number>\",\n                      \"p5\": \"<number>\",\n                      \"p6\": \"<number>\"\n                    },\n                    \"localized_extreme\": {},\n                    \"trend\": {},\n                    \"variance\": {}\n                  }\n                },\n                \"aggregated_score\": [\n                  {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  },\n                  {\n                    \"p1\": \"<number>\",\n                    \"p2\": \"<number>\",\n                    \"p3\": \"<number>\",\n                    \"p4\": \"<number>\",\n                    \"p5\": \"<number>\",\n                    \"p6\": \"<number>\"\n                  }\n                ]\n              },\n              \"ml_federated_metrics\": {\n                \"aute_d\": {\n                  \"remote_training_systems\": [\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    },\n                    {\n                      \"id\": \"<string>\",\n                      \"local\": \"<number>\",\n                      \"fused\": \"<number>\"\n                    }\n                  ],\n                  \"global\": \"<number>\"\n                }\n              },\n              \"context\": {\n                \"deployment_id\": \"<string>\",\n                \"intermediate_model\": {\n                  \"name\": \"<string>\",\n                  \"process\": \"<string>\",\n                  \"location\": {\n                    \"pipeline\": \"<string>\",\n                    \"pipeline_model\": \"<string>\",\n                    \"model\": \"<string>\"\n                  },\n                  \"notebook_location\": \"<string>\",\n                  \"sdk_notebook_location\": \"<string>\",\n                  \"pipeline_nodes\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"composition_steps\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"duration\": \"<integer>\",\n                  \"model_asset\": \"<string>\"\n                },\n                \"phase\": \"<string>\",\n                \"step\": {\n                  \"name\": \"<string>\",\n                  \"id\": \"<string>\",\n                  \"started_at\": \"<dateTime>\",\n                  \"completed_at\": \"<dateTime>\",\n                  \"hyper_parameters\": {},\n                  \"data_allocation\": \"<integer>\",\n                  \"estimator\": \"<string>\",\n                  \"transformer\": \"<string>\",\n                  \"score\": \"<number>\"\n                },\n                \"binary_classification\": {\n                  \"confusion_matrices\": [\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    },\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tp\": \"<integer>\",\n                      \"tn\": \"<integer>\",\n                      \"fp\": \"<integer>\",\n                      \"fn\": \"<integer>\"\n                    }\n                  ],\n                  \"roc_curves\": [\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    },\n                    {\n                      \"true_class\": \"<string>\",\n                      \"tpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"fpr\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ],\n                      \"thresholds\": [\n                        \"<number>\",\n                        \"<number>\"\n                      ]\n                    }\n                  ]\n                },\n                \"multi_class_classification\": {\n                  \"one_vs_all\": [\n                    {\n                      \"class\": \"<string>\",\n                      \"confusion_matrix\": {\n                        \"true_class\": \"<string>\",\n                        \"tp\": \"<integer>\",\n                        \"tn\": \"<integer>\",\n                        \"fp\": \"<integer>\",\n                        \"fn\": \"<integer>\"\n                      },\n                      \"roc_curve\": {\n                        \"true_class\": \"<string>\",\n                        \"tpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"fpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"thresholds\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ]\n                      },\n                      \"confusion_matrix_location\": \"<string>\",\n                      \"roc_curve_location\": \"<string>\"\n                    },\n                    {\n                      \"class\": \"<string>\",\n                      \"confusion_matrix\": {\n                        \"true_class\": \"<string>\",\n                        \"tp\": \"<integer>\",\n                        \"tn\": \"<integer>\",\n                        \"fp\": \"<integer>\",\n                        \"fn\": \"<integer>\"\n                      },\n                      \"roc_curve\": {\n                        \"true_class\": \"<string>\",\n                        \"tpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"fpr\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ],\n                        \"thresholds\": [\n                          \"<number>\",\n                          \"<number>\"\n                        ]\n                      },\n                      \"confusion_matrix_location\": \"<string>\",\n                      \"roc_curve_location\": \"<string>\"\n                    }\n                  ],\n                  \"one_vs_all_location\": \"<string>\"\n                },\n                \"features_importance\": [\n                  {\n                    \"stage\": \"<string>\",\n                    \"computation_type\": \"<string>\",\n                    \"features\": {}\n                  },\n                  {\n                    \"stage\": \"<string>\",\n                    \"computation_type\": \"<string>\",\n                    \"features\": {}\n                  }\n                ],\n                \"schema\": \"<string>\",\n                \"estimators\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"incremental_training\": {\n                  \"iteration\": \"<integer>\",\n                  \"total_iterations\": \"<integer>\",\n                  \"measures_location\": \"<string>\",\n                  \"train_batch_samples_count\": \"<integer>\",\n                  \"holdout_samples_count\": \"<integer>\",\n                  \"early_stop_triggered\": \"<boolean>\"\n                },\n                \"prediction_type\": \"multiclass\"\n              }\n            }\n          ],\n          \"failure\": {\n            \"trace\": \"<string>\",\n            \"errors\": [\n              {\n                \"code\": \"<string>\",\n                \"message\": \"<string>\",\n                \"more_info\": \"<string>\"\n              },\n              {\n                \"code\": \"<string>\",\n                \"message\": \"<string>\",\n                \"more_info\": \"<string>\"\n              }\n            ]\n          }\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?start=<string>&limit=100&total_count=<boolean>&tag.value=<string>&type=<string>&state=<string>&space_id=<string>&project_id=<string>&parent_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user. It is generated by the service and it is set in the href available in the `next` field."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. Default value is 100. Max value is 200."
														},
														{
															"key": "total_count",
															"value": "<boolean>",
															"description": "Compute the total count. May have performance impact."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag value."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter based on 'pipeline' or 'experiment' trainings. Example: `type=pipeline`. If not provided, returns all the trainings.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the training job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "parent_id",
															"value": "<string>",
															"description": "Return the training jobs that are sub-jobs of this parent_id job. The parent_id can be the experiment job ID.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?start=<string>&limit=100&total_count=<boolean>&tag.value=<string>&type=<string>&state=<string>&space_id=<string>&project_id=<string>&parent_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user. It is generated by the service and it is set in the href available in the `next` field."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. Default value is 100. Max value is 200."
														},
														{
															"key": "total_count",
															"value": "<boolean>",
															"description": "Compute the total count. May have performance impact."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag value."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter based on 'pipeline' or 'experiment' trainings. Example: `type=pipeline`. If not provided, returns all the trainings.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the training job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "parent_id",
															"value": "<string>",
															"description": "Return the training jobs that are sub-jobs of this parent_id job. The parent_id can be the experiment job ID.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?start=<string>&limit=100&total_count=<boolean>&tag.value=<string>&type=<string>&state=<string>&space_id=<string>&project_id=<string>&parent_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user. It is generated by the service and it is set in the href available in the `next` field."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. Default value is 100. Max value is 200."
														},
														{
															"key": "total_count",
															"value": "<boolean>",
															"description": "Compute the total count. May have performance impact."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag value."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter based on 'pipeline' or 'experiment' trainings. Example: `type=pipeline`. If not provided, returns all the trainings.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the training job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "parent_id",
															"value": "<string>",
															"description": "Return the training jobs that are sub-jobs of this parent_id job. The parent_id can be the experiment job ID.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/trainings?start=<string>&limit=100&total_count=<boolean>&tag.value=<string>&type=<string>&state=<string>&space_id=<string>&project_id=<string>&parent_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"trainings"
													],
													"query": [
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user. It is generated by the service and it is set in the href available in the `next` field."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. Default value is 100. Max value is 200."
														},
														{
															"key": "total_count",
															"value": "<boolean>",
															"description": "Compute the total count. May have performance impact."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag value."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter based on 'pipeline' or 'experiment' trainings. Example: `type=pipeline`. If not provided, returns all the trainings.\n"
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "Filter based on on the training job state: queued, running, completed, failed etc.\n"
														},
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "parent_id",
															"value": "<string>",
															"description": "Return the training jobs that are sub-jobs of this parent_id job. The parent_id can be the experiment job ID.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "training_definitions",
							"item": [
								{
									"name": "{training_definition_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "Create a new training definition revision",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id",
																"revisions"
															],
															"query": [
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id",
																	"value": "<string>",
																	"description": "(Required) Training definition identifier.\n"
																}
															]
														},
														"description": "Create a new training definition revision.\nThe current metadata and content for\ntraining_definition_id will be taken and a new revision created.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n"
													},
													"response": [
														{
															"name": "Training definition revision created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Location",
																	"value": "<string>",
																	"description": {
																		"content": "The location of the new created resource (training definition artifact),\ne.g. `/ml/v4/459afef1-252f-424b-b52d-5cdd98128fa3/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"results_reference\": {\n      \"type\": \"connection_asset\",\n      \"location\": {\n        \"nulla0\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"connection\": {}\n    },\n    \"experiment\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"data_bindings\": [\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        },\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        }\n      ],\n      \"nodes_parameters\": [\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        },\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        }\n      ],\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"hybrid_pipeline_hardware_specs\": [\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        },\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        }\n      ]\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"command\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"federated_learning\": {\n      \"remote_training\": {\n        \"remote_training_systems\": [\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          }\n        ],\n        \"quorum\": \"<double>\",\n        \"max_timeout\": \"<integer>\"\n      },\n      \"fusion_type\": \"avg\",\n      \"model\": {\n        \"type\": \"keras\",\n        \"spec\": {\n          \"href\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        },\n        \"model_file\": \"<string>\"\n      },\n      \"rounds\": \"<integer>\",\n      \"termination_predicate\": \"<string>\",\n      \"epochs\": \"<integer>\",\n      \"optimizer\": {\n        \"name\": \"<string>\",\n        \"spec\": {}\n      },\n      \"loss\": \"<string>\",\n      \"metrics\": \"<string>\",\n      \"max_depth\": \"<integer>\",\n      \"learning_rate\": \"<double>\",\n      \"l2_regularization\": \"<double>\",\n      \"max_bins\": \"<integer>\",\n      \"max_leaf_nodes\": \"<integer>\",\n      \"min_samples_leaf\": \"<integer>\",\n      \"random_state\": \"<integer>\",\n      \"verbose\": \"<boolean>\",\n      \"num_classes\": \"<integer>\",\n      \"byzantine_threshold\": \"<integer>\",\n      \"sigma\": \"<double>\",\n      \"sigma0\": \"<double>\",\n      \"gamma\": \"<double>\",\n      \"iters\": \"<integer>\",\n      \"save_intermediate_models\": \"<boolean>\",\n      \"crypto\": {\n        \"cipher_spec\": \"encryption_level_1\"\n      },\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<string>\",\n      \"log_level\": \"debug\",\n      \"sketch_accuracy_vs_privacy\": 0.01\n    },\n    \"training_data_references\": [\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"Ut0d\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"eu_5\": \"<string>\",\n          \"aliquip_3\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"elitb8\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"connection_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"dolor_\": \"<string>\",\n          \"cupidatat_3c5\": \"<string>\",\n          \"adipisicing_ea2\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"Loremce\": 10930858.322486341,\n      \"laborum_772\": -41850569\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"space_id\": \"<string>\",\n  \"project_id\": \"<string>\",\n  \"commit_message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Retrieve the training definition revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id",
																"revisions"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "start",
																	"value": "<string>",
																	"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																},
																{
																	"key": "limit",
																	"value": "100",
																	"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id",
																	"value": "<string>",
																	"description": "(Required) Training definition identifier.\n"
																}
															]
														},
														"description": "Retrieve the training definition revisions.\n"
													},
													"response": [
														{
															"name": "Training definition revisions",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"results_reference\": {\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"quid5\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"connection\": {}\n        },\n        \"experiment\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"command\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"federated_learning\": {\n          \"remote_training\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              }\n            ],\n            \"quorum\": \"<double>\",\n            \"max_timeout\": \"<integer>\"\n          },\n          \"fusion_type\": \"xgb_classifier\",\n          \"model\": {\n            \"type\": \"sklearn_sgd\",\n            \"spec\": {\n              \"href\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\"\n              }\n            },\n            \"model_file\": \"<string>\"\n          },\n          \"rounds\": \"<integer>\",\n          \"termination_predicate\": \"<string>\",\n          \"epochs\": \"<integer>\",\n          \"optimizer\": {\n            \"name\": \"<string>\",\n            \"spec\": {}\n          },\n          \"loss\": \"<string>\",\n          \"metrics\": \"<string>\",\n          \"max_depth\": \"<integer>\",\n          \"learning_rate\": \"<double>\",\n          \"l2_regularization\": \"<double>\",\n          \"max_bins\": \"<integer>\",\n          \"max_leaf_nodes\": \"<integer>\",\n          \"min_samples_leaf\": \"<integer>\",\n          \"random_state\": \"<integer>\",\n          \"verbose\": \"<boolean>\",\n          \"num_classes\": \"<integer>\",\n          \"byzantine_threshold\": \"<integer>\",\n          \"sigma\": \"<double>\",\n          \"sigma0\": \"<double>\",\n          \"gamma\": \"<double>\",\n          \"iters\": \"<integer>\",\n          \"save_intermediate_models\": \"<boolean>\",\n          \"crypto\": {\n            \"cipher_spec\": \"encryption_level_1\"\n          },\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"version\": \"<string>\",\n          \"log_level\": \"debug\",\n          \"sketch_accuracy_vs_privacy\": 0.01\n        },\n        \"training_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"anim6_\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"inc5\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"incididunt682\": \"<string>\",\n              \"eiusmod_4\": \"<string>\",\n              \"officia_3\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"sunt2\": \"<string>\",\n              \"dolore978\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"commodod\": 16293990\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"results_reference\": {\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"reprehenderit804\": \"<string>\",\n            \"anim_727\": \"<string>\",\n            \"fugiat_d1\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"connection\": {}\n        },\n        \"experiment\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"command\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"federated_learning\": {\n          \"remote_training\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              }\n            ],\n            \"quorum\": \"<double>\",\n            \"max_timeout\": \"<integer>\"\n          },\n          \"fusion_type\": \"pfnm\",\n          \"model\": {\n            \"type\": \"sklearn_sgd\",\n            \"spec\": {\n              \"href\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\"\n              }\n            },\n            \"model_file\": \"<string>\"\n          },\n          \"rounds\": \"<integer>\",\n          \"termination_predicate\": \"<string>\",\n          \"epochs\": \"<integer>\",\n          \"optimizer\": {\n            \"name\": \"<string>\",\n            \"spec\": {}\n          },\n          \"loss\": \"<string>\",\n          \"metrics\": \"<string>\",\n          \"max_depth\": \"<integer>\",\n          \"learning_rate\": \"<double>\",\n          \"l2_regularization\": \"<double>\",\n          \"max_bins\": \"<integer>\",\n          \"max_leaf_nodes\": \"<integer>\",\n          \"min_samples_leaf\": \"<integer>\",\n          \"random_state\": \"<integer>\",\n          \"verbose\": \"<boolean>\",\n          \"num_classes\": \"<integer>\",\n          \"byzantine_threshold\": \"<integer>\",\n          \"sigma\": \"<double>\",\n          \"sigma0\": \"<double>\",\n          \"gamma\": \"<double>\",\n          \"iters\": \"<integer>\",\n          \"save_intermediate_models\": \"<boolean>\",\n          \"crypto\": {\n            \"cipher_spec\": \"encryption_level_4\"\n          },\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"version\": \"<string>\",\n          \"log_level\": \"critical\",\n          \"sketch_accuracy_vs_privacy\": 0.01\n        },\n        \"training_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"elit_7\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"fugiatd\": \"<string>\",\n              \"esse_d\": \"<string>\",\n              \"culpa_07\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"incididunte6b\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"dolor__e4\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"voluptatea82\": \"ut Ut sed quis Lorem\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Bad request, the response body should contain the reason.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "The specified resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id/revisions?space_id=<string>&project_id=<string>&start=<string>&limit=100&version=<date>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ml",
																		"v4",
																		"training_definitions",
																		":training_definition_id",
																		"revisions"
																	],
																	"query": [
																		{
																			"key": "space_id",
																			"value": "<string>",
																			"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "project_id",
																			"value": "<string>",
																			"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																		},
																		{
																			"key": "start",
																			"value": "<string>",
																			"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
																		},
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
																		},
																		{
																			"key": "version",
																			"value": "<date>",
																			"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "training_definition_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve the training definition",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions",
														":training_definition_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "rev",
															"value": "<string>",
															"description": "The revision number of the resource.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "training_definition_id",
															"value": "<string>",
															"description": "(Required) Training definition identifier.\n"
														}
													]
												},
												"description": "Retrieve the training definition with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given\nrevision_number record. Either `space_id` or `project_id` has to be provided and is mandatory.\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"results_reference\": {\n      \"type\": \"connection_asset\",\n      \"location\": {\n        \"nulla0\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"connection\": {}\n    },\n    \"experiment\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"data_bindings\": [\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        },\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        }\n      ],\n      \"nodes_parameters\": [\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        },\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        }\n      ],\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"hybrid_pipeline_hardware_specs\": [\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        },\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        }\n      ]\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"command\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"federated_learning\": {\n      \"remote_training\": {\n        \"remote_training_systems\": [\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          }\n        ],\n        \"quorum\": \"<double>\",\n        \"max_timeout\": \"<integer>\"\n      },\n      \"fusion_type\": \"avg\",\n      \"model\": {\n        \"type\": \"keras\",\n        \"spec\": {\n          \"href\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        },\n        \"model_file\": \"<string>\"\n      },\n      \"rounds\": \"<integer>\",\n      \"termination_predicate\": \"<string>\",\n      \"epochs\": \"<integer>\",\n      \"optimizer\": {\n        \"name\": \"<string>\",\n        \"spec\": {}\n      },\n      \"loss\": \"<string>\",\n      \"metrics\": \"<string>\",\n      \"max_depth\": \"<integer>\",\n      \"learning_rate\": \"<double>\",\n      \"l2_regularization\": \"<double>\",\n      \"max_bins\": \"<integer>\",\n      \"max_leaf_nodes\": \"<integer>\",\n      \"min_samples_leaf\": \"<integer>\",\n      \"random_state\": \"<integer>\",\n      \"verbose\": \"<boolean>\",\n      \"num_classes\": \"<integer>\",\n      \"byzantine_threshold\": \"<integer>\",\n      \"sigma\": \"<double>\",\n      \"sigma0\": \"<double>\",\n      \"gamma\": \"<double>\",\n      \"iters\": \"<integer>\",\n      \"save_intermediate_models\": \"<boolean>\",\n      \"crypto\": {\n        \"cipher_spec\": \"encryption_level_1\"\n      },\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<string>\",\n      \"log_level\": \"debug\",\n      \"sketch_accuracy_vs_privacy\": 0.01\n    },\n    \"training_data_references\": [\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"Ut0d\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"eu_5\": \"<string>\",\n          \"aliquip_3\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"elitb8\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"connection_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"dolor_\": \"<string>\",\n          \"cupidatat_3c5\": \"<string>\",\n          \"adipisicing_ea2\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"Loremce\": 10930858.322486341,\n      \"laborum_772\": -41850569\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&rev=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "rev",
																	"value": "<string>",
																	"description": "The revision number of the resource.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the training definition",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions",
														":training_definition_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "training_definition_id",
															"value": "<string>",
															"description": "(Required) Training definition identifier.\n"
														}
													]
												},
												"description": "Update the training definition with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n- `/federated_learning`\n"
											},
											"response": [
												{
													"name": "Training definition has been patched successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"results_reference\": {\n      \"type\": \"connection_asset\",\n      \"location\": {\n        \"nulla0\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"connection\": {}\n    },\n    \"experiment\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"data_bindings\": [\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        },\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        }\n      ],\n      \"nodes_parameters\": [\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        },\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        }\n      ],\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"hybrid_pipeline_hardware_specs\": [\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        },\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        }\n      ]\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"command\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"federated_learning\": {\n      \"remote_training\": {\n        \"remote_training_systems\": [\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          }\n        ],\n        \"quorum\": \"<double>\",\n        \"max_timeout\": \"<integer>\"\n      },\n      \"fusion_type\": \"avg\",\n      \"model\": {\n        \"type\": \"keras\",\n        \"spec\": {\n          \"href\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        },\n        \"model_file\": \"<string>\"\n      },\n      \"rounds\": \"<integer>\",\n      \"termination_predicate\": \"<string>\",\n      \"epochs\": \"<integer>\",\n      \"optimizer\": {\n        \"name\": \"<string>\",\n        \"spec\": {}\n      },\n      \"loss\": \"<string>\",\n      \"metrics\": \"<string>\",\n      \"max_depth\": \"<integer>\",\n      \"learning_rate\": \"<double>\",\n      \"l2_regularization\": \"<double>\",\n      \"max_bins\": \"<integer>\",\n      \"max_leaf_nodes\": \"<integer>\",\n      \"min_samples_leaf\": \"<integer>\",\n      \"random_state\": \"<integer>\",\n      \"verbose\": \"<boolean>\",\n      \"num_classes\": \"<integer>\",\n      \"byzantine_threshold\": \"<integer>\",\n      \"sigma\": \"<double>\",\n      \"sigma0\": \"<double>\",\n      \"gamma\": \"<double>\",\n      \"iters\": \"<integer>\",\n      \"save_intermediate_models\": \"<boolean>\",\n      \"crypto\": {\n        \"cipher_spec\": \"encryption_level_1\"\n      },\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<string>\",\n      \"log_level\": \"debug\",\n      \"sketch_accuracy_vs_privacy\": 0.01\n    },\n    \"training_data_references\": [\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"Ut0d\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"eu_5\": \"<string>\",\n          \"aliquip_3\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"elitb8\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"connection_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"dolor_\": \"<string>\",\n          \"cupidatat_3c5\": \"<string>\",\n          \"adipisicing_ea2\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"Loremce\": 10930858.322486341,\n      \"laborum_772\": -41850569\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  },\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"The value to be used within the operation.\\n\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete the training definition",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions",
														":training_definition_id"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													],
													"variable": [
														{
															"key": "training_definition_id",
															"value": "<string>",
															"description": "(Required) Training definition identifier.\n"
														}
													]
												},
												"description": "Delete the training definition with the specified identifier. This will delete all revisions of\nthis training definition as well. For each revision all attachments will also be deleted.\n"
											},
											"response": [
												{
													"name": "Training definition deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request, the response body should contain the reason.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The specified resource was not found.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ml/v4/training_definitions/:training_definition_id?space_id=<string>&project_id=<string>&version=<date>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ml",
																"v4",
																"training_definitions",
																":training_definition_id"
															],
															"query": [
																{
																	"key": "space_id",
																	"value": "<string>",
																	"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "project_id",
																	"value": "<string>",
																	"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
																},
																{
																	"key": "version",
																	"value": "<date>",
																	"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
																}
															],
															"variable": [
																{
																	"key": "training_definition_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a new training definition",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"results_reference\": {\n    \"type\": \"url\",\n    \"location\": {\n      \"culpae79\": \"<string>\",\n      \"ex8\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"xgb_classifier\",\n    \"model\": {\n      \"type\": \"sklearn\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"debug\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sunt20\": \"<string>\",\n        \"labore_e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sintdde\": \"<string>\",\n        \"exercitation_e\": \"<string>\",\n        \"ipsum_d\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"url\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"fugiat_78\": \"<string>\",\n        \"officia__1e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"consequat6\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sed16\": \"veniam\",\n    \"irure61\": -83014661\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ml/v4/training_definitions?version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"training_definitions"
											],
											"query": [
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Create a new training definition with the given payload. A training definition represents the training meta-data necessary to start a training job.\n"
									},
									"response": [
										{
											"name": "Training definition created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"results_reference\": {\n    \"type\": \"url\",\n    \"location\": {\n      \"culpae79\": \"<string>\",\n      \"ex8\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"xgb_classifier\",\n    \"model\": {\n      \"type\": \"sklearn\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"debug\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sunt20\": \"<string>\",\n        \"labore_e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sintdde\": \"<string>\",\n        \"exercitation_e\": \"<string>\",\n        \"ipsum_d\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"url\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"fugiat_78\": \"<string>\",\n        \"officia__1e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"consequat6\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sed16\": \"veniam\",\n    \"irure61\": -83014661\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The location of the new training definition artifact,\ne.g. `/ml/v4/training_definitions/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"rev\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"modified_at\": \"<dateTime>\",\n    \"parent_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"commit_info\": {\n      \"committed_at\": \"<dateTime>\",\n      \"commit_message\": \"<string>\"\n    },\n    \"space_id\": \"<string>\",\n    \"project_id\": \"<string>\"\n  },\n  \"entity\": {\n    \"results_reference\": {\n      \"type\": \"connection_asset\",\n      \"location\": {\n        \"nulla0\": \"<string>\"\n      },\n      \"id\": \"<string>\",\n      \"connection\": {}\n    },\n    \"experiment\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\"\n    },\n    \"pipeline\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"data_bindings\": [\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        },\n        {\n          \"data_reference_name\": \"<string>\",\n          \"node_id\": \"<string>\"\n        }\n      ],\n      \"nodes_parameters\": [\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        },\n        {\n          \"node_id\": \"<string>\",\n          \"parameters\": {}\n        }\n      ],\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"hybrid_pipeline_hardware_specs\": [\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        },\n        {\n          \"node_runtime_id\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          }\n        }\n      ]\n    },\n    \"model_definition\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"model_type\": \"<string>\",\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"command\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"federated_learning\": {\n      \"remote_training\": {\n        \"remote_training_systems\": [\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"required\": \"<boolean>\"\n          }\n        ],\n        \"quorum\": \"<double>\",\n        \"max_timeout\": \"<integer>\"\n      },\n      \"fusion_type\": \"avg\",\n      \"model\": {\n        \"type\": \"keras\",\n        \"spec\": {\n          \"href\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\"\n          }\n        },\n        \"model_file\": \"<string>\"\n      },\n      \"rounds\": \"<integer>\",\n      \"termination_predicate\": \"<string>\",\n      \"epochs\": \"<integer>\",\n      \"optimizer\": {\n        \"name\": \"<string>\",\n        \"spec\": {}\n      },\n      \"loss\": \"<string>\",\n      \"metrics\": \"<string>\",\n      \"max_depth\": \"<integer>\",\n      \"learning_rate\": \"<double>\",\n      \"l2_regularization\": \"<double>\",\n      \"max_bins\": \"<integer>\",\n      \"max_leaf_nodes\": \"<integer>\",\n      \"min_samples_leaf\": \"<integer>\",\n      \"random_state\": \"<integer>\",\n      \"verbose\": \"<boolean>\",\n      \"num_classes\": \"<integer>\",\n      \"byzantine_threshold\": \"<integer>\",\n      \"sigma\": \"<double>\",\n      \"sigma0\": \"<double>\",\n      \"gamma\": \"<double>\",\n      \"iters\": \"<integer>\",\n      \"save_intermediate_models\": \"<boolean>\",\n      \"crypto\": {\n        \"cipher_spec\": \"encryption_level_1\"\n      },\n      \"hardware_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\",\n        \"num_nodes\": \"<integer>\"\n      },\n      \"software_spec\": {\n        \"id\": \"<string>\",\n        \"rev\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"version\": \"<string>\",\n      \"log_level\": \"debug\",\n      \"sketch_accuracy_vs_privacy\": 0.01\n    },\n    \"training_data_references\": [\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"Ut0d\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"url\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"eu_5\": \"<string>\",\n          \"aliquip_3\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"test_data_references\": [\n      {\n        \"type\": \"container\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"elitb8\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      {\n        \"type\": \"connection_asset\",\n        \"id\": \"<string>\",\n        \"connection\": {},\n        \"location\": {\n          \"dolor_\": \"<string>\",\n          \"cupidatat_3c5\": \"<string>\",\n          \"adipisicing_ea2\": \"<string>\"\n        },\n        \"schema\": {\n          \"id\": \"<string>\",\n          \"fields\": [],\n          \"name\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      }\n    ],\n    \"custom\": {\n      \"Loremce\": 10930858.322486341,\n      \"laborum_772\": -41850569\n    }\n  },\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"results_reference\": {\n    \"type\": \"url\",\n    \"location\": {\n      \"culpae79\": \"<string>\",\n      \"ex8\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"xgb_classifier\",\n    \"model\": {\n      \"type\": \"sklearn\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"debug\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sunt20\": \"<string>\",\n        \"labore_e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sintdde\": \"<string>\",\n        \"exercitation_e\": \"<string>\",\n        \"ipsum_d\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"url\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"fugiat_78\": \"<string>\",\n        \"officia__1e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"consequat6\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sed16\": \"veniam\",\n    \"irure61\": -83014661\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"results_reference\": {\n    \"type\": \"url\",\n    \"location\": {\n      \"culpae79\": \"<string>\",\n      \"ex8\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"xgb_classifier\",\n    \"model\": {\n      \"type\": \"sklearn\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"debug\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sunt20\": \"<string>\",\n        \"labore_e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sintdde\": \"<string>\",\n        \"exercitation_e\": \"<string>\",\n        \"ipsum_d\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"url\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"fugiat_78\": \"<string>\",\n        \"officia__1e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"consequat6\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sed16\": \"veniam\",\n    \"irure61\": -83014661\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"results_reference\": {\n    \"type\": \"url\",\n    \"location\": {\n      \"culpae79\": \"<string>\",\n      \"ex8\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"xgb_classifier\",\n    \"model\": {\n      \"type\": \"sklearn\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"debug\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sunt20\": \"<string>\",\n        \"labore_e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sintdde\": \"<string>\",\n        \"exercitation_e\": \"<string>\",\n        \"ipsum_d\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"url\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"fugiat_78\": \"<string>\",\n        \"officia__1e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"consequat6\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sed16\": \"veniam\",\n    \"irure61\": -83014661\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"results_reference\": {\n    \"type\": \"url\",\n    \"location\": {\n      \"culpae79\": \"<string>\",\n      \"ex8\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"connection\": {}\n  },\n  \"project_id\": \"<string>\",\n  \"space_id\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"experiment\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\"\n  },\n  \"pipeline\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"data_bindings\": [\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      },\n      {\n        \"data_reference_name\": \"<string>\",\n        \"node_id\": \"<string>\"\n      }\n    ],\n    \"nodes_parameters\": [\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      },\n      {\n        \"node_id\": \"<string>\",\n        \"parameters\": {}\n      }\n    ],\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"hybrid_pipeline_hardware_specs\": [\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      },\n      {\n        \"node_runtime_id\": \"<string>\",\n        \"hardware_spec\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"name\": \"<string>\",\n          \"num_nodes\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"model_definition\": {\n    \"id\": \"<string>\",\n    \"rev\": \"<string>\",\n    \"model_type\": \"<string>\",\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"command\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"federated_learning\": {\n    \"remote_training\": {\n      \"remote_training_systems\": [\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"quorum\": \"<double>\",\n      \"max_timeout\": \"<integer>\"\n    },\n    \"fusion_type\": \"xgb_classifier\",\n    \"model\": {\n      \"type\": \"sklearn\",\n      \"spec\": {\n        \"href\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        }\n      },\n      \"model_file\": \"<string>\"\n    },\n    \"rounds\": \"<integer>\",\n    \"termination_predicate\": \"<string>\",\n    \"epochs\": \"<integer>\",\n    \"optimizer\": {\n      \"name\": \"<string>\",\n      \"spec\": {}\n    },\n    \"loss\": \"<string>\",\n    \"metrics\": \"<string>\",\n    \"max_depth\": \"<integer>\",\n    \"learning_rate\": \"<double>\",\n    \"l2_regularization\": \"<double>\",\n    \"max_bins\": \"<integer>\",\n    \"max_leaf_nodes\": \"<integer>\",\n    \"min_samples_leaf\": \"<integer>\",\n    \"random_state\": \"<integer>\",\n    \"verbose\": \"<boolean>\",\n    \"num_classes\": \"<integer>\",\n    \"byzantine_threshold\": \"<integer>\",\n    \"sigma\": \"<double>\",\n    \"sigma0\": \"<double>\",\n    \"gamma\": \"<double>\",\n    \"iters\": \"<integer>\",\n    \"save_intermediate_models\": \"<boolean>\",\n    \"crypto\": {\n      \"cipher_spec\": \"encryption_level_4\"\n    },\n    \"hardware_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\",\n      \"num_nodes\": \"<integer>\"\n    },\n    \"software_spec\": {\n      \"id\": \"<string>\",\n      \"rev\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"version\": \"<string>\",\n    \"log_level\": \"debug\",\n    \"sketch_accuracy_vs_privacy\": 0.01\n  },\n  \"training_data_references\": [\n    {\n      \"type\": \"container\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sunt20\": \"<string>\",\n        \"labore_e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"data_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"sintdde\": \"<string>\",\n        \"exercitation_e\": \"<string>\",\n        \"ipsum_d\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"test_data_references\": [\n    {\n      \"type\": \"url\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"fugiat_78\": \"<string>\",\n        \"officia__1e\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"type\": \"connection_asset\",\n      \"id\": \"<string>\",\n      \"connection\": {},\n      \"location\": {\n        \"consequat6\": \"<string>\"\n      },\n      \"schema\": {\n        \"id\": \"<string>\",\n        \"fields\": [],\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ],\n  \"custom\": {\n    \"sed16\": \"veniam\",\n    \"irure61\": -83014661\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the training definitions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ml/v4/training_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ml",
												"v4",
												"training_definitions"
											],
											"query": [
												{
													"key": "space_id",
													"value": "<string>",
													"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "project_id",
													"value": "<string>",
													"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
												},
												{
													"key": "start",
													"value": "<string>",
													"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
												},
												{
													"key": "tag.value",
													"value": "<string>",
													"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
												},
												{
													"key": "version",
													"value": "<date>",
													"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
												}
											]
										},
										"description": "Retrieve the training definitions for the specified space or project.\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"limit\": \"<integer>\",\n  \"first\": {\n    \"href\": \"<string>\"\n  },\n  \"total_count\": \"<integer>\",\n  \"next\": {\n    \"href\": \"<string>\"\n  },\n  \"resources\": [\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"results_reference\": {\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"quid5\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"connection\": {}\n        },\n        \"experiment\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"command\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"federated_learning\": {\n          \"remote_training\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              }\n            ],\n            \"quorum\": \"<double>\",\n            \"max_timeout\": \"<integer>\"\n          },\n          \"fusion_type\": \"xgb_classifier\",\n          \"model\": {\n            \"type\": \"sklearn_sgd\",\n            \"spec\": {\n              \"href\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\"\n              }\n            },\n            \"model_file\": \"<string>\"\n          },\n          \"rounds\": \"<integer>\",\n          \"termination_predicate\": \"<string>\",\n          \"epochs\": \"<integer>\",\n          \"optimizer\": {\n            \"name\": \"<string>\",\n            \"spec\": {}\n          },\n          \"loss\": \"<string>\",\n          \"metrics\": \"<string>\",\n          \"max_depth\": \"<integer>\",\n          \"learning_rate\": \"<double>\",\n          \"l2_regularization\": \"<double>\",\n          \"max_bins\": \"<integer>\",\n          \"max_leaf_nodes\": \"<integer>\",\n          \"min_samples_leaf\": \"<integer>\",\n          \"random_state\": \"<integer>\",\n          \"verbose\": \"<boolean>\",\n          \"num_classes\": \"<integer>\",\n          \"byzantine_threshold\": \"<integer>\",\n          \"sigma\": \"<double>\",\n          \"sigma0\": \"<double>\",\n          \"gamma\": \"<double>\",\n          \"iters\": \"<integer>\",\n          \"save_intermediate_models\": \"<boolean>\",\n          \"crypto\": {\n            \"cipher_spec\": \"encryption_level_1\"\n          },\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"version\": \"<string>\",\n          \"log_level\": \"debug\",\n          \"sketch_accuracy_vs_privacy\": 0.01\n        },\n        \"training_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"anim6_\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"inc5\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"incididunt682\": \"<string>\",\n              \"eiusmod_4\": \"<string>\",\n              \"officia_3\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"sunt2\": \"<string>\",\n              \"dolore978\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"commodod\": 16293990\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    },\n    {\n      \"metadata\": {\n        \"id\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"rev\": \"<string>\",\n        \"owner\": \"<string>\",\n        \"modified_at\": \"<dateTime>\",\n        \"parent_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"commit_info\": {\n          \"committed_at\": \"<dateTime>\",\n          \"commit_message\": \"<string>\"\n        },\n        \"space_id\": \"<string>\",\n        \"project_id\": \"<string>\"\n      },\n      \"entity\": {\n        \"results_reference\": {\n          \"type\": \"data_asset\",\n          \"location\": {\n            \"reprehenderit804\": \"<string>\",\n            \"anim_727\": \"<string>\",\n            \"fugiat_d1\": \"<string>\"\n          },\n          \"id\": \"<string>\",\n          \"connection\": {}\n        },\n        \"experiment\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\"\n        },\n        \"pipeline\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"data_bindings\": [\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            },\n            {\n              \"data_reference_name\": \"<string>\",\n              \"node_id\": \"<string>\"\n            }\n          ],\n          \"nodes_parameters\": [\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            },\n            {\n              \"node_id\": \"<string>\",\n              \"parameters\": {}\n            }\n          ],\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"hybrid_pipeline_hardware_specs\": [\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            },\n            {\n              \"node_runtime_id\": \"<string>\",\n              \"hardware_spec\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\",\n                \"name\": \"<string>\",\n                \"num_nodes\": \"<integer>\"\n              }\n            }\n          ]\n        },\n        \"model_definition\": {\n          \"id\": \"<string>\",\n          \"rev\": \"<string>\",\n          \"model_type\": \"<string>\",\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"command\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"federated_learning\": {\n          \"remote_training\": {\n            \"remote_training_systems\": [\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"required\": \"<boolean>\"\n              }\n            ],\n            \"quorum\": \"<double>\",\n            \"max_timeout\": \"<integer>\"\n          },\n          \"fusion_type\": \"pfnm\",\n          \"model\": {\n            \"type\": \"sklearn_sgd\",\n            \"spec\": {\n              \"href\": {\n                \"id\": \"<string>\",\n                \"rev\": \"<string>\"\n              }\n            },\n            \"model_file\": \"<string>\"\n          },\n          \"rounds\": \"<integer>\",\n          \"termination_predicate\": \"<string>\",\n          \"epochs\": \"<integer>\",\n          \"optimizer\": {\n            \"name\": \"<string>\",\n            \"spec\": {}\n          },\n          \"loss\": \"<string>\",\n          \"metrics\": \"<string>\",\n          \"max_depth\": \"<integer>\",\n          \"learning_rate\": \"<double>\",\n          \"l2_regularization\": \"<double>\",\n          \"max_bins\": \"<integer>\",\n          \"max_leaf_nodes\": \"<integer>\",\n          \"min_samples_leaf\": \"<integer>\",\n          \"random_state\": \"<integer>\",\n          \"verbose\": \"<boolean>\",\n          \"num_classes\": \"<integer>\",\n          \"byzantine_threshold\": \"<integer>\",\n          \"sigma\": \"<double>\",\n          \"sigma0\": \"<double>\",\n          \"gamma\": \"<double>\",\n          \"iters\": \"<integer>\",\n          \"save_intermediate_models\": \"<boolean>\",\n          \"crypto\": {\n            \"cipher_spec\": \"encryption_level_4\"\n          },\n          \"hardware_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\",\n            \"num_nodes\": \"<integer>\"\n          },\n          \"software_spec\": {\n            \"id\": \"<string>\",\n            \"rev\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"version\": \"<string>\",\n          \"log_level\": \"critical\",\n          \"sketch_accuracy_vs_privacy\": 0.01\n        },\n        \"training_data_references\": [\n          {\n            \"type\": \"data_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"elit_7\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"fugiatd\": \"<string>\",\n              \"esse_d\": \"<string>\",\n              \"culpa_07\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"test_data_references\": [\n          {\n            \"type\": \"connection_asset\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"incididunte6b\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          {\n            \"type\": \"container\",\n            \"id\": \"<string>\",\n            \"connection\": {},\n            \"location\": {\n              \"dolor__e4\": \"<string>\"\n            },\n            \"schema\": {\n              \"id\": \"<string>\",\n              \"fields\": [],\n              \"name\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          }\n        ],\n        \"custom\": {\n          \"voluptatea82\": \"ut Ut sed quis Lorem\"\n        }\n      },\n      \"system\": {\n        \"warnings\": [\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          },\n          {\n            \"message\": \"<string>\",\n            \"id\": \"<string>\",\n            \"additional_properties\": {}\n          }\n        ]\n      }\n    }\n  ],\n  \"system\": {\n    \"warnings\": [\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      },\n      {\n        \"message\": \"<string>\",\n        \"id\": \"<string>\",\n        \"additional_properties\": {}\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request, the response body should contain the reason.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Forbidden, an authentication error including trying to access a forbidden space.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The specified resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ml/v4/training_definitions?space_id=<string>&project_id=<string>&start=<string>&limit=100&tag.value=<string>&search=<string>&version=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ml",
														"v4",
														"training_definitions"
													],
													"query": [
														{
															"key": "space_id",
															"value": "<string>",
															"description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n"
														},
														{
															"key": "start",
															"value": "<string>",
															"description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n"
														},
														{
															"key": "limit",
															"value": "100",
															"description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200."
														},
														{
															"key": "tag.value",
															"value": "<string>",
															"description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n"
														},
														{
															"key": "version",
															"value": "<date>",
															"description": "(Required) The version date for the API of the form `YYYY-MM-DD`.\n"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trace\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\",\n      \"more_info\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://us-south.ml.cloud.ibm.com",
			"type": "string"
		},
		{
			"key": "apiKey",
			"value": "BringYourOwn",
			"type": "string"
		},
		{
			"key": "projectId",
			"value": "BringYourOwn",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": ""
		}
	]
}